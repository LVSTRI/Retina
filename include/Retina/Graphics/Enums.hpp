#pragma once

/* This file was generated automatically, do not edit directly. */

#include <Retina/Core/Core.hpp>

#include <vulkan/vulkan.h>
#include <vulkan/vk_enum_string_helper.h>

#include <type_traits>

namespace Retina::Graphics {
  // VkResult
  enum class EResult : std::underlying_type_t<VkResult> {
    E_SUCCESS = VK_SUCCESS,
    E_NOT_READY = VK_NOT_READY,
    E_TIMEOUT = VK_TIMEOUT,
    E_EVENT_SET = VK_EVENT_SET,
    E_EVENT_RESET = VK_EVENT_RESET,
    E_INCOMPLETE = VK_INCOMPLETE,
    E_ERROR_OUT_OF_HOST_MEMORY = VK_ERROR_OUT_OF_HOST_MEMORY,
    E_ERROR_OUT_OF_DEVICE_MEMORY = VK_ERROR_OUT_OF_DEVICE_MEMORY,
    E_ERROR_INITIALIZATION_FAILED = VK_ERROR_INITIALIZATION_FAILED,
    E_ERROR_DEVICE_LOST = VK_ERROR_DEVICE_LOST,
    E_ERROR_MEMORY_MAP_FAILED = VK_ERROR_MEMORY_MAP_FAILED,
    E_ERROR_LAYER_NOT_PRESENT = VK_ERROR_LAYER_NOT_PRESENT,
    E_ERROR_EXTENSION_NOT_PRESENT = VK_ERROR_EXTENSION_NOT_PRESENT,
    E_ERROR_FEATURE_NOT_PRESENT = VK_ERROR_FEATURE_NOT_PRESENT,
    E_ERROR_INCOMPATIBLE_DRIVER = VK_ERROR_INCOMPATIBLE_DRIVER,
    E_ERROR_TOO_MANY_OBJECTS = VK_ERROR_TOO_MANY_OBJECTS,
    E_ERROR_FORMAT_NOT_SUPPORTED = VK_ERROR_FORMAT_NOT_SUPPORTED,
    E_ERROR_FRAGMENTED_POOL = VK_ERROR_FRAGMENTED_POOL,
    E_ERROR_UNKNOWN = VK_ERROR_UNKNOWN,
    E_ERROR_OUT_OF_POOL_MEMORY = VK_ERROR_OUT_OF_POOL_MEMORY,
    E_ERROR_INVALID_EXTERNAL_HANDLE = VK_ERROR_INVALID_EXTERNAL_HANDLE,
    E_ERROR_FRAGMENTATION = VK_ERROR_FRAGMENTATION,
    E_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS,
    E_PIPELINE_COMPILE_REQUIRED = VK_PIPELINE_COMPILE_REQUIRED,
    E_ERROR_SURFACE_LOST_KHR = VK_ERROR_SURFACE_LOST_KHR,
    E_ERROR_NATIVE_WINDOW_IN_USE_KHR = VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
    E_SUBOPTIMAL_KHR = VK_SUBOPTIMAL_KHR,
    E_ERROR_OUT_OF_DATE_KHR = VK_ERROR_OUT_OF_DATE_KHR,
    E_ERROR_INCOMPATIBLE_DISPLAY_KHR = VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
    E_ERROR_VALIDATION_FAILED_EXT = VK_ERROR_VALIDATION_FAILED_EXT,
    E_ERROR_INVALID_SHADER_NV = VK_ERROR_INVALID_SHADER_NV,
    E_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR = VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR,
    E_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR = VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR,
    E_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR = VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR,
    E_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR = VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR,
    E_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR = VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR,
    E_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR = VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR,
    E_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,
    E_ERROR_NOT_PERMITTED_KHR = VK_ERROR_NOT_PERMITTED_KHR,
    E_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT,
    E_THREAD_IDLE_KHR = VK_THREAD_IDLE_KHR,
    E_THREAD_DONE_KHR = VK_THREAD_DONE_KHR,
    E_OPERATION_DEFERRED_KHR = VK_OPERATION_DEFERRED_KHR,
    E_OPERATION_NOT_DEFERRED_KHR = VK_OPERATION_NOT_DEFERRED_KHR,
    E_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR = VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR,
    E_ERROR_COMPRESSION_EXHAUSTED_EXT = VK_ERROR_COMPRESSION_EXHAUSTED_EXT,
    E_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT = VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT,
    E_ERROR_OUT_OF_POOL_MEMORY_KHR = VK_ERROR_OUT_OF_POOL_MEMORY_KHR,
    E_ERROR_INVALID_EXTERNAL_HANDLE_KHR = VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR,
    E_ERROR_FRAGMENTATION_EXT = VK_ERROR_FRAGMENTATION_EXT,
    E_ERROR_NOT_PERMITTED_EXT = VK_ERROR_NOT_PERMITTED_EXT,
    E_ERROR_INVALID_DEVICE_ADDRESS_EXT = VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,
    E_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR,
    E_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_COMPILE_REQUIRED_EXT,
    E_ERROR_PIPELINE_COMPILE_REQUIRED_EXT = VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT,
  };

  // VkStructureType
  enum class EStructureType : std::underlying_type_t<VkStructureType> {
    E_APPLICATION_INFO = VK_STRUCTURE_TYPE_APPLICATION_INFO,
    E_INSTANCE_CREATE_INFO = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
    E_DEVICE_QUEUE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
    E_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
    E_SUBMIT_INFO = VK_STRUCTURE_TYPE_SUBMIT_INFO,
    E_MEMORY_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
    E_MAPPED_MEMORY_RANGE = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
    E_BIND_SPARSE_INFO = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
    E_FENCE_CREATE_INFO = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
    E_SEMAPHORE_CREATE_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
    E_EVENT_CREATE_INFO = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
    E_QUERY_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
    E_BUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
    E_BUFFER_VIEW_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
    E_IMAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
    E_IMAGE_VIEW_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
    E_SHADER_MODULE_CREATE_INFO = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
    E_PIPELINE_CACHE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
    E_PIPELINE_SHADER_STAGE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
    E_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
    E_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
    E_PIPELINE_TESSELLATION_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
    E_PIPELINE_VIEWPORT_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
    E_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
    E_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
    E_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
    E_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
    E_PIPELINE_DYNAMIC_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
    E_GRAPHICS_PIPELINE_CREATE_INFO = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
    E_COMPUTE_PIPELINE_CREATE_INFO = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
    E_PIPELINE_LAYOUT_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
    E_SAMPLER_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
    E_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
    E_DESCRIPTOR_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
    E_DESCRIPTOR_SET_ALLOCATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
    E_WRITE_DESCRIPTOR_SET = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
    E_COPY_DESCRIPTOR_SET = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
    E_FRAMEBUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
    E_RENDER_PASS_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
    E_COMMAND_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
    E_COMMAND_BUFFER_ALLOCATE_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
    E_COMMAND_BUFFER_INHERITANCE_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
    E_COMMAND_BUFFER_BEGIN_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
    E_RENDER_PASS_BEGIN_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
    E_BUFFER_MEMORY_BARRIER = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
    E_IMAGE_MEMORY_BARRIER = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
    E_MEMORY_BARRIER = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
    E_LOADER_INSTANCE_CREATE_INFO = VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,
    E_LOADER_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,
    E_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,
    E_BIND_BUFFER_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
    E_BIND_IMAGE_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
    E_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
    E_MEMORY_DEDICATED_REQUIREMENTS = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
    E_MEMORY_DEDICATED_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
    E_MEMORY_ALLOCATE_FLAGS_INFO = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
    E_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
    E_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
    E_DEVICE_GROUP_SUBMIT_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
    E_DEVICE_GROUP_BIND_SPARSE_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
    E_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
    E_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
    E_PHYSICAL_DEVICE_GROUP_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
    E_DEVICE_GROUP_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
    E_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
    E_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
    E_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
    E_MEMORY_REQUIREMENTS_2 = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
    E_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
    E_PHYSICAL_DEVICE_FEATURES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
    E_PHYSICAL_DEVICE_PROPERTIES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,
    E_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
    E_IMAGE_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
    E_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
    E_QUEUE_FAMILY_PROPERTIES_2 = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,
    E_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
    E_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
    E_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
    E_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
    E_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
    E_IMAGE_VIEW_USAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
    E_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
    E_RENDER_PASS_MULTIVIEW_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
    E_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
    E_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
    E_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
    E_PROTECTED_SUBMIT_INFO = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,
    E_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,
    E_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,
    E_DEVICE_QUEUE_INFO_2 = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,
    E_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
    E_SAMPLER_YCBCR_CONVERSION_INFO = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
    E_BIND_IMAGE_PLANE_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
    E_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
    E_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
    E_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
    E_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
    E_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
    E_EXTERNAL_IMAGE_FORMAT_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
    E_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
    E_EXTERNAL_BUFFER_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
    E_PHYSICAL_DEVICE_ID_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
    E_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
    E_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
    E_EXPORT_MEMORY_ALLOCATE_INFO = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
    E_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
    E_EXTERNAL_FENCE_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
    E_EXPORT_FENCE_CREATE_INFO = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
    E_EXPORT_SEMAPHORE_CREATE_INFO = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
    E_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
    E_EXTERNAL_SEMAPHORE_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
    E_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
    E_DESCRIPTOR_SET_LAYOUT_SUPPORT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
    E_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
    E_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES,
    E_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES,
    E_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES,
    E_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES,
    E_IMAGE_FORMAT_LIST_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,
    E_ATTACHMENT_DESCRIPTION_2 = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,
    E_ATTACHMENT_REFERENCE_2 = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,
    E_SUBPASS_DESCRIPTION_2 = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,
    E_SUBPASS_DEPENDENCY_2 = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,
    E_RENDER_PASS_CREATE_INFO_2 = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,
    E_SUBPASS_BEGIN_INFO = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,
    E_SUBPASS_END_INFO = VK_STRUCTURE_TYPE_SUBPASS_END_INFO,
    E_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,
    E_PHYSICAL_DEVICE_DRIVER_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,
    E_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,
    E_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
    E_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,
    E_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,
    E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,
    E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,
    E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,
    E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,
    E_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,
    E_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,
    E_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,
    E_IMAGE_STENCIL_USAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,
    E_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,
    E_SAMPLER_REDUCTION_MODE_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,
    E_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,
    E_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,
    E_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,
    E_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,
    E_RENDER_PASS_ATTACHMENT_BEGIN_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,
    E_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,
    E_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,
    E_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,
    E_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,
    E_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,
    E_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,
    E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,
    E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,
    E_SEMAPHORE_TYPE_CREATE_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,
    E_TIMELINE_SEMAPHORE_SUBMIT_INFO = VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,
    E_SEMAPHORE_WAIT_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,
    E_SEMAPHORE_SIGNAL_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,
    E_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,
    E_BUFFER_DEVICE_ADDRESS_INFO = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,
    E_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,
    E_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,
    E_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,
    E_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES,
    E_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES,
    E_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,
    E_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,
    E_PHYSICAL_DEVICE_TOOL_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,
    E_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,
    E_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,
    E_DEVICE_PRIVATE_DATA_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,
    E_PRIVATE_DATA_SLOT_CREATE_INFO = VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,
    E_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,
    E_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,
    E_BUFFER_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,
    E_IMAGE_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,
    E_DEPENDENCY_INFO = VK_STRUCTURE_TYPE_DEPENDENCY_INFO,
    E_SUBMIT_INFO_2 = VK_STRUCTURE_TYPE_SUBMIT_INFO_2,
    E_SEMAPHORE_SUBMIT_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,
    E_COMMAND_BUFFER_SUBMIT_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,
    E_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,
    E_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,
    E_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,
    E_COPY_BUFFER_INFO_2 = VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,
    E_COPY_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,
    E_COPY_BUFFER_TO_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,
    E_COPY_IMAGE_TO_BUFFER_INFO_2 = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,
    E_BLIT_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,
    E_RESOLVE_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,
    E_BUFFER_COPY_2 = VK_STRUCTURE_TYPE_BUFFER_COPY_2,
    E_IMAGE_COPY_2 = VK_STRUCTURE_TYPE_IMAGE_COPY_2,
    E_IMAGE_BLIT_2 = VK_STRUCTURE_TYPE_IMAGE_BLIT_2,
    E_BUFFER_IMAGE_COPY_2 = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,
    E_IMAGE_RESOLVE_2 = VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,
    E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,
    E_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
    E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,
    E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,
    E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,
    E_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,
    E_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,
    E_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,
    E_RENDERING_INFO = VK_STRUCTURE_TYPE_RENDERING_INFO,
    E_RENDERING_ATTACHMENT_INFO = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,
    E_PIPELINE_RENDERING_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,
    E_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,
    E_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,
    E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,
    E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,
    E_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,
    E_FORMAT_PROPERTIES_3 = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,
    E_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,
    E_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,
    E_DEVICE_BUFFER_MEMORY_REQUIREMENTS = VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,
    E_DEVICE_IMAGE_MEMORY_REQUIREMENTS = VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,
    E_SWAPCHAIN_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,
    E_PRESENT_INFO_KHR = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,
    E_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,
    E_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,
    E_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,
    E_ACQUIRE_NEXT_IMAGE_INFO_KHR = VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,
    E_DEVICE_GROUP_PRESENT_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,
    E_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,
    E_DISPLAY_MODE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,
    E_DISPLAY_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,
    E_DISPLAY_PRESENT_INFO_KHR = VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,
    E_XLIB_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,
    E_XCB_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,
    E_WAYLAND_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR,
    E_ANDROID_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR,
    E_WIN32_SURFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR,
    E_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
    E_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,
    E_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT,
    E_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT,
    E_DEBUG_MARKER_MARKER_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT,
    E_VIDEO_PROFILE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR,
    E_VIDEO_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR,
    E_VIDEO_PICTURE_RESOURCE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR,
    E_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR,
    E_BIND_VIDEO_SESSION_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR,
    E_VIDEO_SESSION_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR,
    E_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR,
    E_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR,
    E_VIDEO_BEGIN_CODING_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR,
    E_VIDEO_END_CODING_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR,
    E_VIDEO_CODING_CONTROL_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR,
    E_VIDEO_REFERENCE_SLOT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR,
    E_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR,
    E_VIDEO_PROFILE_LIST_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR,
    E_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR,
    E_VIDEO_FORMAT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR,
    E_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR,
    E_VIDEO_DECODE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR,
    E_VIDEO_DECODE_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR,
    E_VIDEO_DECODE_USAGE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR,
    E_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,
    E_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,
    E_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,
    E_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,
    E_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,
    E_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,
    E_CU_MODULE_CREATE_INFO_NVX = VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX,
    E_CU_FUNCTION_CREATE_INFO_NVX = VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX,
    E_CU_LAUNCH_INFO_NVX = VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX,
    E_IMAGE_VIEW_HANDLE_INFO_NVX = VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,
    E_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX,
    E_VIDEO_ENCODE_H264_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR,
    E_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR,
    E_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR,
    E_VIDEO_ENCODE_H264_PICTURE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR,
    E_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR,
    E_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR,
    E_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR,
    E_VIDEO_ENCODE_H264_PROFILE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR,
    E_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR,
    E_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR,
    E_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR,
    E_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR,
    E_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR,
    E_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR,
    E_VIDEO_ENCODE_H265_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR,
    E_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR,
    E_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR,
    E_VIDEO_ENCODE_H265_PICTURE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR,
    E_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR,
    E_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR,
    E_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR,
    E_VIDEO_ENCODE_H265_PROFILE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR,
    E_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR,
    E_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR,
    E_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR,
    E_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR,
    E_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR,
    E_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR,
    E_VIDEO_DECODE_H264_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR,
    E_VIDEO_DECODE_H264_PICTURE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR,
    E_VIDEO_DECODE_H264_PROFILE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR,
    E_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR,
    E_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR,
    E_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR,
    E_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,
    E_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,
    E_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT,
    E_ATTACHMENT_SAMPLE_COUNT_INFO_AMD = VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,
    E_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX,
    E_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP = VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP,
    E_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,
    E_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,
    E_EXPORT_MEMORY_ALLOCATE_INFO_NV = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,
    E_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV,
    E_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV,
    E_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV,
    E_VALIDATION_FLAGS_EXT = VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,
    E_VI_SURFACE_CREATE_INFO_NN = VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN,
    E_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,
    E_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,
    E_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT,
    E_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
    E_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR,
    E_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR,
    E_MEMORY_GET_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR,
    E_IMPORT_MEMORY_FD_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,
    E_MEMORY_FD_PROPERTIES_KHR = VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,
    E_MEMORY_GET_FD_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,
    E_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR,
    E_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
    E_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,
    E_D3D12_FENCE_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR,
    E_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR,
    E_IMPORT_SEMAPHORE_FD_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,
    E_SEMAPHORE_GET_FD_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,
    E_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,
    E_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,
    E_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,
    E_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,
    E_PRESENT_REGIONS_KHR = VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,
    E_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,
    E_SURFACE_CAPABILITIES_2_EXT = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,
    E_DISPLAY_POWER_INFO_EXT = VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,
    E_DEVICE_EVENT_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,
    E_DISPLAY_EVENT_INFO_EXT = VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,
    E_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,
    E_PRESENT_TIMES_INFO_GOOGLE = VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,
    E_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,
    E_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,
    E_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,
    E_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,
    E_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,
    E_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,
    E_HDR_METADATA_EXT = VK_STRUCTURE_TYPE_HDR_METADATA_EXT,
    E_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG,
    E_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,
    E_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR,
    E_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR,
    E_FENCE_GET_WIN32_HANDLE_INFO_KHR = VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR,
    E_IMPORT_FENCE_FD_INFO_KHR = VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,
    E_FENCE_GET_FD_INFO_KHR = VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,
    E_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR,
    E_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR,
    E_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR,
    E_PERFORMANCE_QUERY_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR,
    E_ACQUIRE_PROFILING_LOCK_INFO_KHR = VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR,
    E_PERFORMANCE_COUNTER_KHR = VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR,
    E_PERFORMANCE_COUNTER_DESCRIPTION_KHR = VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR,
    E_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,
    E_SURFACE_CAPABILITIES_2_KHR = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,
    E_SURFACE_FORMAT_2_KHR = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,
    E_DISPLAY_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,
    E_DISPLAY_PLANE_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,
    E_DISPLAY_MODE_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,
    E_DISPLAY_PLANE_INFO_2_KHR = VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,
    E_DISPLAY_PLANE_CAPABILITIES_2_KHR = VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,
    E_IOS_SURFACE_CREATE_INFO_MVK = VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK,
    E_MACOS_SURFACE_CREATE_INFO_MVK = VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK,
    E_DEBUG_UTILS_OBJECT_NAME_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,
    E_DEBUG_UTILS_OBJECT_TAG_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,
    E_DEBUG_UTILS_LABEL_EXT = VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,
    E_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,
    E_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,
    E_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID,
    E_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID,
    E_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID,
    E_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
    E_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,
    E_EXTERNAL_FORMAT_ANDROID = VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID,
    E_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID,
    E_SAMPLE_LOCATIONS_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,
    E_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,
    E_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,
    E_MULTISAMPLE_PROPERTIES_EXT = VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,
    E_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,
    E_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,
    E_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,
    E_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR,
    E_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR,
    E_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR,
    E_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR,
    E_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR,
    E_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR,
    E_ACCELERATION_STRUCTURE_GEOMETRY_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR,
    E_ACCELERATION_STRUCTURE_VERSION_INFO_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR,
    E_COPY_ACCELERATION_STRUCTURE_INFO_KHR = VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR,
    E_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR,
    E_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR,
    E_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR,
    E_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR,
    E_ACCELERATION_STRUCTURE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR,
    E_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR,
    E_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR,
    E_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR,
    E_RAY_TRACING_PIPELINE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR,
    E_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR,
    E_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR,
    E_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,
    E_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV,
    E_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV,
    E_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,
    E_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,
    E_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,
    E_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,
    E_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,
    E_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT,
    E_VALIDATION_CACHE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,
    E_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,
    E_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,
    E_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,
    E_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,
    E_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,
    E_RAY_TRACING_PIPELINE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,
    E_ACCELERATION_STRUCTURE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,
    E_GEOMETRY_NV = VK_STRUCTURE_TYPE_GEOMETRY_NV,
    E_GEOMETRY_TRIANGLES_NV = VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,
    E_GEOMETRY_AABB_NV = VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,
    E_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,
    E_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,
    E_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,
    E_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,
    E_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,
    E_ACCELERATION_STRUCTURE_INFO_NV = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,
    E_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,
    E_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,
    E_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,
    E_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,
    E_IMPORT_MEMORY_HOST_POINTER_INFO_EXT = VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,
    E_MEMORY_HOST_POINTER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR,
    E_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD,
    E_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,
    E_VIDEO_DECODE_H265_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR,
    E_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR,
    E_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR,
    E_VIDEO_DECODE_H265_PROFILE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR,
    E_VIDEO_DECODE_H265_PICTURE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR,
    E_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR,
    E_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,
    E_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,
    E_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,
    E_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,
    E_PRESENT_FRAME_TOKEN_GGP = VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP,
    E_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,
    E_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,
    E_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,
    E_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,
    E_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,
    E_CHECKPOINT_DATA_NV = VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,
    E_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL,
    E_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL = VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,
    E_INITIALIZE_PERFORMANCE_API_INFO_INTEL = VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL,
    E_PERFORMANCE_MARKER_INFO_INTEL = VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL,
    E_PERFORMANCE_STREAM_MARKER_INFO_INTEL = VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL,
    E_PERFORMANCE_OVERRIDE_INFO_INTEL = VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL,
    E_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL,
    E_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,
    E_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,
    E_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,
    E_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA,
    E_METAL_SURFACE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,
    E_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,
    E_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR,
    E_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD,
    E_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD,
    E_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT,
    E_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,
    E_MEMORY_PRIORITY_ALLOCATE_INFO_EXT = VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,
    E_SURFACE_PROTECTED_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,
    E_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,
    E_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
    E_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,
    E_VALIDATION_FEATURES_EXT = VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,
    E_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR,
    E_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,
    E_COOPERATIVE_MATRIX_PROPERTIES_NV = VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV,
    E_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV,
    E_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT,
    E_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT,
    E_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT,
    E_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT,
    E_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT,
    E_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT,
    E_HEADLESS_SURFACE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT,
    E_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT,
    E_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT,
    E_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR,
    E_PIPELINE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,
    E_PIPELINE_EXECUTABLE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR,
    E_PIPELINE_EXECUTABLE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR,
    E_PIPELINE_EXECUTABLE_STATISTIC_KHR = VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR,
    E_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR,
    E_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT,
    E_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT,
    E_MEMORY_TO_IMAGE_COPY_EXT = VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT,
    E_IMAGE_TO_MEMORY_COPY_EXT = VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT,
    E_COPY_IMAGE_TO_MEMORY_INFO_EXT = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT,
    E_COPY_MEMORY_TO_IMAGE_INFO_EXT = VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT,
    E_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT = VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT,
    E_COPY_IMAGE_TO_IMAGE_INFO_EXT = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT,
    E_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT = VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT,
    E_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT = VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT,
    E_MEMORY_MAP_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR,
    E_MEMORY_UNMAP_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR,
    E_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT,
    E_SURFACE_PRESENT_MODE_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT,
    E_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT,
    E_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT,
    E_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT,
    E_SWAPCHAIN_PRESENT_FENCE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT,
    E_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT,
    E_SWAPCHAIN_PRESENT_MODE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT,
    E_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT,
    E_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT = VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT,
    E_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV,
    E_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV = VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV,
    E_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV,
    E_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV,
    E_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV,
    E_GENERATED_COMMANDS_INFO_NV = VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV,
    E_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV = VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV,
    E_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV,
    E_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV,
    E_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV,
    E_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT,
    E_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM,
    E_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM = VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM,
    E_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT,
    E_DEPTH_BIAS_INFO_EXT = VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT,
    E_DEPTH_BIAS_REPRESENTATION_INFO_EXT = VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT,
    E_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT,
    E_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT,
    E_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT = VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT,
    E_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT,
    E_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT,
    E_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT,
    E_PIPELINE_LIBRARY_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV,
    E_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV,
    E_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV,
    E_PRESENT_ID_KHR = VK_STRUCTURE_TYPE_PRESENT_ID_KHR,
    E_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR,
    E_VIDEO_ENCODE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR,
    E_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR,
    E_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR,
    E_VIDEO_ENCODE_CAPABILITIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR,
    E_VIDEO_ENCODE_USAGE_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR,
    E_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR,
    E_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR,
    E_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR,
    E_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR,
    E_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR,
    E_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV,
    E_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV = VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV,
    E_CUDA_MODULE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV,
    E_CUDA_FUNCTION_CREATE_INFO_NV = VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV,
    E_CUDA_LAUNCH_INFO_NV = VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV,
    E_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV,
    E_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV,
    E_QUERY_LOW_LATENCY_SUPPORT_NV = VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV,
    E_EXPORT_METAL_OBJECT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT,
    E_EXPORT_METAL_OBJECTS_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT,
    E_EXPORT_METAL_DEVICE_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT,
    E_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT,
    E_EXPORT_METAL_BUFFER_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT,
    E_IMPORT_METAL_BUFFER_INFO_EXT = VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT,
    E_EXPORT_METAL_TEXTURE_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT,
    E_IMPORT_METAL_TEXTURE_INFO_EXT = VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT,
    E_EXPORT_METAL_IO_SURFACE_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT,
    E_IMPORT_METAL_IO_SURFACE_INFO_EXT = VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT,
    E_EXPORT_METAL_SHARED_EVENT_INFO_EXT = VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT,
    E_IMPORT_METAL_SHARED_EVENT_INFO_EXT = VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT,
    E_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV = VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV,
    E_CHECKPOINT_DATA_2_NV = VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV,
    E_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT,
    E_DESCRIPTOR_ADDRESS_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT,
    E_DESCRIPTOR_GET_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT,
    E_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,
    E_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,
    E_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,
    E_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,
    E_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT,
    E_DESCRIPTOR_BUFFER_BINDING_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT,
    E_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT,
    E_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT,
    E_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT,
    E_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT,
    E_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV,
    E_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV,
    E_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV,
    E_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV,
    E_ACCELERATION_STRUCTURE_MOTION_INFO_NV = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV,
    E_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT,
    E_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT,
    E_COPY_COMMAND_TRANSFORM_INFO_QCOM = VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM,
    E_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR,
    E_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT,
    E_IMAGE_COMPRESSION_CONTROL_EXT = VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT,
    E_IMAGE_COMPRESSION_PROPERTIES_EXT = VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT,
    E_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_FAULT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT,
    E_DEVICE_FAULT_COUNTS_EXT = VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT,
    E_DEVICE_FAULT_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT,
    E_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT,
    E_DIRECTFB_SURFACE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT,
    E_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT = VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT,
    E_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT = VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT,
    E_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT,
    E_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT = VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT,
    E_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT,
    E_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT,
    E_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA,
    E_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA = VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA,
    E_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA,
    E_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA,
    E_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA,
    E_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA,
    E_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA = VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA,
    E_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA,
    E_BUFFER_COLLECTION_PROPERTIES_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA,
    E_BUFFER_CONSTRAINTS_INFO_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA,
    E_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA,
    E_IMAGE_CONSTRAINTS_INFO_FUCHSIA = VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA,
    E_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA = VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA,
    E_SYSMEM_COLOR_SPACE_FUCHSIA = VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA,
    E_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA,
    E_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI = VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI,
    E_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI,
    E_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI,
    E_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI,
    E_MEMORY_GET_REMOTE_ADDRESS_INFO_NV = VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV,
    E_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV,
    E_PIPELINE_PROPERTIES_IDENTIFIER_EXT = VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT,
    E_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT,
    E_FRAME_BOUNDARY_EXT = VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT,
    E_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT,
    E_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT = VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT,
    E_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT = VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT,
    E_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT,
    E_SCREEN_SURFACE_CREATE_INFO_QNX = VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX,
    E_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT,
    E_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT,
    E_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR,
    E_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT,
    E_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT,
    E_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT,
    E_MICROMAP_BUILD_INFO_EXT = VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT,
    E_MICROMAP_VERSION_INFO_EXT = VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT,
    E_COPY_MICROMAP_INFO_EXT = VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT,
    E_COPY_MICROMAP_TO_MEMORY_INFO_EXT = VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT,
    E_COPY_MEMORY_TO_MICROMAP_INFO_EXT = VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT,
    E_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT,
    E_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT,
    E_MICROMAP_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT,
    E_MICROMAP_BUILD_SIZES_INFO_EXT = VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT,
    E_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT,
    E_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI,
    E_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI,
    E_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI,
    E_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT,
    E_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM,
    E_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM = VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM,
    E_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM,
    E_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM,
    E_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT,
    E_IMAGE_VIEW_SLICED_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE,
    E_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE,
    E_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE,
    E_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT,
    E_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT,
    E_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM,
    E_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM,
    E_RENDER_PASS_STRIPE_BEGIN_INFO_ARM = VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM,
    E_RENDER_PASS_STRIPE_INFO_ARM = VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM,
    E_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM = VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM,
    E_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM,
    E_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM = VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM,
    E_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV,
    E_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV,
    E_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV,
    E_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV,
    E_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV = VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV,
    E_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV,
    E_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT,
    E_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM,
    E_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM,
    E_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM = VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM,
    E_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT,
    E_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT,
    E_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT,
    E_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT,
    E_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT,
    E_RENDER_PASS_CREATION_CONTROL_EXT = VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT,
    E_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT,
    E_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT,
    E_DIRECT_DRIVER_LOADING_INFO_LUNARG = VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG,
    E_DIRECT_DRIVER_LOADING_LIST_LUNARG = VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG,
    E_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT,
    E_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT,
    E_SHADER_MODULE_IDENTIFIER_EXT = VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT,
    E_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV,
    E_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV,
    E_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV = VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV,
    E_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV = VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV,
    E_OPTICAL_FLOW_SESSION_CREATE_INFO_NV = VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV,
    E_OPTICAL_FLOW_EXECUTE_INFO_NV = VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV,
    E_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV = VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV,
    E_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT,
    E_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID,
    E_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID,
    E_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID = VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID,
    E_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR,
    E_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR,
    E_RENDERING_AREA_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR,
    E_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR,
    E_SUBRESOURCE_LAYOUT_2_KHR = VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,
    E_IMAGE_SUBRESOURCE_2_KHR = VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,
    E_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR,
    E_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR,
    E_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT,
    E_SHADER_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM,
    E_TILE_PROPERTIES_QCOM = VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM,
    E_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC,
    E_AMIGO_PROFILING_SUBMIT_INFO_SEC = VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC,
    E_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM,
    E_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV,
    E_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV,
    E_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV,
    E_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,
    E_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,
    E_LAYER_SETTINGS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM,
    E_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM,
    E_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT,
    E_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT,
    E_LATENCY_SLEEP_MODE_INFO_NV = VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV,
    E_LATENCY_SLEEP_INFO_NV = VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV,
    E_SET_LATENCY_MARKER_INFO_NV = VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV,
    E_GET_LATENCY_MARKER_INFO_NV = VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV,
    E_LATENCY_TIMINGS_FRAME_REPORT_NV = VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV,
    E_LATENCY_SUBMISSION_PRESENT_ID_NV = VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV,
    E_OUT_OF_BAND_QUEUE_TYPE_INFO_NV = VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV,
    E_SWAPCHAIN_LATENCY_CREATE_INFO_NV = VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV,
    E_LATENCY_SURFACE_CAPABILITIES_NV = VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV,
    E_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR,
    E_COOPERATIVE_MATRIX_PROPERTIES_KHR = VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM,
    E_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM = VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM,
    E_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR,
    E_VIDEO_INLINE_QUERY_INFO_KHR = VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR,
    E_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV,
    E_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM,
    E_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM,
    E_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM = VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM,
    E_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM = VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM,
    E_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM,
    E_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM = VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM,
    E_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM,
    E_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM,
    E_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM,
    E_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT,
    E_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR,
    E_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR,
    E_SCREEN_BUFFER_PROPERTIES_QNX = VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX,
    E_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX = VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX,
    E_IMPORT_SCREEN_BUFFER_INFO_QNX = VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX,
    E_EXTERNAL_FORMAT_QNX = VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX,
    E_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX,
    E_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT,
    E_CALIBRATED_TIMESTAMP_INFO_KHR = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR,
    E_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR,
    E_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR,
    E_BIND_MEMORY_STATUS_KHR = VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR,
    E_BIND_DESCRIPTOR_SETS_INFO_KHR = VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR,
    E_PUSH_CONSTANTS_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR,
    E_PUSH_DESCRIPTOR_SET_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR,
    E_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR,
    E_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT = VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT,
    E_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT = VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV,
    E_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES,
    E_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES,
    E_DEBUG_REPORT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT,
    E_RENDERING_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_INFO_KHR,
    E_RENDERING_ATTACHMENT_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR,
    E_PIPELINE_RENDERING_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR,
    E_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR,
    E_ATTACHMENT_SAMPLE_COUNT_INFO_NV = VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV,
    E_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR,
    E_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_FEATURES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR,
    E_PHYSICAL_DEVICE_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR,
    E_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR,
    E_IMAGE_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR,
    E_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR,
    E_QUEUE_FAMILY_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR,
    E_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR,
    E_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR,
    E_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR,
    E_MEMORY_ALLOCATE_FLAGS_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR,
    E_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR,
    E_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR,
    E_DEVICE_GROUP_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR,
    E_DEVICE_GROUP_BIND_SPARSE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR,
    E_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR,
    E_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR,
    E_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT,
    E_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR,
    E_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR,
    E_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR,
    E_EXTERNAL_BUFFER_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR,
    E_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR,
    E_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR,
    E_EXPORT_MEMORY_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR,
    E_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR,
    E_EXTERNAL_SEMAPHORE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR,
    E_EXPORT_SEMAPHORE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR,
    E_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR,
    E_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR,
    E_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR,
    E_SURFACE_CAPABILITIES2_EXT = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT,
    E_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR,
    E_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR,
    E_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR,
    E_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR,
    E_ATTACHMENT_DESCRIPTION_2_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR,
    E_ATTACHMENT_REFERENCE_2_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR,
    E_SUBPASS_DESCRIPTION_2_KHR = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR,
    E_SUBPASS_DEPENDENCY_2_KHR = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR,
    E_RENDER_PASS_CREATE_INFO_2_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR,
    E_SUBPASS_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR,
    E_SUBPASS_END_INFO_KHR = VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR,
    E_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR,
    E_EXTERNAL_FENCE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR,
    E_EXPORT_FENCE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR,
    E_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR,
    E_IMAGE_VIEW_USAGE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR,
    E_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR,
    E_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR,
    E_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR,
    E_MEMORY_DEDICATED_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR,
    E_MEMORY_DEDICATED_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR,
    E_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT,
    E_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT,
    E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT,
    E_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT,
    E_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT,
    E_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR,
    E_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR,
    E_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR,
    E_MEMORY_REQUIREMENTS_2_KHR = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR,
    E_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR,
    E_IMAGE_FORMAT_LIST_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR,
    E_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR,
    E_SAMPLER_YCBCR_CONVERSION_INFO_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR,
    E_BIND_IMAGE_PLANE_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR,
    E_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR,
    E_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR,
    E_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR,
    E_BIND_BUFFER_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR,
    E_BIND_IMAGE_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR,
    E_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT,
    E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT,
    E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT,
    E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT,
    E_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR,
    E_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR,
    E_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR,
    E_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR,
    E_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR,
    E_CALIBRATED_TIMESTAMP_INFO_EXT = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,
    E_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,
    E_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR,
    E_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR,
    E_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV,
    E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR,
    E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR,
    E_SEMAPHORE_TYPE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR,
    E_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR,
    E_SEMAPHORE_WAIT_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR,
    E_SEMAPHORE_SIGNAL_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR,
    E_QUERY_POOL_CREATE_INFO_INTEL = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL,
    E_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR,
    E_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR,
    E_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT,
    E_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR,
    E_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR,
    E_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR,
    E_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT,
    E_BUFFER_DEVICE_ADDRESS_INFO_EXT = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT,
    E_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT,
    E_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR,
    E_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR,
    E_BUFFER_DEVICE_ADDRESS_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR,
    E_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR,
    E_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR,
    E_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR,
    E_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT,
    E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR,
    E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR,
    E_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT,
    E_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT,
    E_PRIVATE_DATA_SLOT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT,
    E_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT,
    E_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR,
    E_BUFFER_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR,
    E_IMAGE_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR,
    E_DEPENDENCY_INFO_KHR = VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR,
    E_SUBMIT_INFO_2_KHR = VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR,
    E_SEMAPHORE_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR,
    E_COMMAND_BUFFER_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR,
    E_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR,
    E_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR,
    E_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT,
    E_COPY_BUFFER_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR,
    E_COPY_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR,
    E_COPY_BUFFER_TO_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR,
    E_COPY_IMAGE_TO_BUFFER_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR,
    E_BLIT_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR,
    E_RESOLVE_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR,
    E_BUFFER_COPY_2_KHR = VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR,
    E_IMAGE_COPY_2_KHR = VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR,
    E_IMAGE_BLIT_2_KHR = VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR,
    E_BUFFER_IMAGE_COPY_2_KHR = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR,
    E_IMAGE_RESOLVE_2_KHR = VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR,
    E_SUBRESOURCE_LAYOUT_2_EXT = VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT,
    E_IMAGE_SUBRESOURCE_2_EXT = VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT,
    E_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM,
    E_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE,
    E_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE = VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE,
    E_FORMAT_PROPERTIES_3_KHR = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR,
    E_PIPELINE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT,
    E_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT,
    E_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT = VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT,
    E_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR,
    E_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR,
    E_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR,
    E_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR,
    E_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT,
  };

  // VkPipelineCacheHeaderVersion
  enum class EPipelineCacheHeaderVersion : std::underlying_type_t<VkPipelineCacheHeaderVersion> {
    E_ONE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,
  };

  // VkImageLayout
  enum class EImageLayout : std::underlying_type_t<VkImageLayout> {
    E_UNDEFINED = VK_IMAGE_LAYOUT_UNDEFINED,
    E_GENERAL = VK_IMAGE_LAYOUT_GENERAL,
    E_COLOR_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
    E_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
    E_DEPTH_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
    E_SHADER_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
    E_TRANSFER_SRC_OPTIMAL = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,
    E_TRANSFER_DST_OPTIMAL = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,
    E_PREINITIALIZED = VK_IMAGE_LAYOUT_PREINITIALIZED,
    E_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL,
    E_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL,
    E_DEPTH_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL,
    E_DEPTH_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL,
    E_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL,
    E_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL,
    E_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL,
    E_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL,
    E_PRESENT_SRC_KHR = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
    E_VIDEO_DECODE_DST_KHR = VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR,
    E_VIDEO_DECODE_SRC_KHR = VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR,
    E_VIDEO_DECODE_DPB_KHR = VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR,
    E_SHARED_PRESENT_KHR = VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR,
    E_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR,
    E_VIDEO_ENCODE_DST_KHR = VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR,
    E_VIDEO_ENCODE_SRC_KHR = VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR,
    E_VIDEO_ENCODE_DPB_KHR = VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR,
    E_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT,
    E_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR,
    E_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR,
    E_SHADING_RATE_OPTIMAL_NV = VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV,
    E_DEPTH_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR,
    E_DEPTH_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR,
    E_STENCIL_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR,
    E_STENCIL_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR,
    E_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR,
    E_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR,
  };

  // VkObjectType
  enum class EObjectType : std::underlying_type_t<VkObjectType> {
    E_UNKNOWN = VK_OBJECT_TYPE_UNKNOWN,
    E_INSTANCE = VK_OBJECT_TYPE_INSTANCE,
    E_PHYSICAL_DEVICE = VK_OBJECT_TYPE_PHYSICAL_DEVICE,
    E_DEVICE = VK_OBJECT_TYPE_DEVICE,
    E_QUEUE = VK_OBJECT_TYPE_QUEUE,
    E_SEMAPHORE = VK_OBJECT_TYPE_SEMAPHORE,
    E_COMMAND_BUFFER = VK_OBJECT_TYPE_COMMAND_BUFFER,
    E_FENCE = VK_OBJECT_TYPE_FENCE,
    E_DEVICE_MEMORY = VK_OBJECT_TYPE_DEVICE_MEMORY,
    E_BUFFER = VK_OBJECT_TYPE_BUFFER,
    E_IMAGE = VK_OBJECT_TYPE_IMAGE,
    E_EVENT = VK_OBJECT_TYPE_EVENT,
    E_QUERY_POOL = VK_OBJECT_TYPE_QUERY_POOL,
    E_BUFFER_VIEW = VK_OBJECT_TYPE_BUFFER_VIEW,
    E_IMAGE_VIEW = VK_OBJECT_TYPE_IMAGE_VIEW,
    E_SHADER_MODULE = VK_OBJECT_TYPE_SHADER_MODULE,
    E_PIPELINE_CACHE = VK_OBJECT_TYPE_PIPELINE_CACHE,
    E_PIPELINE_LAYOUT = VK_OBJECT_TYPE_PIPELINE_LAYOUT,
    E_RENDER_PASS = VK_OBJECT_TYPE_RENDER_PASS,
    E_PIPELINE = VK_OBJECT_TYPE_PIPELINE,
    E_DESCRIPTOR_SET_LAYOUT = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,
    E_SAMPLER = VK_OBJECT_TYPE_SAMPLER,
    E_DESCRIPTOR_POOL = VK_OBJECT_TYPE_DESCRIPTOR_POOL,
    E_DESCRIPTOR_SET = VK_OBJECT_TYPE_DESCRIPTOR_SET,
    E_FRAMEBUFFER = VK_OBJECT_TYPE_FRAMEBUFFER,
    E_COMMAND_POOL = VK_OBJECT_TYPE_COMMAND_POOL,
    E_SAMPLER_YCBCR_CONVERSION = VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION,
    E_DESCRIPTOR_UPDATE_TEMPLATE = VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE,
    E_PRIVATE_DATA_SLOT = VK_OBJECT_TYPE_PRIVATE_DATA_SLOT,
    E_SURFACE_KHR = VK_OBJECT_TYPE_SURFACE_KHR,
    E_SWAPCHAIN_KHR = VK_OBJECT_TYPE_SWAPCHAIN_KHR,
    E_DISPLAY_KHR = VK_OBJECT_TYPE_DISPLAY_KHR,
    E_DISPLAY_MODE_KHR = VK_OBJECT_TYPE_DISPLAY_MODE_KHR,
    E_DEBUG_REPORT_CALLBACK_EXT = VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT,
    E_VIDEO_SESSION_KHR = VK_OBJECT_TYPE_VIDEO_SESSION_KHR,
    E_VIDEO_SESSION_PARAMETERS_KHR = VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR,
    E_CU_MODULE_NVX = VK_OBJECT_TYPE_CU_MODULE_NVX,
    E_CU_FUNCTION_NVX = VK_OBJECT_TYPE_CU_FUNCTION_NVX,
    E_DEBUG_UTILS_MESSENGER_EXT = VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT,
    E_ACCELERATION_STRUCTURE_KHR = VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR,
    E_VALIDATION_CACHE_EXT = VK_OBJECT_TYPE_VALIDATION_CACHE_EXT,
    E_ACCELERATION_STRUCTURE_NV = VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV,
    E_PERFORMANCE_CONFIGURATION_INTEL = VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL,
    E_DEFERRED_OPERATION_KHR = VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR,
    E_INDIRECT_COMMANDS_LAYOUT_NV = VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV,
    E_CUDA_MODULE_NV = VK_OBJECT_TYPE_CUDA_MODULE_NV,
    E_CUDA_FUNCTION_NV = VK_OBJECT_TYPE_CUDA_FUNCTION_NV,
    E_BUFFER_COLLECTION_FUCHSIA = VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA,
    E_MICROMAP_EXT = VK_OBJECT_TYPE_MICROMAP_EXT,
    E_OPTICAL_FLOW_SESSION_NV = VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV,
    E_SHADER_EXT = VK_OBJECT_TYPE_SHADER_EXT,
    E_DESCRIPTOR_UPDATE_TEMPLATE_KHR = VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR,
    E_SAMPLER_YCBCR_CONVERSION_KHR = VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR,
    E_PRIVATE_DATA_SLOT_EXT = VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT,
  };

  // VkVendorId
  enum class EVendorId : std::underlying_type_t<VkVendorId> {
    E_VIV = VK_VENDOR_ID_VIV,
    E_VSI = VK_VENDOR_ID_VSI,
    E_KAZAN = VK_VENDOR_ID_KAZAN,
    E_CODEPLAY = VK_VENDOR_ID_CODEPLAY,
    E_MESA = VK_VENDOR_ID_MESA,
    E_POCL = VK_VENDOR_ID_POCL,
    E_MOBILEYE = VK_VENDOR_ID_MOBILEYE,
  };

  // VkSystemAllocationScope
  enum class ESystemAllocationScope : std::underlying_type_t<VkSystemAllocationScope> {
    E_COMMAND = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,
    E_OBJECT = VK_SYSTEM_ALLOCATION_SCOPE_OBJECT,
    E_CACHE = VK_SYSTEM_ALLOCATION_SCOPE_CACHE,
    E_DEVICE = VK_SYSTEM_ALLOCATION_SCOPE_DEVICE,
    E_INSTANCE = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,
  };

  // VkInternalAllocationType
  enum class EInternalAllocationType : std::underlying_type_t<VkInternalAllocationType> {
    E_EXECUTABLE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,
  };

  // VkFormat
  enum class EResourceFormat : std::underlying_type_t<VkFormat> {
    E_UNDEFINED = VK_FORMAT_UNDEFINED,
    E_R4G4_UNORM_PACK8 = VK_FORMAT_R4G4_UNORM_PACK8,
    E_R4G4B4A4_UNORM_PACK16 = VK_FORMAT_R4G4B4A4_UNORM_PACK16,
    E_B4G4R4A4_UNORM_PACK16 = VK_FORMAT_B4G4R4A4_UNORM_PACK16,
    E_R5G6B5_UNORM_PACK16 = VK_FORMAT_R5G6B5_UNORM_PACK16,
    E_B5G6R5_UNORM_PACK16 = VK_FORMAT_B5G6R5_UNORM_PACK16,
    E_R5G5B5A1_UNORM_PACK16 = VK_FORMAT_R5G5B5A1_UNORM_PACK16,
    E_B5G5R5A1_UNORM_PACK16 = VK_FORMAT_B5G5R5A1_UNORM_PACK16,
    E_A1R5G5B5_UNORM_PACK16 = VK_FORMAT_A1R5G5B5_UNORM_PACK16,
    E_R8_UNORM = VK_FORMAT_R8_UNORM,
    E_R8_SNORM = VK_FORMAT_R8_SNORM,
    E_R8_USCALED = VK_FORMAT_R8_USCALED,
    E_R8_SSCALED = VK_FORMAT_R8_SSCALED,
    E_R8_UINT = VK_FORMAT_R8_UINT,
    E_R8_SINT = VK_FORMAT_R8_SINT,
    E_R8_SRGB = VK_FORMAT_R8_SRGB,
    E_R8G8_UNORM = VK_FORMAT_R8G8_UNORM,
    E_R8G8_SNORM = VK_FORMAT_R8G8_SNORM,
    E_R8G8_USCALED = VK_FORMAT_R8G8_USCALED,
    E_R8G8_SSCALED = VK_FORMAT_R8G8_SSCALED,
    E_R8G8_UINT = VK_FORMAT_R8G8_UINT,
    E_R8G8_SINT = VK_FORMAT_R8G8_SINT,
    E_R8G8_SRGB = VK_FORMAT_R8G8_SRGB,
    E_R8G8B8_UNORM = VK_FORMAT_R8G8B8_UNORM,
    E_R8G8B8_SNORM = VK_FORMAT_R8G8B8_SNORM,
    E_R8G8B8_USCALED = VK_FORMAT_R8G8B8_USCALED,
    E_R8G8B8_SSCALED = VK_FORMAT_R8G8B8_SSCALED,
    E_R8G8B8_UINT = VK_FORMAT_R8G8B8_UINT,
    E_R8G8B8_SINT = VK_FORMAT_R8G8B8_SINT,
    E_R8G8B8_SRGB = VK_FORMAT_R8G8B8_SRGB,
    E_B8G8R8_UNORM = VK_FORMAT_B8G8R8_UNORM,
    E_B8G8R8_SNORM = VK_FORMAT_B8G8R8_SNORM,
    E_B8G8R8_USCALED = VK_FORMAT_B8G8R8_USCALED,
    E_B8G8R8_SSCALED = VK_FORMAT_B8G8R8_SSCALED,
    E_B8G8R8_UINT = VK_FORMAT_B8G8R8_UINT,
    E_B8G8R8_SINT = VK_FORMAT_B8G8R8_SINT,
    E_B8G8R8_SRGB = VK_FORMAT_B8G8R8_SRGB,
    E_R8G8B8A8_UNORM = VK_FORMAT_R8G8B8A8_UNORM,
    E_R8G8B8A8_SNORM = VK_FORMAT_R8G8B8A8_SNORM,
    E_R8G8B8A8_USCALED = VK_FORMAT_R8G8B8A8_USCALED,
    E_R8G8B8A8_SSCALED = VK_FORMAT_R8G8B8A8_SSCALED,
    E_R8G8B8A8_UINT = VK_FORMAT_R8G8B8A8_UINT,
    E_R8G8B8A8_SINT = VK_FORMAT_R8G8B8A8_SINT,
    E_R8G8B8A8_SRGB = VK_FORMAT_R8G8B8A8_SRGB,
    E_B8G8R8A8_UNORM = VK_FORMAT_B8G8R8A8_UNORM,
    E_B8G8R8A8_SNORM = VK_FORMAT_B8G8R8A8_SNORM,
    E_B8G8R8A8_USCALED = VK_FORMAT_B8G8R8A8_USCALED,
    E_B8G8R8A8_SSCALED = VK_FORMAT_B8G8R8A8_SSCALED,
    E_B8G8R8A8_UINT = VK_FORMAT_B8G8R8A8_UINT,
    E_B8G8R8A8_SINT = VK_FORMAT_B8G8R8A8_SINT,
    E_B8G8R8A8_SRGB = VK_FORMAT_B8G8R8A8_SRGB,
    E_A8B8G8R8_UNORM_PACK32 = VK_FORMAT_A8B8G8R8_UNORM_PACK32,
    E_A8B8G8R8_SNORM_PACK32 = VK_FORMAT_A8B8G8R8_SNORM_PACK32,
    E_A8B8G8R8_USCALED_PACK32 = VK_FORMAT_A8B8G8R8_USCALED_PACK32,
    E_A8B8G8R8_SSCALED_PACK32 = VK_FORMAT_A8B8G8R8_SSCALED_PACK32,
    E_A8B8G8R8_UINT_PACK32 = VK_FORMAT_A8B8G8R8_UINT_PACK32,
    E_A8B8G8R8_SINT_PACK32 = VK_FORMAT_A8B8G8R8_SINT_PACK32,
    E_A8B8G8R8_SRGB_PACK32 = VK_FORMAT_A8B8G8R8_SRGB_PACK32,
    E_A2R10G10B10_UNORM_PACK32 = VK_FORMAT_A2R10G10B10_UNORM_PACK32,
    E_A2R10G10B10_SNORM_PACK32 = VK_FORMAT_A2R10G10B10_SNORM_PACK32,
    E_A2R10G10B10_USCALED_PACK32 = VK_FORMAT_A2R10G10B10_USCALED_PACK32,
    E_A2R10G10B10_SSCALED_PACK32 = VK_FORMAT_A2R10G10B10_SSCALED_PACK32,
    E_A2R10G10B10_UINT_PACK32 = VK_FORMAT_A2R10G10B10_UINT_PACK32,
    E_A2R10G10B10_SINT_PACK32 = VK_FORMAT_A2R10G10B10_SINT_PACK32,
    E_A2B10G10R10_UNORM_PACK32 = VK_FORMAT_A2B10G10R10_UNORM_PACK32,
    E_A2B10G10R10_SNORM_PACK32 = VK_FORMAT_A2B10G10R10_SNORM_PACK32,
    E_A2B10G10R10_USCALED_PACK32 = VK_FORMAT_A2B10G10R10_USCALED_PACK32,
    E_A2B10G10R10_SSCALED_PACK32 = VK_FORMAT_A2B10G10R10_SSCALED_PACK32,
    E_A2B10G10R10_UINT_PACK32 = VK_FORMAT_A2B10G10R10_UINT_PACK32,
    E_A2B10G10R10_SINT_PACK32 = VK_FORMAT_A2B10G10R10_SINT_PACK32,
    E_R16_UNORM = VK_FORMAT_R16_UNORM,
    E_R16_SNORM = VK_FORMAT_R16_SNORM,
    E_R16_USCALED = VK_FORMAT_R16_USCALED,
    E_R16_SSCALED = VK_FORMAT_R16_SSCALED,
    E_R16_UINT = VK_FORMAT_R16_UINT,
    E_R16_SINT = VK_FORMAT_R16_SINT,
    E_R16_SFLOAT = VK_FORMAT_R16_SFLOAT,
    E_R16G16_UNORM = VK_FORMAT_R16G16_UNORM,
    E_R16G16_SNORM = VK_FORMAT_R16G16_SNORM,
    E_R16G16_USCALED = VK_FORMAT_R16G16_USCALED,
    E_R16G16_SSCALED = VK_FORMAT_R16G16_SSCALED,
    E_R16G16_UINT = VK_FORMAT_R16G16_UINT,
    E_R16G16_SINT = VK_FORMAT_R16G16_SINT,
    E_R16G16_SFLOAT = VK_FORMAT_R16G16_SFLOAT,
    E_R16G16B16_UNORM = VK_FORMAT_R16G16B16_UNORM,
    E_R16G16B16_SNORM = VK_FORMAT_R16G16B16_SNORM,
    E_R16G16B16_USCALED = VK_FORMAT_R16G16B16_USCALED,
    E_R16G16B16_SSCALED = VK_FORMAT_R16G16B16_SSCALED,
    E_R16G16B16_UINT = VK_FORMAT_R16G16B16_UINT,
    E_R16G16B16_SINT = VK_FORMAT_R16G16B16_SINT,
    E_R16G16B16_SFLOAT = VK_FORMAT_R16G16B16_SFLOAT,
    E_R16G16B16A16_UNORM = VK_FORMAT_R16G16B16A16_UNORM,
    E_R16G16B16A16_SNORM = VK_FORMAT_R16G16B16A16_SNORM,
    E_R16G16B16A16_USCALED = VK_FORMAT_R16G16B16A16_USCALED,
    E_R16G16B16A16_SSCALED = VK_FORMAT_R16G16B16A16_SSCALED,
    E_R16G16B16A16_UINT = VK_FORMAT_R16G16B16A16_UINT,
    E_R16G16B16A16_SINT = VK_FORMAT_R16G16B16A16_SINT,
    E_R16G16B16A16_SFLOAT = VK_FORMAT_R16G16B16A16_SFLOAT,
    E_R32_UINT = VK_FORMAT_R32_UINT,
    E_R32_SINT = VK_FORMAT_R32_SINT,
    E_R32_SFLOAT = VK_FORMAT_R32_SFLOAT,
    E_R32G32_UINT = VK_FORMAT_R32G32_UINT,
    E_R32G32_SINT = VK_FORMAT_R32G32_SINT,
    E_R32G32_SFLOAT = VK_FORMAT_R32G32_SFLOAT,
    E_R32G32B32_UINT = VK_FORMAT_R32G32B32_UINT,
    E_R32G32B32_SINT = VK_FORMAT_R32G32B32_SINT,
    E_R32G32B32_SFLOAT = VK_FORMAT_R32G32B32_SFLOAT,
    E_R32G32B32A32_UINT = VK_FORMAT_R32G32B32A32_UINT,
    E_R32G32B32A32_SINT = VK_FORMAT_R32G32B32A32_SINT,
    E_R32G32B32A32_SFLOAT = VK_FORMAT_R32G32B32A32_SFLOAT,
    E_R64_UINT = VK_FORMAT_R64_UINT,
    E_R64_SINT = VK_FORMAT_R64_SINT,
    E_R64_SFLOAT = VK_FORMAT_R64_SFLOAT,
    E_R64G64_UINT = VK_FORMAT_R64G64_UINT,
    E_R64G64_SINT = VK_FORMAT_R64G64_SINT,
    E_R64G64_SFLOAT = VK_FORMAT_R64G64_SFLOAT,
    E_R64G64B64_UINT = VK_FORMAT_R64G64B64_UINT,
    E_R64G64B64_SINT = VK_FORMAT_R64G64B64_SINT,
    E_R64G64B64_SFLOAT = VK_FORMAT_R64G64B64_SFLOAT,
    E_R64G64B64A64_UINT = VK_FORMAT_R64G64B64A64_UINT,
    E_R64G64B64A64_SINT = VK_FORMAT_R64G64B64A64_SINT,
    E_R64G64B64A64_SFLOAT = VK_FORMAT_R64G64B64A64_SFLOAT,
    E_B10G11R11_UFLOAT_PACK32 = VK_FORMAT_B10G11R11_UFLOAT_PACK32,
    E_E5B9G9R9_UFLOAT_PACK32 = VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
    E_D16_UNORM = VK_FORMAT_D16_UNORM,
    E_X8_D24_UNORM_PACK32 = VK_FORMAT_X8_D24_UNORM_PACK32,
    E_D32_SFLOAT = VK_FORMAT_D32_SFLOAT,
    E_S8_UINT = VK_FORMAT_S8_UINT,
    E_D16_UNORM_S8_UINT = VK_FORMAT_D16_UNORM_S8_UINT,
    E_D24_UNORM_S8_UINT = VK_FORMAT_D24_UNORM_S8_UINT,
    E_D32_SFLOAT_S8_UINT = VK_FORMAT_D32_SFLOAT_S8_UINT,
    E_BC1_RGB_UNORM_BLOCK = VK_FORMAT_BC1_RGB_UNORM_BLOCK,
    E_BC1_RGB_SRGB_BLOCK = VK_FORMAT_BC1_RGB_SRGB_BLOCK,
    E_BC1_RGBA_UNORM_BLOCK = VK_FORMAT_BC1_RGBA_UNORM_BLOCK,
    E_BC1_RGBA_SRGB_BLOCK = VK_FORMAT_BC1_RGBA_SRGB_BLOCK,
    E_BC2_UNORM_BLOCK = VK_FORMAT_BC2_UNORM_BLOCK,
    E_BC2_SRGB_BLOCK = VK_FORMAT_BC2_SRGB_BLOCK,
    E_BC3_UNORM_BLOCK = VK_FORMAT_BC3_UNORM_BLOCK,
    E_BC3_SRGB_BLOCK = VK_FORMAT_BC3_SRGB_BLOCK,
    E_BC4_UNORM_BLOCK = VK_FORMAT_BC4_UNORM_BLOCK,
    E_BC4_SNORM_BLOCK = VK_FORMAT_BC4_SNORM_BLOCK,
    E_BC5_UNORM_BLOCK = VK_FORMAT_BC5_UNORM_BLOCK,
    E_BC5_SNORM_BLOCK = VK_FORMAT_BC5_SNORM_BLOCK,
    E_BC6H_UFLOAT_BLOCK = VK_FORMAT_BC6H_UFLOAT_BLOCK,
    E_BC6H_SFLOAT_BLOCK = VK_FORMAT_BC6H_SFLOAT_BLOCK,
    E_BC7_UNORM_BLOCK = VK_FORMAT_BC7_UNORM_BLOCK,
    E_BC7_SRGB_BLOCK = VK_FORMAT_BC7_SRGB_BLOCK,
    E_ETC2_R8G8B8_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,
    E_ETC2_R8G8B8_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,
    E_ETC2_R8G8B8A1_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,
    E_ETC2_R8G8B8A1_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,
    E_ETC2_R8G8B8A8_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,
    E_ETC2_R8G8B8A8_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,
    E_EAC_R11_UNORM_BLOCK = VK_FORMAT_EAC_R11_UNORM_BLOCK,
    E_EAC_R11_SNORM_BLOCK = VK_FORMAT_EAC_R11_SNORM_BLOCK,
    E_EAC_R11G11_UNORM_BLOCK = VK_FORMAT_EAC_R11G11_UNORM_BLOCK,
    E_EAC_R11G11_SNORM_BLOCK = VK_FORMAT_EAC_R11G11_SNORM_BLOCK,
    E_ASTC_4x4_UNORM_BLOCK = VK_FORMAT_ASTC_4x4_UNORM_BLOCK,
    E_ASTC_4x4_SRGB_BLOCK = VK_FORMAT_ASTC_4x4_SRGB_BLOCK,
    E_ASTC_5x4_UNORM_BLOCK = VK_FORMAT_ASTC_5x4_UNORM_BLOCK,
    E_ASTC_5x4_SRGB_BLOCK = VK_FORMAT_ASTC_5x4_SRGB_BLOCK,
    E_ASTC_5x5_UNORM_BLOCK = VK_FORMAT_ASTC_5x5_UNORM_BLOCK,
    E_ASTC_5x5_SRGB_BLOCK = VK_FORMAT_ASTC_5x5_SRGB_BLOCK,
    E_ASTC_6x5_UNORM_BLOCK = VK_FORMAT_ASTC_6x5_UNORM_BLOCK,
    E_ASTC_6x5_SRGB_BLOCK = VK_FORMAT_ASTC_6x5_SRGB_BLOCK,
    E_ASTC_6x6_UNORM_BLOCK = VK_FORMAT_ASTC_6x6_UNORM_BLOCK,
    E_ASTC_6x6_SRGB_BLOCK = VK_FORMAT_ASTC_6x6_SRGB_BLOCK,
    E_ASTC_8x5_UNORM_BLOCK = VK_FORMAT_ASTC_8x5_UNORM_BLOCK,
    E_ASTC_8x5_SRGB_BLOCK = VK_FORMAT_ASTC_8x5_SRGB_BLOCK,
    E_ASTC_8x6_UNORM_BLOCK = VK_FORMAT_ASTC_8x6_UNORM_BLOCK,
    E_ASTC_8x6_SRGB_BLOCK = VK_FORMAT_ASTC_8x6_SRGB_BLOCK,
    E_ASTC_8x8_UNORM_BLOCK = VK_FORMAT_ASTC_8x8_UNORM_BLOCK,
    E_ASTC_8x8_SRGB_BLOCK = VK_FORMAT_ASTC_8x8_SRGB_BLOCK,
    E_ASTC_10x5_UNORM_BLOCK = VK_FORMAT_ASTC_10x5_UNORM_BLOCK,
    E_ASTC_10x5_SRGB_BLOCK = VK_FORMAT_ASTC_10x5_SRGB_BLOCK,
    E_ASTC_10x6_UNORM_BLOCK = VK_FORMAT_ASTC_10x6_UNORM_BLOCK,
    E_ASTC_10x6_SRGB_BLOCK = VK_FORMAT_ASTC_10x6_SRGB_BLOCK,
    E_ASTC_10x8_UNORM_BLOCK = VK_FORMAT_ASTC_10x8_UNORM_BLOCK,
    E_ASTC_10x8_SRGB_BLOCK = VK_FORMAT_ASTC_10x8_SRGB_BLOCK,
    E_ASTC_10x10_UNORM_BLOCK = VK_FORMAT_ASTC_10x10_UNORM_BLOCK,
    E_ASTC_10x10_SRGB_BLOCK = VK_FORMAT_ASTC_10x10_SRGB_BLOCK,
    E_ASTC_12x10_UNORM_BLOCK = VK_FORMAT_ASTC_12x10_UNORM_BLOCK,
    E_ASTC_12x10_SRGB_BLOCK = VK_FORMAT_ASTC_12x10_SRGB_BLOCK,
    E_ASTC_12x12_UNORM_BLOCK = VK_FORMAT_ASTC_12x12_UNORM_BLOCK,
    E_ASTC_12x12_SRGB_BLOCK = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,
    E_G8B8G8R8_422_UNORM = VK_FORMAT_G8B8G8R8_422_UNORM,
    E_B8G8R8G8_422_UNORM = VK_FORMAT_B8G8R8G8_422_UNORM,
    E_G8_B8_R8_3PLANE_420_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM,
    E_G8_B8R8_2PLANE_420_UNORM = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM,
    E_G8_B8_R8_3PLANE_422_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM,
    E_G8_B8R8_2PLANE_422_UNORM = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM,
    E_G8_B8_R8_3PLANE_444_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM,
    E_R10X6_UNORM_PACK16 = VK_FORMAT_R10X6_UNORM_PACK16,
    E_R10X6G10X6_UNORM_2PACK16 = VK_FORMAT_R10X6G10X6_UNORM_2PACK16,
    E_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
    E_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
    E_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
    E_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
    E_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
    E_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
    E_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
    E_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
    E_R12X4_UNORM_PACK16 = VK_FORMAT_R12X4_UNORM_PACK16,
    E_R12X4G12X4_UNORM_2PACK16 = VK_FORMAT_R12X4G12X4_UNORM_2PACK16,
    E_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
    E_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
    E_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
    E_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
    E_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
    E_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
    E_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
    E_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
    E_G16B16G16R16_422_UNORM = VK_FORMAT_G16B16G16R16_422_UNORM,
    E_B16G16R16G16_422_UNORM = VK_FORMAT_B16G16R16G16_422_UNORM,
    E_G16_B16_R16_3PLANE_420_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM,
    E_G16_B16R16_2PLANE_420_UNORM = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM,
    E_G16_B16_R16_3PLANE_422_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM,
    E_G16_B16R16_2PLANE_422_UNORM = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM,
    E_G16_B16_R16_3PLANE_444_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM,
    E_G8_B8R8_2PLANE_444_UNORM = VK_FORMAT_G8_B8R8_2PLANE_444_UNORM,
    E_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16,
    E_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16,
    E_G16_B16R16_2PLANE_444_UNORM = VK_FORMAT_G16_B16R16_2PLANE_444_UNORM,
    E_A4R4G4B4_UNORM_PACK16 = VK_FORMAT_A4R4G4B4_UNORM_PACK16,
    E_A4B4G4R4_UNORM_PACK16 = VK_FORMAT_A4B4G4R4_UNORM_PACK16,
    E_ASTC_4x4_SFLOAT_BLOCK = VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK,
    E_ASTC_5x4_SFLOAT_BLOCK = VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK,
    E_ASTC_5x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK,
    E_ASTC_6x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK,
    E_ASTC_6x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK,
    E_ASTC_8x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK,
    E_ASTC_8x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK,
    E_ASTC_8x8_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK,
    E_ASTC_10x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK,
    E_ASTC_10x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK,
    E_ASTC_10x8_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK,
    E_ASTC_10x10_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK,
    E_ASTC_12x10_SFLOAT_BLOCK = VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK,
    E_ASTC_12x12_SFLOAT_BLOCK = VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK,
    E_PVRTC1_2BPP_UNORM_BLOCK_IMG = VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,
    E_PVRTC1_4BPP_UNORM_BLOCK_IMG = VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,
    E_PVRTC2_2BPP_UNORM_BLOCK_IMG = VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,
    E_PVRTC2_4BPP_UNORM_BLOCK_IMG = VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,
    E_PVRTC1_2BPP_SRGB_BLOCK_IMG = VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,
    E_PVRTC1_4BPP_SRGB_BLOCK_IMG = VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,
    E_PVRTC2_2BPP_SRGB_BLOCK_IMG = VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,
    E_PVRTC2_4BPP_SRGB_BLOCK_IMG = VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,
    E_R16G16_S10_5_NV = VK_FORMAT_R16G16_S10_5_NV,
    E_A1B5G5R5_UNORM_PACK16_KHR = VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR,
    E_A8_UNORM_KHR = VK_FORMAT_A8_UNORM_KHR,
    E_ASTC_4x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT,
    E_ASTC_5x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT,
    E_ASTC_5x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT,
    E_ASTC_6x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT,
    E_ASTC_6x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT,
    E_ASTC_8x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT,
    E_ASTC_8x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT,
    E_ASTC_8x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT,
    E_ASTC_10x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT,
    E_ASTC_10x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT,
    E_ASTC_10x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT,
    E_ASTC_10x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT,
    E_ASTC_12x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT,
    E_ASTC_12x12_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT,
    E_G8B8G8R8_422_UNORM_KHR = VK_FORMAT_G8B8G8R8_422_UNORM_KHR,
    E_B8G8R8G8_422_UNORM_KHR = VK_FORMAT_B8G8R8G8_422_UNORM_KHR,
    E_G8_B8_R8_3PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR,
    E_G8_B8R8_2PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR,
    E_G8_B8_R8_3PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR,
    E_G8_B8R8_2PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR,
    E_G8_B8_R8_3PLANE_444_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR,
    E_R10X6_UNORM_PACK16_KHR = VK_FORMAT_R10X6_UNORM_PACK16_KHR,
    E_R10X6G10X6_UNORM_2PACK16_KHR = VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR,
    E_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR,
    E_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR,
    E_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR,
    E_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR,
    E_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR,
    E_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR,
    E_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR,
    E_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR,
    E_R12X4_UNORM_PACK16_KHR = VK_FORMAT_R12X4_UNORM_PACK16_KHR,
    E_R12X4G12X4_UNORM_2PACK16_KHR = VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR,
    E_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR,
    E_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR,
    E_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR,
    E_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR,
    E_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR,
    E_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR,
    E_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR,
    E_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR,
    E_G16B16G16R16_422_UNORM_KHR = VK_FORMAT_G16B16G16R16_422_UNORM_KHR,
    E_B16G16R16G16_422_UNORM_KHR = VK_FORMAT_B16G16R16G16_422_UNORM_KHR,
    E_G16_B16_R16_3PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR,
    E_G16_B16R16_2PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR,
    E_G16_B16_R16_3PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR,
    E_G16_B16R16_2PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR,
    E_G16_B16_R16_3PLANE_444_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR,
    E_G8_B8R8_2PLANE_444_UNORM_EXT = VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT,
    E_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT,
    E_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT,
    E_G16_B16R16_2PLANE_444_UNORM_EXT = VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT,
    E_A4R4G4B4_UNORM_PACK16_EXT = VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT,
    E_A4B4G4R4_UNORM_PACK16_EXT = VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT,
  };

  // VkImageTiling
  enum class EImageTiling : std::underlying_type_t<VkImageTiling> {
    E_OPTIMAL = VK_IMAGE_TILING_OPTIMAL,
    E_LINEAR = VK_IMAGE_TILING_LINEAR,
    E_DRM_FORMAT_MODIFIER_EXT = VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT,
  };

  // VkImageType
  enum class EImageType : std::underlying_type_t<VkImageType> {
    E_1D = VK_IMAGE_TYPE_1D,
    E_2D = VK_IMAGE_TYPE_2D,
    E_3D = VK_IMAGE_TYPE_3D,
  };

  // VkPhysicalDeviceType
  enum class EPhysicalDeviceType : std::underlying_type_t<VkPhysicalDeviceType> {
    E_OTHER = VK_PHYSICAL_DEVICE_TYPE_OTHER,
    E_INTEGRATED_GPU = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,
    E_DISCRETE_GPU = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,
    E_VIRTUAL_GPU = VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,
    E_CPU = VK_PHYSICAL_DEVICE_TYPE_CPU,
  };

  // VkQueryType
  enum class EQueryType : std::underlying_type_t<VkQueryType> {
    E_OCCLUSION = VK_QUERY_TYPE_OCCLUSION,
    E_PIPELINE_STATISTICS = VK_QUERY_TYPE_PIPELINE_STATISTICS,
    E_TIMESTAMP = VK_QUERY_TYPE_TIMESTAMP,
    E_RESULT_STATUS_ONLY_KHR = VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR,
    E_TRANSFORM_FEEDBACK_STREAM_EXT = VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT,
    E_PERFORMANCE_QUERY_KHR = VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR,
    E_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR,
    E_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR,
    E_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV,
    E_PERFORMANCE_QUERY_INTEL = VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL,
    E_VIDEO_ENCODE_FEEDBACK_KHR = VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR,
    E_MESH_PRIMITIVES_GENERATED_EXT = VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT,
    E_PRIMITIVES_GENERATED_EXT = VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT,
    E_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR,
    E_ACCELERATION_STRUCTURE_SIZE_KHR = VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR,
    E_MICROMAP_SERIALIZATION_SIZE_EXT = VK_QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT,
    E_MICROMAP_COMPACTED_SIZE_EXT = VK_QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT,
  };

  // VkSharingMode
  enum class ESharingMode : std::underlying_type_t<VkSharingMode> {
    E_EXCLUSIVE = VK_SHARING_MODE_EXCLUSIVE,
    E_CONCURRENT = VK_SHARING_MODE_CONCURRENT,
  };

  // VkComponentSwizzle
  enum class EComponentSwizzle : std::underlying_type_t<VkComponentSwizzle> {
    E_IDENTITY = VK_COMPONENT_SWIZZLE_IDENTITY,
    E_ZERO = VK_COMPONENT_SWIZZLE_ZERO,
    E_ONE = VK_COMPONENT_SWIZZLE_ONE,
    E_R = VK_COMPONENT_SWIZZLE_R,
    E_G = VK_COMPONENT_SWIZZLE_G,
    E_B = VK_COMPONENT_SWIZZLE_B,
    E_A = VK_COMPONENT_SWIZZLE_A,
  };

  // VkImageViewType
  enum class EImageViewType : std::underlying_type_t<VkImageViewType> {
    E_1D = VK_IMAGE_VIEW_TYPE_1D,
    E_2D = VK_IMAGE_VIEW_TYPE_2D,
    E_3D = VK_IMAGE_VIEW_TYPE_3D,
    E_CUBE = VK_IMAGE_VIEW_TYPE_CUBE,
    E_1D_ARRAY = VK_IMAGE_VIEW_TYPE_1D_ARRAY,
    E_2D_ARRAY = VK_IMAGE_VIEW_TYPE_2D_ARRAY,
    E_CUBE_ARRAY = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,
  };

  // VkBlendFactor
  enum class EBlendFactor : std::underlying_type_t<VkBlendFactor> {
    E_ZERO = VK_BLEND_FACTOR_ZERO,
    E_ONE = VK_BLEND_FACTOR_ONE,
    E_SRC_COLOR = VK_BLEND_FACTOR_SRC_COLOR,
    E_ONE_MINUS_SRC_COLOR = VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,
    E_DST_COLOR = VK_BLEND_FACTOR_DST_COLOR,
    E_ONE_MINUS_DST_COLOR = VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,
    E_SRC_ALPHA = VK_BLEND_FACTOR_SRC_ALPHA,
    E_ONE_MINUS_SRC_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
    E_DST_ALPHA = VK_BLEND_FACTOR_DST_ALPHA,
    E_ONE_MINUS_DST_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,
    E_CONSTANT_COLOR = VK_BLEND_FACTOR_CONSTANT_COLOR,
    E_ONE_MINUS_CONSTANT_COLOR = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,
    E_CONSTANT_ALPHA = VK_BLEND_FACTOR_CONSTANT_ALPHA,
    E_ONE_MINUS_CONSTANT_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,
    E_SRC_ALPHA_SATURATE = VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,
    E_SRC1_COLOR = VK_BLEND_FACTOR_SRC1_COLOR,
    E_ONE_MINUS_SRC1_COLOR = VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,
    E_SRC1_ALPHA = VK_BLEND_FACTOR_SRC1_ALPHA,
    E_ONE_MINUS_SRC1_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,
  };

  // VkBlendOp
  enum class EBlendOperator : std::underlying_type_t<VkBlendOp> {
    E_ADD = VK_BLEND_OP_ADD,
    E_SUBTRACT = VK_BLEND_OP_SUBTRACT,
    E_REVERSE_SUBTRACT = VK_BLEND_OP_REVERSE_SUBTRACT,
    E_MIN = VK_BLEND_OP_MIN,
    E_MAX = VK_BLEND_OP_MAX,
    E_ZERO_EXT = VK_BLEND_OP_ZERO_EXT,
    E_SRC_EXT = VK_BLEND_OP_SRC_EXT,
    E_DST_EXT = VK_BLEND_OP_DST_EXT,
    E_SRC_OVER_EXT = VK_BLEND_OP_SRC_OVER_EXT,
    E_DST_OVER_EXT = VK_BLEND_OP_DST_OVER_EXT,
    E_SRC_IN_EXT = VK_BLEND_OP_SRC_IN_EXT,
    E_DST_IN_EXT = VK_BLEND_OP_DST_IN_EXT,
    E_SRC_OUT_EXT = VK_BLEND_OP_SRC_OUT_EXT,
    E_DST_OUT_EXT = VK_BLEND_OP_DST_OUT_EXT,
    E_SRC_ATOP_EXT = VK_BLEND_OP_SRC_ATOP_EXT,
    E_DST_ATOP_EXT = VK_BLEND_OP_DST_ATOP_EXT,
    E_XOR_EXT = VK_BLEND_OP_XOR_EXT,
    E_MULTIPLY_EXT = VK_BLEND_OP_MULTIPLY_EXT,
    E_SCREEN_EXT = VK_BLEND_OP_SCREEN_EXT,
    E_OVERLAY_EXT = VK_BLEND_OP_OVERLAY_EXT,
    E_DARKEN_EXT = VK_BLEND_OP_DARKEN_EXT,
    E_LIGHTEN_EXT = VK_BLEND_OP_LIGHTEN_EXT,
    E_COLORDODGE_EXT = VK_BLEND_OP_COLORDODGE_EXT,
    E_COLORBURN_EXT = VK_BLEND_OP_COLORBURN_EXT,
    E_HARDLIGHT_EXT = VK_BLEND_OP_HARDLIGHT_EXT,
    E_SOFTLIGHT_EXT = VK_BLEND_OP_SOFTLIGHT_EXT,
    E_DIFFERENCE_EXT = VK_BLEND_OP_DIFFERENCE_EXT,
    E_EXCLUSION_EXT = VK_BLEND_OP_EXCLUSION_EXT,
    E_INVERT_EXT = VK_BLEND_OP_INVERT_EXT,
    E_INVERT_RGB_EXT = VK_BLEND_OP_INVERT_RGB_EXT,
    E_LINEARDODGE_EXT = VK_BLEND_OP_LINEARDODGE_EXT,
    E_LINEARBURN_EXT = VK_BLEND_OP_LINEARBURN_EXT,
    E_VIVIDLIGHT_EXT = VK_BLEND_OP_VIVIDLIGHT_EXT,
    E_LINEARLIGHT_EXT = VK_BLEND_OP_LINEARLIGHT_EXT,
    E_PINLIGHT_EXT = VK_BLEND_OP_PINLIGHT_EXT,
    E_HARDMIX_EXT = VK_BLEND_OP_HARDMIX_EXT,
    E_HSL_HUE_EXT = VK_BLEND_OP_HSL_HUE_EXT,
    E_HSL_SATURATION_EXT = VK_BLEND_OP_HSL_SATURATION_EXT,
    E_HSL_COLOR_EXT = VK_BLEND_OP_HSL_COLOR_EXT,
    E_HSL_LUMINOSITY_EXT = VK_BLEND_OP_HSL_LUMINOSITY_EXT,
    E_PLUS_EXT = VK_BLEND_OP_PLUS_EXT,
    E_PLUS_CLAMPED_EXT = VK_BLEND_OP_PLUS_CLAMPED_EXT,
    E_PLUS_CLAMPED_ALPHA_EXT = VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT,
    E_PLUS_DARKER_EXT = VK_BLEND_OP_PLUS_DARKER_EXT,
    E_MINUS_EXT = VK_BLEND_OP_MINUS_EXT,
    E_MINUS_CLAMPED_EXT = VK_BLEND_OP_MINUS_CLAMPED_EXT,
    E_CONTRAST_EXT = VK_BLEND_OP_CONTRAST_EXT,
    E_INVERT_OVG_EXT = VK_BLEND_OP_INVERT_OVG_EXT,
    E_RED_EXT = VK_BLEND_OP_RED_EXT,
    E_GREEN_EXT = VK_BLEND_OP_GREEN_EXT,
    E_BLUE_EXT = VK_BLEND_OP_BLUE_EXT,
  };

  // VkCompareOp
  enum class ECompareOperator : std::underlying_type_t<VkCompareOp> {
    E_NEVER = VK_COMPARE_OP_NEVER,
    E_LESS = VK_COMPARE_OP_LESS,
    E_EQUAL = VK_COMPARE_OP_EQUAL,
    E_LESS_OR_EQUAL = VK_COMPARE_OP_LESS_OR_EQUAL,
    E_GREATER = VK_COMPARE_OP_GREATER,
    E_NOT_EQUAL = VK_COMPARE_OP_NOT_EQUAL,
    E_GREATER_OR_EQUAL = VK_COMPARE_OP_GREATER_OR_EQUAL,
    E_ALWAYS = VK_COMPARE_OP_ALWAYS,
  };

  // VkDynamicState
  enum class EDynamicState : std::underlying_type_t<VkDynamicState> {
    E_VIEWPORT = VK_DYNAMIC_STATE_VIEWPORT,
    E_SCISSOR = VK_DYNAMIC_STATE_SCISSOR,
    E_LINE_WIDTH = VK_DYNAMIC_STATE_LINE_WIDTH,
    E_DEPTH_BIAS = VK_DYNAMIC_STATE_DEPTH_BIAS,
    E_BLEND_CONSTANTS = VK_DYNAMIC_STATE_BLEND_CONSTANTS,
    E_DEPTH_BOUNDS = VK_DYNAMIC_STATE_DEPTH_BOUNDS,
    E_STENCIL_COMPARE_MASK = VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK,
    E_STENCIL_WRITE_MASK = VK_DYNAMIC_STATE_STENCIL_WRITE_MASK,
    E_STENCIL_REFERENCE = VK_DYNAMIC_STATE_STENCIL_REFERENCE,
    E_CULL_MODE = VK_DYNAMIC_STATE_CULL_MODE,
    E_FRONT_FACE = VK_DYNAMIC_STATE_FRONT_FACE,
    E_PRIMITIVE_TOPOLOGY = VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY,
    E_VIEWPORT_WITH_COUNT = VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT,
    E_SCISSOR_WITH_COUNT = VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT,
    E_VERTEX_INPUT_BINDING_STRIDE = VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE,
    E_DEPTH_TEST_ENABLE = VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE,
    E_DEPTH_WRITE_ENABLE = VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE,
    E_DEPTH_COMPARE_OP = VK_DYNAMIC_STATE_DEPTH_COMPARE_OP,
    E_DEPTH_BOUNDS_TEST_ENABLE = VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE,
    E_STENCIL_TEST_ENABLE = VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE,
    E_STENCIL_OP = VK_DYNAMIC_STATE_STENCIL_OP,
    E_RASTERIZER_DISCARD_ENABLE = VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE,
    E_DEPTH_BIAS_ENABLE = VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE,
    E_PRIMITIVE_RESTART_ENABLE = VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE,
    E_VIEWPORT_W_SCALING_NV = VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV,
    E_DISCARD_RECTANGLE_EXT = VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT,
    E_DISCARD_RECTANGLE_ENABLE_EXT = VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT,
    E_DISCARD_RECTANGLE_MODE_EXT = VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT,
    E_SAMPLE_LOCATIONS_EXT = VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT,
    E_RAY_TRACING_PIPELINE_STACK_SIZE_KHR = VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR,
    E_VIEWPORT_SHADING_RATE_PALETTE_NV = VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV,
    E_VIEWPORT_COARSE_SAMPLE_ORDER_NV = VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV,
    E_EXCLUSIVE_SCISSOR_ENABLE_NV = VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV,
    E_EXCLUSIVE_SCISSOR_NV = VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV,
    E_FRAGMENT_SHADING_RATE_KHR = VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR,
    E_LINE_STIPPLE_EXT = VK_DYNAMIC_STATE_LINE_STIPPLE_EXT,
    E_VERTEX_INPUT_EXT = VK_DYNAMIC_STATE_VERTEX_INPUT_EXT,
    E_PATCH_CONTROL_POINTS_EXT = VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT,
    E_LOGIC_OP_EXT = VK_DYNAMIC_STATE_LOGIC_OP_EXT,
    E_COLOR_WRITE_ENABLE_EXT = VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT,
    E_TESSELLATION_DOMAIN_ORIGIN_EXT = VK_DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT,
    E_DEPTH_CLAMP_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT,
    E_POLYGON_MODE_EXT = VK_DYNAMIC_STATE_POLYGON_MODE_EXT,
    E_RASTERIZATION_SAMPLES_EXT = VK_DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT,
    E_SAMPLE_MASK_EXT = VK_DYNAMIC_STATE_SAMPLE_MASK_EXT,
    E_ALPHA_TO_COVERAGE_ENABLE_EXT = VK_DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT,
    E_ALPHA_TO_ONE_ENABLE_EXT = VK_DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT,
    E_LOGIC_OP_ENABLE_EXT = VK_DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT,
    E_COLOR_BLEND_ENABLE_EXT = VK_DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT,
    E_COLOR_BLEND_EQUATION_EXT = VK_DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT,
    E_COLOR_WRITE_MASK_EXT = VK_DYNAMIC_STATE_COLOR_WRITE_MASK_EXT,
    E_RASTERIZATION_STREAM_EXT = VK_DYNAMIC_STATE_RASTERIZATION_STREAM_EXT,
    E_CONSERVATIVE_RASTERIZATION_MODE_EXT = VK_DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT,
    E_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT = VK_DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT,
    E_DEPTH_CLIP_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT,
    E_SAMPLE_LOCATIONS_ENABLE_EXT = VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT,
    E_COLOR_BLEND_ADVANCED_EXT = VK_DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT,
    E_PROVOKING_VERTEX_MODE_EXT = VK_DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT,
    E_LINE_RASTERIZATION_MODE_EXT = VK_DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT,
    E_LINE_STIPPLE_ENABLE_EXT = VK_DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT,
    E_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT = VK_DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT,
    E_VIEWPORT_W_SCALING_ENABLE_NV = VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV,
    E_VIEWPORT_SWIZZLE_NV = VK_DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV,
    E_COVERAGE_TO_COLOR_ENABLE_NV = VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV,
    E_COVERAGE_TO_COLOR_LOCATION_NV = VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV,
    E_COVERAGE_MODULATION_MODE_NV = VK_DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV,
    E_COVERAGE_MODULATION_TABLE_ENABLE_NV = VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV,
    E_COVERAGE_MODULATION_TABLE_NV = VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV,
    E_SHADING_RATE_IMAGE_ENABLE_NV = VK_DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV,
    E_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV = VK_DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV,
    E_COVERAGE_REDUCTION_MODE_NV = VK_DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV,
    E_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT = VK_DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT,
    E_CULL_MODE_EXT = VK_DYNAMIC_STATE_CULL_MODE_EXT,
    E_FRONT_FACE_EXT = VK_DYNAMIC_STATE_FRONT_FACE_EXT,
    E_PRIMITIVE_TOPOLOGY_EXT = VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT,
    E_VIEWPORT_WITH_COUNT_EXT = VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT,
    E_SCISSOR_WITH_COUNT_EXT = VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT,
    E_VERTEX_INPUT_BINDING_STRIDE_EXT = VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT,
    E_DEPTH_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT,
    E_DEPTH_WRITE_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT,
    E_DEPTH_COMPARE_OP_EXT = VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT,
    E_DEPTH_BOUNDS_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT,
    E_STENCIL_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT,
    E_STENCIL_OP_EXT = VK_DYNAMIC_STATE_STENCIL_OP_EXT,
    E_RASTERIZER_DISCARD_ENABLE_EXT = VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT,
    E_DEPTH_BIAS_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT,
    E_PRIMITIVE_RESTART_ENABLE_EXT = VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT,
  };

  // VkFrontFace
  enum class EFrontFace : std::underlying_type_t<VkFrontFace> {
    E_COUNTER_CLOCKWISE = VK_FRONT_FACE_COUNTER_CLOCKWISE,
    E_CLOCKWISE = VK_FRONT_FACE_CLOCKWISE,
  };

  // VkVertexInputRate
  enum class EVertexInputRate : std::underlying_type_t<VkVertexInputRate> {
    E_VERTEX = VK_VERTEX_INPUT_RATE_VERTEX,
    E_INSTANCE = VK_VERTEX_INPUT_RATE_INSTANCE,
  };

  // VkPrimitiveTopology
  enum class EPrimitiveTopology : std::underlying_type_t<VkPrimitiveTopology> {
    E_POINT_LIST = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,
    E_LINE_LIST = VK_PRIMITIVE_TOPOLOGY_LINE_LIST,
    E_LINE_STRIP = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP,
    E_TRIANGLE_LIST = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
    E_TRIANGLE_STRIP = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP,
    E_TRIANGLE_FAN = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN,
    E_LINE_LIST_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY,
    E_LINE_STRIP_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY,
    E_TRIANGLE_LIST_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY,
    E_TRIANGLE_STRIP_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY,
    E_PATCH_LIST = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,
  };

  // VkPolygonMode
  enum class EPolygonMode : std::underlying_type_t<VkPolygonMode> {
    E_FILL = VK_POLYGON_MODE_FILL,
    E_LINE = VK_POLYGON_MODE_LINE,
    E_POINT = VK_POLYGON_MODE_POINT,
    E_FILL_RECTANGLE_NV = VK_POLYGON_MODE_FILL_RECTANGLE_NV,
  };

  // VkStencilOp
  enum class EStencilOperator : std::underlying_type_t<VkStencilOp> {
    E_KEEP = VK_STENCIL_OP_KEEP,
    E_ZERO = VK_STENCIL_OP_ZERO,
    E_REPLACE = VK_STENCIL_OP_REPLACE,
    E_INCREMENT_AND_CLAMP = VK_STENCIL_OP_INCREMENT_AND_CLAMP,
    E_DECREMENT_AND_CLAMP = VK_STENCIL_OP_DECREMENT_AND_CLAMP,
    E_INVERT = VK_STENCIL_OP_INVERT,
    E_INCREMENT_AND_WRAP = VK_STENCIL_OP_INCREMENT_AND_WRAP,
    E_DECREMENT_AND_WRAP = VK_STENCIL_OP_DECREMENT_AND_WRAP,
  };

  // VkLogicOp
  enum class ELogicOperator : std::underlying_type_t<VkLogicOp> {
    E_CLEAR = VK_LOGIC_OP_CLEAR,
    E_AND = VK_LOGIC_OP_AND,
    E_AND_REVERSE = VK_LOGIC_OP_AND_REVERSE,
    E_COPY = VK_LOGIC_OP_COPY,
    E_AND_INVERTED = VK_LOGIC_OP_AND_INVERTED,
    E_NO_OP = VK_LOGIC_OP_NO_OP,
    E_XOR = VK_LOGIC_OP_XOR,
    E_OR = VK_LOGIC_OP_OR,
    E_NOR = VK_LOGIC_OP_NOR,
    E_EQUIVALENT = VK_LOGIC_OP_EQUIVALENT,
    E_INVERT = VK_LOGIC_OP_INVERT,
    E_OR_REVERSE = VK_LOGIC_OP_OR_REVERSE,
    E_COPY_INVERTED = VK_LOGIC_OP_COPY_INVERTED,
    E_OR_INVERTED = VK_LOGIC_OP_OR_INVERTED,
    E_NAND = VK_LOGIC_OP_NAND,
    E_SET = VK_LOGIC_OP_SET,
  };

  // VkBorderColor
  enum class EBorderColor : std::underlying_type_t<VkBorderColor> {
    E_FLOAT_TRANSPARENT_BLACK = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,
    E_INT_TRANSPARENT_BLACK = VK_BORDER_COLOR_INT_TRANSPARENT_BLACK,
    E_FLOAT_OPAQUE_BLACK = VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK,
    E_INT_OPAQUE_BLACK = VK_BORDER_COLOR_INT_OPAQUE_BLACK,
    E_FLOAT_OPAQUE_WHITE = VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE,
    E_INT_OPAQUE_WHITE = VK_BORDER_COLOR_INT_OPAQUE_WHITE,
    E_FLOAT_CUSTOM_EXT = VK_BORDER_COLOR_FLOAT_CUSTOM_EXT,
    E_INT_CUSTOM_EXT = VK_BORDER_COLOR_INT_CUSTOM_EXT,
  };

  // VkFilter
  enum class EFilter : std::underlying_type_t<VkFilter> {
    E_NEAREST = VK_FILTER_NEAREST,
    E_LINEAR = VK_FILTER_LINEAR,
    E_CUBIC_EXT = VK_FILTER_CUBIC_EXT,
    E_CUBIC_IMG = VK_FILTER_CUBIC_IMG,
  };

  // VkSamplerAddressMode
  enum class ESamplerAddressMode : std::underlying_type_t<VkSamplerAddressMode> {
    E_REPEAT = VK_SAMPLER_ADDRESS_MODE_REPEAT,
    E_MIRRORED_REPEAT = VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT,
    E_CLAMP_TO_EDGE = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,
    E_CLAMP_TO_BORDER = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,
    E_MIRROR_CLAMP_TO_EDGE = VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE,
    E_MIRROR_CLAMP_TO_EDGE_KHR = VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR,
  };

  // VkSamplerMipmapMode
  enum class ESamplerMipmapMode : std::underlying_type_t<VkSamplerMipmapMode> {
    E_NEAREST = VK_SAMPLER_MIPMAP_MODE_NEAREST,
    E_LINEAR = VK_SAMPLER_MIPMAP_MODE_LINEAR,
  };

  // VkDescriptorType
  enum class EDescriptorType : std::underlying_type_t<VkDescriptorType> {
    E_SAMPLER = VK_DESCRIPTOR_TYPE_SAMPLER,
    E_COMBINED_IMAGE_SAMPLER = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
    E_SAMPLED_IMAGE = VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
    E_STORAGE_IMAGE = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
    E_UNIFORM_TEXEL_BUFFER = VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,
    E_STORAGE_TEXEL_BUFFER = VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
    E_UNIFORM_BUFFER = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
    E_STORAGE_BUFFER = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
    E_UNIFORM_BUFFER_DYNAMIC = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
    E_STORAGE_BUFFER_DYNAMIC = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,
    E_INPUT_ATTACHMENT = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,
    E_INLINE_UNIFORM_BLOCK = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK,
    E_ACCELERATION_STRUCTURE_KHR = VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR,
    E_ACCELERATION_STRUCTURE_NV = VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV,
    E_SAMPLE_WEIGHT_IMAGE_QCOM = VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM,
    E_BLOCK_MATCH_IMAGE_QCOM = VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM,
    E_MUTABLE_EXT = VK_DESCRIPTOR_TYPE_MUTABLE_EXT,
    E_INLINE_UNIFORM_BLOCK_EXT = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT,
    E_MUTABLE_VALVE = VK_DESCRIPTOR_TYPE_MUTABLE_VALVE,
  };

  // VkAttachmentLoadOp
  enum class EAttachmentLoadOperator : std::underlying_type_t<VkAttachmentLoadOp> {
    E_LOAD = VK_ATTACHMENT_LOAD_OP_LOAD,
    E_CLEAR = VK_ATTACHMENT_LOAD_OP_CLEAR,
    E_DONT_CARE = VK_ATTACHMENT_LOAD_OP_DONT_CARE,
    E_NONE_EXT = VK_ATTACHMENT_LOAD_OP_NONE_EXT,
  };

  // VkAttachmentStoreOp
  enum class EAttachmentStoreOperator : std::underlying_type_t<VkAttachmentStoreOp> {
    E_STORE = VK_ATTACHMENT_STORE_OP_STORE,
    E_DONT_CARE = VK_ATTACHMENT_STORE_OP_DONT_CARE,
    E_NONE = VK_ATTACHMENT_STORE_OP_NONE,
    E_NONE_KHR = VK_ATTACHMENT_STORE_OP_NONE_KHR,
    E_NONE_QCOM = VK_ATTACHMENT_STORE_OP_NONE_QCOM,
    E_NONE_EXT = VK_ATTACHMENT_STORE_OP_NONE_EXT,
  };

  // VkPipelineBindPoint
  enum class EPipelineBindPoint : std::underlying_type_t<VkPipelineBindPoint> {
    E_GRAPHICS = VK_PIPELINE_BIND_POINT_GRAPHICS,
    E_COMPUTE = VK_PIPELINE_BIND_POINT_COMPUTE,
    E_RAY_TRACING_KHR = VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR,
    E_SUBPASS_SHADING_HUAWEI = VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI,
    E_RAY_TRACING_NV = VK_PIPELINE_BIND_POINT_RAY_TRACING_NV,
  };

  // VkCommandBufferLevel
  enum class ECommandBufferLevel : std::underlying_type_t<VkCommandBufferLevel> {
    E_PRIMARY = VK_COMMAND_BUFFER_LEVEL_PRIMARY,
    E_SECONDARY = VK_COMMAND_BUFFER_LEVEL_SECONDARY,
  };

  // VkIndexType
  enum class EIndexType : std::underlying_type_t<VkIndexType> {
    E_UINT16 = VK_INDEX_TYPE_UINT16,
    E_UINT32 = VK_INDEX_TYPE_UINT32,
    E_NONE_KHR = VK_INDEX_TYPE_NONE_KHR,
    E_UINT8_EXT = VK_INDEX_TYPE_UINT8_EXT,
    E_NONE_NV = VK_INDEX_TYPE_NONE_NV,
  };

  // VkSubpassContents
  enum class ESubpassContents : std::underlying_type_t<VkSubpassContents> {
    E_INLINE = VK_SUBPASS_CONTENTS_INLINE,
    E_SECONDARY_COMMAND_BUFFERS = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,
    E_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT = VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT,
  };

  // VkImageAspectFlagBits
  enum class EImageAspectFlag : std::underlying_type_t<VkImageAspectFlagBits> {
    E_COLOR = VK_IMAGE_ASPECT_COLOR_BIT,
    E_DEPTH = VK_IMAGE_ASPECT_DEPTH_BIT,
    E_STENCIL = VK_IMAGE_ASPECT_STENCIL_BIT,
    E_METADATA = VK_IMAGE_ASPECT_METADATA_BIT,
    E_PLANE_0 = VK_IMAGE_ASPECT_PLANE_0_BIT,
    E_PLANE_1 = VK_IMAGE_ASPECT_PLANE_1_BIT,
    E_PLANE_2 = VK_IMAGE_ASPECT_PLANE_2_BIT,
    E_NONE = VK_IMAGE_ASPECT_NONE,
    E_MEMORY_PLANE_0_EXT = VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT,
    E_MEMORY_PLANE_1_EXT = VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT,
    E_MEMORY_PLANE_2_EXT = VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT,
    E_MEMORY_PLANE_3_EXT = VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT,
    E_PLANE_0_KHR = VK_IMAGE_ASPECT_PLANE_0_BIT_KHR,
    E_PLANE_1_KHR = VK_IMAGE_ASPECT_PLANE_1_BIT_KHR,
    E_PLANE_2_KHR = VK_IMAGE_ASPECT_PLANE_2_BIT_KHR,
    E_NONE_KHR = VK_IMAGE_ASPECT_NONE_KHR,
  };

  // VkImageCreateFlagBits
  enum class EImageCreateFlag : std::underlying_type_t<VkImageCreateFlagBits> {
    E_SPARSE_BINDING = VK_IMAGE_CREATE_SPARSE_BINDING_BIT,
    E_SPARSE_RESIDENCY = VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT,
    E_SPARSE_ALIASED = VK_IMAGE_CREATE_SPARSE_ALIASED_BIT,
    E_MUTABLE_FORMAT = VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT,
    E_CUBE_COMPATIBLE = VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT,
    E_ALIAS = VK_IMAGE_CREATE_ALIAS_BIT,
    E_SPLIT_INSTANCE_BIND_REGIONS = VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT,
    E_2D_ARRAY_COMPATIBLE = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT,
    E_BLOCK_TEXEL_VIEW_COMPATIBLE = VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT,
    E_EXTENDED_USAGE = VK_IMAGE_CREATE_EXTENDED_USAGE_BIT,
    E_PROTECTED = VK_IMAGE_CREATE_PROTECTED_BIT,
    E_DISJOINT = VK_IMAGE_CREATE_DISJOINT_BIT,
    E_CORNER_SAMPLED_NV = VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV,
    E_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_EXT = VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT,
    E_SUBSAMPLED_EXT = VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT,
    E_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_EXT = VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT,
    E_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_EXT = VK_IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT,
    E_2D_VIEW_COMPATIBLE_EXT = VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT,
    E_FRAGMENT_DENSITY_MAP_OFFSET_QCOM = VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM,
    E_VIDEO_PROFILE_INDEPENDENT_KHR = VK_IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR,
    E_SPLIT_INSTANCE_BIND_REGIONS_KHR = VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,
    E_2D_ARRAY_COMPATIBLE_KHR = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR,
    E_BLOCK_TEXEL_VIEW_COMPATIBLE_KHR = VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR,
    E_EXTENDED_USAGE_KHR = VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR,
    E_DISJOINT_KHR = VK_IMAGE_CREATE_DISJOINT_BIT_KHR,
    E_ALIAS_KHR = VK_IMAGE_CREATE_ALIAS_BIT_KHR,
  };

  // VkSampleCountFlagBits
  enum class ESampleCountFlag : std::underlying_type_t<VkSampleCountFlagBits> {
    E_1 = VK_SAMPLE_COUNT_1_BIT,
    E_2 = VK_SAMPLE_COUNT_2_BIT,
    E_4 = VK_SAMPLE_COUNT_4_BIT,
    E_8 = VK_SAMPLE_COUNT_8_BIT,
    E_16 = VK_SAMPLE_COUNT_16_BIT,
    E_32 = VK_SAMPLE_COUNT_32_BIT,
    E_64 = VK_SAMPLE_COUNT_64_BIT,
  };

  // VkImageUsageFlagBits
  enum class EImageUsageFlag : std::underlying_type_t<VkImageUsageFlagBits> {
    E_TRANSFER_SRC = VK_IMAGE_USAGE_TRANSFER_SRC_BIT,
    E_TRANSFER_DST = VK_IMAGE_USAGE_TRANSFER_DST_BIT,
    E_SAMPLED = VK_IMAGE_USAGE_SAMPLED_BIT,
    E_STORAGE = VK_IMAGE_USAGE_STORAGE_BIT,
    E_COLOR_ATTACHMENT = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,
    E_DEPTH_STENCIL_ATTACHMENT = VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,
    E_TRANSIENT_ATTACHMENT = VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT,
    E_INPUT_ATTACHMENT = VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT,
    E_VIDEO_DECODE_DST_KHR = VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR,
    E_VIDEO_DECODE_SRC_KHR = VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR,
    E_VIDEO_DECODE_DPB_KHR = VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR,
    E_FRAGMENT_DENSITY_MAP_EXT = VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR = VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    E_HOST_TRANSFER_EXT = VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT,
    E_VIDEO_ENCODE_DST_KHR = VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR,
    E_VIDEO_ENCODE_SRC_KHR = VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR,
    E_VIDEO_ENCODE_DPB_KHR = VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR,
    E_ATTACHMENT_FEEDBACK_LOOP_EXT = VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT,
    E_INVOCATION_MASK_HUAWEI = VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI,
    E_SAMPLE_WEIGHT_QCOM = VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM,
    E_SAMPLE_BLOCK_MATCH_QCOM = VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM,
    E_SHADING_RATE_IMAGE_NV = VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV,
  };

  // VkInstanceCreateFlagBits
  enum class EInstanceCreateFlag : std::underlying_type_t<VkInstanceCreateFlagBits> {
    E_ENUMERATE_PORTABILITY_KHR = VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR,
  };

  // VkMemoryHeapFlagBits
  enum class EMemoryHeapFlag : std::underlying_type_t<VkMemoryHeapFlagBits> {
    E_DEVICE_LOCAL = VK_MEMORY_HEAP_DEVICE_LOCAL_BIT,
    E_MULTI_INSTANCE = VK_MEMORY_HEAP_MULTI_INSTANCE_BIT,
    E_MULTI_INSTANCE_KHR = VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR,
  };

  // VkMemoryPropertyFlagBits
  enum class EMemoryPropertyFlag : std::underlying_type_t<VkMemoryPropertyFlagBits> {
    E_DEVICE_LOCAL = VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,
    E_HOST_VISIBLE = VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,
    E_HOST_COHERENT = VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
    E_HOST_CACHED = VK_MEMORY_PROPERTY_HOST_CACHED_BIT,
    E_LAZILY_ALLOCATED = VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,
    E_PROTECTED = VK_MEMORY_PROPERTY_PROTECTED_BIT,
    E_DEVICE_COHERENT_AMD = VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD,
    E_DEVICE_UNCACHED_AMD = VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD,
    E_RDMA_CAPABLE_NV = VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV,
  };

  // VkQueueFlagBits
  enum class EQueueFlag : std::underlying_type_t<VkQueueFlagBits> {
    E_GRAPHICS = VK_QUEUE_GRAPHICS_BIT,
    E_COMPUTE = VK_QUEUE_COMPUTE_BIT,
    E_TRANSFER = VK_QUEUE_TRANSFER_BIT,
    E_SPARSE_BINDING = VK_QUEUE_SPARSE_BINDING_BIT,
    E_PROTECTED = VK_QUEUE_PROTECTED_BIT,
    E_VIDEO_DECODE_KHR = VK_QUEUE_VIDEO_DECODE_BIT_KHR,
    E_VIDEO_ENCODE_KHR = VK_QUEUE_VIDEO_ENCODE_BIT_KHR,
    E_OPTICAL_FLOW_NV = VK_QUEUE_OPTICAL_FLOW_BIT_NV,
  };

  // VkDeviceQueueCreateFlagBits
  enum class EDeviceQueueCreateFlag : std::underlying_type_t<VkDeviceQueueCreateFlagBits> {
    E_PROTECTED = VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT,
  };

  // VkSparseMemoryBindFlagBits
  enum class ESparseMemoryBindFlag : std::underlying_type_t<VkSparseMemoryBindFlagBits> {
    E_METADATA = VK_SPARSE_MEMORY_BIND_METADATA_BIT,
  };

  // VkSparseImageFormatFlagBits
  enum class ESparseImageFormatFlag : std::underlying_type_t<VkSparseImageFormatFlagBits> {
    E_SINGLE_MIPTAIL = VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT,
    E_ALIGNED_MIP_SIZE = VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT,
    E_NONSTANDARD_BLOCK_SIZE = VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT,
  };

  // VkFenceCreateFlagBits
  enum class EFenceCreateFlag : std::underlying_type_t<VkFenceCreateFlagBits> {
    E_SIGNALED = VK_FENCE_CREATE_SIGNALED_BIT,
  };

  // VkEventCreateFlagBits
  enum class EEventCreateFlag : std::underlying_type_t<VkEventCreateFlagBits> {
    E_DEVICE_ONLY = VK_EVENT_CREATE_DEVICE_ONLY_BIT,
    E_DEVICE_ONLY_KHR = VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR,
  };

  // VkQueryPipelineStatisticFlagBits
  enum class EQueryPipelineStatisticFlag : std::underlying_type_t<VkQueryPipelineStatisticFlagBits> {
    E_INPUT_ASSEMBLY_VERTICES = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT,
    E_INPUT_ASSEMBLY_PRIMITIVES = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT,
    E_VERTEX_SHADER_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT,
    E_GEOMETRY_SHADER_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT,
    E_GEOMETRY_SHADER_PRIMITIVES = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT,
    E_CLIPPING_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT,
    E_CLIPPING_PRIMITIVES = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT,
    E_FRAGMENT_SHADER_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT,
    E_TESSELLATION_CONTROL_SHADER_PATCHES = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT,
    E_TESSELLATION_EVALUATION_SHADER_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT,
    E_COMPUTE_SHADER_INVOCATIONS = VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT,
    E_TASK_SHADER_INVOCATIONS_EXT = VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT,
    E_MESH_SHADER_INVOCATIONS_EXT = VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT,
    E_CLUSTER_CULLING_SHADER_INVOCATIONS_HUAWEI = VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI,
  };

  // VkQueryResultFlagBits
  enum class EQueryResultFlag : std::underlying_type_t<VkQueryResultFlagBits> {
    E_64 = VK_QUERY_RESULT_64_BIT,
    E_WAIT = VK_QUERY_RESULT_WAIT_BIT,
    E_WITH_AVAILABILITY = VK_QUERY_RESULT_WITH_AVAILABILITY_BIT,
    E_PARTIAL = VK_QUERY_RESULT_PARTIAL_BIT,
    E_WITH_STATUS_KHR = VK_QUERY_RESULT_WITH_STATUS_BIT_KHR,
  };

  // VkBufferCreateFlagBits
  enum class EBufferCreateFlag : std::underlying_type_t<VkBufferCreateFlagBits> {
    E_SPARSE_BINDING = VK_BUFFER_CREATE_SPARSE_BINDING_BIT,
    E_SPARSE_RESIDENCY = VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT,
    E_SPARSE_ALIASED = VK_BUFFER_CREATE_SPARSE_ALIASED_BIT,
    E_PROTECTED = VK_BUFFER_CREATE_PROTECTED_BIT,
    E_DEVICE_ADDRESS_CAPTURE_REPLAY = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,
    E_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_EXT = VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT,
    E_VIDEO_PROFILE_INDEPENDENT_KHR = VK_BUFFER_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR,
    E_DEVICE_ADDRESS_CAPTURE_REPLAY_EXT = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT,
    E_DEVICE_ADDRESS_CAPTURE_REPLAY_KHR = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,
  };

  // VkImageViewCreateFlagBits
  enum class EImageViewCreateFlag : std::underlying_type_t<VkImageViewCreateFlagBits> {
    E_FRAGMENT_DENSITY_MAP_DYNAMIC_EXT = VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT,
    E_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_EXT = VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT,
    E_FRAGMENT_DENSITY_MAP_DEFERRED_EXT = VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT,
  };

  // VkPipelineCacheCreateFlagBits
  enum class EPipelineCacheCreateFlag : std::underlying_type_t<VkPipelineCacheCreateFlagBits> {
    E_EXTERNALLY_SYNCHRONIZED = VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT,
    E_EXTERNALLY_SYNCHRONIZED_EXT = VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT,
  };

  // VkColorComponentFlagBits
  enum class EColorComponentFlag : std::underlying_type_t<VkColorComponentFlagBits> {
    E_R = VK_COLOR_COMPONENT_R_BIT,
    E_G = VK_COLOR_COMPONENT_G_BIT,
    E_B = VK_COLOR_COMPONENT_B_BIT,
    E_A = VK_COLOR_COMPONENT_A_BIT,
  };

  // VkPipelineShaderStageCreateFlagBits
  enum class EPipelineShaderStageCreateFlag : std::underlying_type_t<VkPipelineShaderStageCreateFlagBits> {
    E_ALLOW_VARYING_SUBGROUP_SIZE = VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT,
    E_REQUIRE_FULL_SUBGROUPS = VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT,
    E_ALLOW_VARYING_SUBGROUP_SIZE_EXT = VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT,
    E_REQUIRE_FULL_SUBGROUPS_EXT = VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT,
  };

  // VkShaderStageFlagBits
  enum class EShaderStageFlag : std::underlying_type_t<VkShaderStageFlagBits> {
    E_VERTEX = VK_SHADER_STAGE_VERTEX_BIT,
    E_TESSELLATION_CONTROL = VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
    E_TESSELLATION_EVALUATION = VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,
    E_GEOMETRY = VK_SHADER_STAGE_GEOMETRY_BIT,
    E_FRAGMENT = VK_SHADER_STAGE_FRAGMENT_BIT,
    E_COMPUTE = VK_SHADER_STAGE_COMPUTE_BIT,
    E_ALL_GRAPHICS = VK_SHADER_STAGE_ALL_GRAPHICS,
    E_ALL = VK_SHADER_STAGE_ALL,
    E_RAYGEN_KHR = VK_SHADER_STAGE_RAYGEN_BIT_KHR,
    E_ANY_HIT_KHR = VK_SHADER_STAGE_ANY_HIT_BIT_KHR,
    E_CLOSEST_HIT_KHR = VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR,
    E_MISS_KHR = VK_SHADER_STAGE_MISS_BIT_KHR,
    E_INTERSECTION_KHR = VK_SHADER_STAGE_INTERSECTION_BIT_KHR,
    E_CALLABLE_KHR = VK_SHADER_STAGE_CALLABLE_BIT_KHR,
    E_TASK_EXT = VK_SHADER_STAGE_TASK_BIT_EXT,
    E_MESH_EXT = VK_SHADER_STAGE_MESH_BIT_EXT,
    E_SUBPASS_SHADING_HUAWEI = VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI,
    E_CLUSTER_CULLING_HUAWEI = VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI,
    E_RAYGEN_NV = VK_SHADER_STAGE_RAYGEN_BIT_NV,
    E_ANY_HIT_NV = VK_SHADER_STAGE_ANY_HIT_BIT_NV,
    E_CLOSEST_HIT_NV = VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV,
    E_MISS_NV = VK_SHADER_STAGE_MISS_BIT_NV,
    E_INTERSECTION_NV = VK_SHADER_STAGE_INTERSECTION_BIT_NV,
    E_CALLABLE_NV = VK_SHADER_STAGE_CALLABLE_BIT_NV,
    E_TASK_NV = VK_SHADER_STAGE_TASK_BIT_NV,
    E_MESH_NV = VK_SHADER_STAGE_MESH_BIT_NV,
  };

  // VkCullModeFlagBits
  enum class ECullModeFlag : std::underlying_type_t<VkCullModeFlagBits> {
    E_NONE = VK_CULL_MODE_NONE,
    E_FRONT = VK_CULL_MODE_FRONT_BIT,
    E_BACK = VK_CULL_MODE_BACK_BIT,
    E_FRONT_AND_BACK = VK_CULL_MODE_FRONT_AND_BACK,
  };

  // VkPipelineDepthStencilStateCreateFlagBits
  enum class EPipelineDepthStencilStateCreateFlag : std::underlying_type_t<VkPipelineDepthStencilStateCreateFlagBits> {
    E_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_EXT = VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_EXT = VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_ARM = VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM,
    E_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_ARM = VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM,
  };

  // VkPipelineColorBlendStateCreateFlagBits
  enum class EPipelineColorBlendStateCreateFlag : std::underlying_type_t<VkPipelineColorBlendStateCreateFlagBits> {
    E_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXT = VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_ARM = VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM,
  };

  // VkPipelineLayoutCreateFlagBits
  enum class EPipelineLayoutCreateFlag : std::underlying_type_t<VkPipelineLayoutCreateFlagBits> {
    E_INDEPENDENT_SETS_EXT = VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT,
  };

  // VkSamplerCreateFlagBits
  enum class ESamplerCreateFlag : std::underlying_type_t<VkSamplerCreateFlagBits> {
    E_SUBSAMPLED_EXT = VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT,
    E_SUBSAMPLED_COARSE_RECONSTRUCTION_EXT = VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT,
    E_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_EXT = VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT,
    E_NON_SEAMLESS_CUBE_MAP_EXT = VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT,
    E_IMAGE_PROCESSING_QCOM = VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM,
  };

  // VkDescriptorPoolCreateFlagBits
  enum class EDescriptorPoolCreateFlag : std::underlying_type_t<VkDescriptorPoolCreateFlagBits> {
    E_FREE_DESCRIPTOR_SET = VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT,
    E_UPDATE_AFTER_BIND = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT,
    E_HOST_ONLY_EXT = VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT,
    E_ALLOW_OVERALLOCATION_SETS_NV = VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_SETS_BIT_NV,
    E_ALLOW_OVERALLOCATION_POOLS_NV = VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_POOLS_BIT_NV,
    E_UPDATE_AFTER_BIND_EXT = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT,
    E_HOST_ONLY_VALVE = VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE,
  };

  // VkDescriptorSetLayoutCreateFlagBits
  enum class EDescriptorLayoutCreateFlag : std::underlying_type_t<VkDescriptorSetLayoutCreateFlagBits> {
    E_UPDATE_AFTER_BIND_POOL = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT,
    E_PUSH_DESCRIPTOR_KHR = VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR,
    E_DESCRIPTOR_BUFFER_EXT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT,
    E_EMBEDDED_IMMUTABLE_SAMPLERS_EXT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT,
    E_INDIRECT_BINDABLE_NV = VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV,
    E_HOST_ONLY_POOL_EXT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT,
    E_PER_STAGE_NV = VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV,
    E_UPDATE_AFTER_BIND_POOL_EXT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT,
    E_HOST_ONLY_POOL_VALVE = VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE,
  };

  // VkAttachmentDescriptionFlagBits
  enum class EAttachmentDescriptionFlag : std::underlying_type_t<VkAttachmentDescriptionFlagBits> {
    E_MAY_ALIAS = VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT,
  };

  // VkDependencyFlagBits
  enum class EDependencyFlag : std::underlying_type_t<VkDependencyFlagBits> {
    E_BY_REGION = VK_DEPENDENCY_BY_REGION_BIT,
    E_DEVICE_GROUP = VK_DEPENDENCY_DEVICE_GROUP_BIT,
    E_VIEW_LOCAL = VK_DEPENDENCY_VIEW_LOCAL_BIT,
    E_FEEDBACK_LOOP_EXT = VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT,
    E_VIEW_LOCAL_KHR = VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR,
    E_DEVICE_GROUP_KHR = VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR,
  };

  // VkFramebufferCreateFlagBits
  enum class EFramebufferCreateFlag : std::underlying_type_t<VkFramebufferCreateFlagBits> {
    E_IMAGELESS = VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT,
    E_IMAGELESS_KHR = VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR,
  };

  // VkRenderPassCreateFlagBits
  enum class ERenderPassCreateFlag : std::underlying_type_t<VkRenderPassCreateFlagBits> {
    E_TRANSFORM_QCOM = VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM,
  };

  // VkSubpassDescriptionFlagBits
  enum class ESubpassDescriptionFlag : std::underlying_type_t<VkSubpassDescriptionFlagBits> {
    E_PER_VIEW_ATTRIBUTES_NVX = VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX,
    E_PER_VIEW_POSITION_X_ONLY_NVX = VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX,
    E_FRAGMENT_REGION_QCOM = VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM,
    E_SHADER_RESOLVE_QCOM = VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM,
    E_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_EXT = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_EXT = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_EXT = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT,
    E_ENABLE_LEGACY_DITHERING_EXT = VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT,
    E_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM,
    E_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM,
    E_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM,
  };

  // VkCommandPoolCreateFlagBits
  enum class ECommandPoolCreateFlag : std::underlying_type_t<VkCommandPoolCreateFlagBits> {
    E_TRANSIENT = VK_COMMAND_POOL_CREATE_TRANSIENT_BIT,
    E_RESET_COMMAND_BUFFER = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT,
    E_PROTECTED = VK_COMMAND_POOL_CREATE_PROTECTED_BIT,
  };

  // VkCommandPoolResetFlagBits
  enum class ECommandPoolResetFlag : std::underlying_type_t<VkCommandPoolResetFlagBits> {
    E_RELEASE_RESOURCES = VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT,
  };

  // VkCommandBufferUsageFlagBits
  enum class ECommandBufferUsageFlag : std::underlying_type_t<VkCommandBufferUsageFlagBits> {
    E_ONE_TIME_SUBMIT = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT,
    E_RENDER_PASS_CONTINUE = VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT,
    E_SIMULTANEOUS_USE = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,
  };

  // VkQueryControlFlagBits
  enum class EQueryControlFlag : std::underlying_type_t<VkQueryControlFlagBits> {
    E_PRECISE = VK_QUERY_CONTROL_PRECISE_BIT,
  };

  // VkCommandBufferResetFlagBits
  enum class ECommandBufferResetFlag : std::underlying_type_t<VkCommandBufferResetFlagBits> {
    E_RELEASE_RESOURCES = VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT,
  };

  // VkStencilFaceFlagBits
  enum class EStencilFaceFlag : std::underlying_type_t<VkStencilFaceFlagBits> {
    E_FRONT = VK_STENCIL_FACE_FRONT_BIT,
    E_BACK = VK_STENCIL_FACE_BACK_BIT,
    E_FRONT_AND_BACK = VK_STENCIL_FACE_FRONT_AND_BACK,
    E_STENCIL_FRONT_AND_BACK = VK_STENCIL_FRONT_AND_BACK,
  };

  // VkPointClippingBehavior
  enum class EPointClippingBehavior : std::underlying_type_t<VkPointClippingBehavior> {
    E_ALL_CLIP_PLANES = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,
    E_USER_CLIP_PLANES_ONLY = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY,
    E_ALL_CLIP_PLANES_KHR = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR,
    E_USER_CLIP_PLANES_ONLY_KHR = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR,
  };

  // VkTessellationDomainOrigin
  enum class ETessellationDomainOrigin : std::underlying_type_t<VkTessellationDomainOrigin> {
    E_UPPER_LEFT = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT,
    E_LOWER_LEFT = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT,
    E_UPPER_LEFT_KHR = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR,
    E_LOWER_LEFT_KHR = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR,
  };

  // VkSamplerYcbcrModelConversion
  enum class ESamplerYcbcrModelConversion : std::underlying_type_t<VkSamplerYcbcrModelConversion> {
    E_RGB_IDENTITY = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY,
    E_YCBCR_IDENTITY = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY,
    E_YCBCR_709 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709,
    E_YCBCR_601 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601,
    E_YCBCR_2020 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020,
    E_RGB_IDENTITY_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR,
    E_YCBCR_IDENTITY_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR,
    E_YCBCR_709_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR,
    E_YCBCR_601_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR,
    E_YCBCR_2020_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR,
  };

  // VkSamplerYcbcrRange
  enum class ESamplerYcbcrRange : std::underlying_type_t<VkSamplerYcbcrRange> {
    E_ITU_FULL = VK_SAMPLER_YCBCR_RANGE_ITU_FULL,
    E_ITU_NARROW = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW,
    E_ITU_FULL_KHR = VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR,
    E_ITU_NARROW_KHR = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR,
  };

  // VkChromaLocation
  enum class EChromaLocation : std::underlying_type_t<VkChromaLocation> {
    E_COSITED_EVEN = VK_CHROMA_LOCATION_COSITED_EVEN,
    E_MIDPOINT = VK_CHROMA_LOCATION_MIDPOINT,
    E_COSITED_EVEN_KHR = VK_CHROMA_LOCATION_COSITED_EVEN_KHR,
    E_MIDPOINT_KHR = VK_CHROMA_LOCATION_MIDPOINT_KHR,
  };

  // VkDescriptorUpdateTemplateType
  enum class EDescriptorUpdateTemplateType : std::underlying_type_t<VkDescriptorUpdateTemplateType> {
    E_DESCRIPTOR_SET = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET,
    E_PUSH_DESCRIPTORS_KHR = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR,
    E_DESCRIPTOR_SET_KHR = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR,
  };

  // VkSubgroupFeatureFlagBits
  enum class ESubgroupFeatureFlag : std::underlying_type_t<VkSubgroupFeatureFlagBits> {
    E_BASIC = VK_SUBGROUP_FEATURE_BASIC_BIT,
    E_VOTE = VK_SUBGROUP_FEATURE_VOTE_BIT,
    E_ARITHMETIC = VK_SUBGROUP_FEATURE_ARITHMETIC_BIT,
    E_BALLOT = VK_SUBGROUP_FEATURE_BALLOT_BIT,
    E_SHUFFLE = VK_SUBGROUP_FEATURE_SHUFFLE_BIT,
    E_SHUFFLE_RELATIVE = VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT,
    E_CLUSTERED = VK_SUBGROUP_FEATURE_CLUSTERED_BIT,
    E_QUAD = VK_SUBGROUP_FEATURE_QUAD_BIT,
    E_PARTITIONED_NV = VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV,
  };

  // VkPeerMemoryFeatureFlagBits
  enum class EPeerMemoryFeatureFlag : std::underlying_type_t<VkPeerMemoryFeatureFlagBits> {
    E_COPY_SRC = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT,
    E_COPY_DST = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT,
    E_GENERIC_SRC = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT,
    E_GENERIC_DST = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT,
    E_COPY_SRC_KHR = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR,
    E_COPY_DST_KHR = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR,
    E_GENERIC_SRC_KHR = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR,
    E_GENERIC_DST_KHR = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR,
  };

  // VkMemoryAllocateFlagBits
  enum class EMemoryAllocateFlag : std::underlying_type_t<VkMemoryAllocateFlagBits> {
    E_DEVICE_MASK = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT,
    E_DEVICE_ADDRESS = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT,
    E_DEVICE_ADDRESS_CAPTURE_REPLAY = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,
    E_DEVICE_MASK_KHR = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR,
    E_DEVICE_ADDRESS_KHR = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR,
    E_DEVICE_ADDRESS_CAPTURE_REPLAY_KHR = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,
  };

  // VkExternalMemoryHandleTypeFlagBits
  enum class EExternalMemoryHandleTypeFlag : std::underlying_type_t<VkExternalMemoryHandleTypeFlagBits> {
    E_OPAQUE_FD = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT,
    E_OPAQUE_WIN32 = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT,
    E_OPAQUE_WIN32_KMT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
    E_D3D11_TEXTURE = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT,
    E_D3D11_TEXTURE_KMT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT,
    E_D3D12_HEAP = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT,
    E_D3D12_RESOURCE = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT,
    E_DMA_BUF_EXT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT,
    E_ANDROID_HARDWARE_BUFFER_ANDROID = VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID,
    E_HOST_ALLOCATION_EXT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT,
    E_HOST_MAPPED_FOREIGN_MEMORY_EXT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT,
    E_ZIRCON_VMO_FUCHSIA = VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA,
    E_RDMA_ADDRESS_NV = VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV,
    E_SCREEN_BUFFER_QNX = VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX,
    E_OPAQUE_FD_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,
    E_OPAQUE_WIN32_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,
    E_OPAQUE_WIN32_KMT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,
    E_D3D11_TEXTURE_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR,
    E_D3D11_TEXTURE_KMT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR,
    E_D3D12_HEAP_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR,
    E_D3D12_RESOURCE_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR,
  };

  // VkExternalMemoryFeatureFlagBits
  enum class EExternalMemoryFeatureFlag : std::underlying_type_t<VkExternalMemoryFeatureFlagBits> {
    E_DEDICATED_ONLY = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT,
    E_EXPORTABLE = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT,
    E_IMPORTABLE = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT,
    E_DEDICATED_ONLY_KHR = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR,
    E_EXPORTABLE_KHR = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR,
    E_IMPORTABLE_KHR = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR,
  };

  // VkExternalFenceHandleTypeFlagBits
  enum class EExternalFenceHandleTypeFlag : std::underlying_type_t<VkExternalFenceHandleTypeFlagBits> {
    E_OPAQUE_FD = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT,
    E_OPAQUE_WIN32 = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
    E_OPAQUE_WIN32_KMT = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
    E_SYNC_FD = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT,
    E_OPAQUE_FD_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,
    E_OPAQUE_WIN32_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,
    E_OPAQUE_WIN32_KMT_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,
    E_SYNC_FD_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR,
  };

  // VkExternalFenceFeatureFlagBits
  enum class EExternalFenceFeatureFlag : std::underlying_type_t<VkExternalFenceFeatureFlagBits> {
    E_EXPORTABLE = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT,
    E_IMPORTABLE = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT,
    E_EXPORTABLE_KHR = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR,
    E_IMPORTABLE_KHR = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR,
  };

  // VkFenceImportFlagBits
  enum class EFenceImportFlag : std::underlying_type_t<VkFenceImportFlagBits> {
    E_TEMPORARY = VK_FENCE_IMPORT_TEMPORARY_BIT,
    E_TEMPORARY_KHR = VK_FENCE_IMPORT_TEMPORARY_BIT_KHR,
  };

  // VkSemaphoreImportFlagBits
  enum class ESemaphoreImportFlag : std::underlying_type_t<VkSemaphoreImportFlagBits> {
    E_TEMPORARY = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT,
    E_TEMPORARY_KHR = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR,
  };

  // VkExternalSemaphoreHandleTypeFlagBits
  enum class EExternalSemaphoreHandleTypeFlag : std::underlying_type_t<VkExternalSemaphoreHandleTypeFlagBits> {
    E_OPAQUE_FD = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT,
    E_OPAQUE_WIN32 = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
    E_OPAQUE_WIN32_KMT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
    E_D3D12_FENCE = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT,
    E_SYNC_FD = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT,
    E_ZIRCON_EVENT_FUCHSIA = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA,
    E_D3D11_FENCE = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT,
    E_OPAQUE_FD_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,
    E_OPAQUE_WIN32_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,
    E_OPAQUE_WIN32_KMT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,
    E_D3D12_FENCE_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR,
    E_SYNC_FD_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR,
  };

  // VkExternalSemaphoreFeatureFlagBits
  enum class EExternalSemaphoreFeatureFlag : std::underlying_type_t<VkExternalSemaphoreFeatureFlagBits> {
    E_EXPORTABLE = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT,
    E_IMPORTABLE = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT,
    E_EXPORTABLE_KHR = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR,
    E_IMPORTABLE_KHR = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR,
  };

  // VkDriverId
  enum class EDriverId : std::underlying_type_t<VkDriverId> {
    E_AMD_PROPRIETARY = VK_DRIVER_ID_AMD_PROPRIETARY,
    E_AMD_OPEN_SOURCE = VK_DRIVER_ID_AMD_OPEN_SOURCE,
    E_MESA_RADV = VK_DRIVER_ID_MESA_RADV,
    E_NVIDIA_PROPRIETARY = VK_DRIVER_ID_NVIDIA_PROPRIETARY,
    E_INTEL_PROPRIETARY_WINDOWS = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS,
    E_INTEL_OPEN_SOURCE_MESA = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA,
    E_IMAGINATION_PROPRIETARY = VK_DRIVER_ID_IMAGINATION_PROPRIETARY,
    E_QUALCOMM_PROPRIETARY = VK_DRIVER_ID_QUALCOMM_PROPRIETARY,
    E_ARM_PROPRIETARY = VK_DRIVER_ID_ARM_PROPRIETARY,
    E_GOOGLE_SWIFTSHADER = VK_DRIVER_ID_GOOGLE_SWIFTSHADER,
    E_GGP_PROPRIETARY = VK_DRIVER_ID_GGP_PROPRIETARY,
    E_BROADCOM_PROPRIETARY = VK_DRIVER_ID_BROADCOM_PROPRIETARY,
    E_MESA_LLVMPIPE = VK_DRIVER_ID_MESA_LLVMPIPE,
    E_MOLTENVK = VK_DRIVER_ID_MOLTENVK,
    E_COREAVI_PROPRIETARY = VK_DRIVER_ID_COREAVI_PROPRIETARY,
    E_JUICE_PROPRIETARY = VK_DRIVER_ID_JUICE_PROPRIETARY,
    E_VERISILICON_PROPRIETARY = VK_DRIVER_ID_VERISILICON_PROPRIETARY,
    E_MESA_TURNIP = VK_DRIVER_ID_MESA_TURNIP,
    E_MESA_V3DV = VK_DRIVER_ID_MESA_V3DV,
    E_MESA_PANVK = VK_DRIVER_ID_MESA_PANVK,
    E_SAMSUNG_PROPRIETARY = VK_DRIVER_ID_SAMSUNG_PROPRIETARY,
    E_MESA_VENUS = VK_DRIVER_ID_MESA_VENUS,
    E_MESA_DOZEN = VK_DRIVER_ID_MESA_DOZEN,
    E_MESA_NVK = VK_DRIVER_ID_MESA_NVK,
    E_IMAGINATION_OPEN_SOURCE_MESA = VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA,
    E_MESA_AGXV = VK_DRIVER_ID_MESA_AGXV,
    E_AMD_PROPRIETARY_KHR = VK_DRIVER_ID_AMD_PROPRIETARY_KHR,
    E_AMD_OPEN_SOURCE_KHR = VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR,
    E_MESA_RADV_KHR = VK_DRIVER_ID_MESA_RADV_KHR,
    E_NVIDIA_PROPRIETARY_KHR = VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR,
    E_INTEL_PROPRIETARY_WINDOWS_KHR = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR,
    E_INTEL_OPEN_SOURCE_MESA_KHR = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR,
    E_IMAGINATION_PROPRIETARY_KHR = VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR,
    E_QUALCOMM_PROPRIETARY_KHR = VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR,
    E_ARM_PROPRIETARY_KHR = VK_DRIVER_ID_ARM_PROPRIETARY_KHR,
    E_GOOGLE_SWIFTSHADER_KHR = VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR,
    E_GGP_PROPRIETARY_KHR = VK_DRIVER_ID_GGP_PROPRIETARY_KHR,
    E_BROADCOM_PROPRIETARY_KHR = VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR,
  };

  // VkShaderFloatControlsIndependence
  enum class EShaderFloatControlsIndependence : std::underlying_type_t<VkShaderFloatControlsIndependence> {
    E_32_ONLY = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY,
    E_ALL = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL,
    E_NONE = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE,
    E_32_ONLY_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR,
    E_ALL_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR,
    E_NONE_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR,
  };

  // VkSamplerReductionMode
  enum class ESamplerReductionMode : std::underlying_type_t<VkSamplerReductionMode> {
    E_WEIGHTED_AVERAGE = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE,
    E_MIN = VK_SAMPLER_REDUCTION_MODE_MIN,
    E_MAX = VK_SAMPLER_REDUCTION_MODE_MAX,
    E_WEIGHTED_AVERAGE_RANGECLAMP_QCOM = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_RANGECLAMP_QCOM,
    E_WEIGHTED_AVERAGE_EXT = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT,
    E_MIN_EXT = VK_SAMPLER_REDUCTION_MODE_MIN_EXT,
    E_MAX_EXT = VK_SAMPLER_REDUCTION_MODE_MAX_EXT,
  };

  // VkSemaphoreType
  enum class ESemaphoreType : std::underlying_type_t<VkSemaphoreType> {
    E_BINARY = VK_SEMAPHORE_TYPE_BINARY,
    E_TIMELINE = VK_SEMAPHORE_TYPE_TIMELINE,
    E_BINARY_KHR = VK_SEMAPHORE_TYPE_BINARY_KHR,
    E_TIMELINE_KHR = VK_SEMAPHORE_TYPE_TIMELINE_KHR,
  };

  // VkResolveModeFlagBits
  enum class EResolveModeFlag : std::underlying_type_t<VkResolveModeFlagBits> {
    E_NONE = VK_RESOLVE_MODE_NONE,
    E_SAMPLE_ZERO = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT,
    E_AVERAGE = VK_RESOLVE_MODE_AVERAGE_BIT,
    E_MIN = VK_RESOLVE_MODE_MIN_BIT,
    E_MAX = VK_RESOLVE_MODE_MAX_BIT,
    E_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID = VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID,
    E_NONE_KHR = VK_RESOLVE_MODE_NONE_KHR,
    E_SAMPLE_ZERO_KHR = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR,
    E_AVERAGE_KHR = VK_RESOLVE_MODE_AVERAGE_BIT_KHR,
    E_MIN_KHR = VK_RESOLVE_MODE_MIN_BIT_KHR,
    E_MAX_KHR = VK_RESOLVE_MODE_MAX_BIT_KHR,
  };

  // VkDescriptorBindingFlagBits
  enum class EDescriptorBindingFlag : std::underlying_type_t<VkDescriptorBindingFlagBits> {
    E_UPDATE_AFTER_BIND = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT,
    E_UPDATE_UNUSED_WHILE_PENDING = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT,
    E_PARTIALLY_BOUND = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT,
    E_VARIABLE_DESCRIPTOR_COUNT = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT,
    E_UPDATE_AFTER_BIND_EXT = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT,
    E_UPDATE_UNUSED_WHILE_PENDING_EXT = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT,
    E_PARTIALLY_BOUND_EXT = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT,
    E_VARIABLE_DESCRIPTOR_COUNT_EXT = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT,
  };

  // VkSemaphoreWaitFlagBits
  enum class ESemaphoreWaitFlag : std::underlying_type_t<VkSemaphoreWaitFlagBits> {
    E_ANY = VK_SEMAPHORE_WAIT_ANY_BIT,
    E_ANY_KHR = VK_SEMAPHORE_WAIT_ANY_BIT_KHR,
  };

  // VkPipelineCreationFeedbackFlagBits
  enum class EPipelineCreationFeedbackFlag : std::underlying_type_t<VkPipelineCreationFeedbackFlagBits> {
    E_VALID = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT,
    E_APPLICATION_PIPELINE_CACHE_HIT = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT,
    E_BASE_PIPELINE_ACCELERATION = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT,
    E_VALID_EXT = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT,
    E_APPLICATION_PIPELINE_CACHE_HIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT,
    E_BASE_PIPELINE_ACCELERATION_EXT = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT,
  };

  // VkToolPurposeFlagBits
  enum class EToolPurposeFlag : std::underlying_type_t<VkToolPurposeFlagBits> {
    E_VALIDATION = VK_TOOL_PURPOSE_VALIDATION_BIT,
    E_PROFILING = VK_TOOL_PURPOSE_PROFILING_BIT,
    E_TRACING = VK_TOOL_PURPOSE_TRACING_BIT,
    E_ADDITIONAL_FEATURES = VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT,
    E_MODIFYING_FEATURES = VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT,
    E_DEBUG_REPORTING_EXT = VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT,
    E_DEBUG_MARKERS_EXT = VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT,
    E_VALIDATION_EXT = VK_TOOL_PURPOSE_VALIDATION_BIT_EXT,
    E_PROFILING_EXT = VK_TOOL_PURPOSE_PROFILING_BIT_EXT,
    E_TRACING_EXT = VK_TOOL_PURPOSE_TRACING_BIT_EXT,
    E_ADDITIONAL_FEATURES_EXT = VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT,
    E_MODIFYING_FEATURES_EXT = VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT,
  };

  // VkPipelineStageFlagBits2
  enum class EPipelineStageFlag : uint64 {
    E_OPTICAL_FLOW_NV = VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV,
    E_CLUSTER_CULLING_SHADER_HUAWEI = VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI,
    E_MICROMAP_BUILD_EXT = VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT,
    E_ACCELERATION_STRUCTURE_COPY_KHR = VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR,
    E_INVOCATION_MASK_HUAWEI = VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI,
    E_SUBPASS_SHADING_HUAWEI = VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI,
    E_SUBPASS_SHADER_HUAWEI = VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI,
    E_MESH_SHADER_EXT = VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT,
    E_TASK_SHADER_EXT = VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT,
    E_MESH_SHADER_NV = VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV,
    E_TASK_SHADER_NV = VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV,
    E_FRAGMENT_DENSITY_PROCESS_EXT = VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT,
    E_ACCELERATION_STRUCTURE_BUILD_NV = VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV,
    E_RAY_TRACING_SHADER_NV = VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV,
    E_RAY_TRACING_SHADER_KHR = VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR,
    E_ACCELERATION_STRUCTURE_BUILD_KHR = VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
    E_SHADING_RATE_IMAGE_NV = VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR = VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    E_COMMAND_PREPROCESS_NV = VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV,
    E_CONDITIONAL_RENDERING_EXT = VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT,
    E_TRANSFORM_FEEDBACK_EXT = VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT,
    E_VIDEO_ENCODE_KHR = VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR,
    E_VIDEO_DECODE_KHR = VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR,
    E_PRE_RASTERIZATION_SHADERS_KHR = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR,
    E_PRE_RASTERIZATION_SHADERS = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT,
    E_VERTEX_ATTRIBUTE_INPUT_KHR = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR,
    E_VERTEX_ATTRIBUTE_INPUT = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT,
    E_INDEX_INPUT_KHR = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR,
    E_INDEX_INPUT = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT,
    E_CLEAR_KHR = VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR,
    E_CLEAR = VK_PIPELINE_STAGE_2_CLEAR_BIT,
    E_BLIT_KHR = VK_PIPELINE_STAGE_2_BLIT_BIT_KHR,
    E_BLIT = VK_PIPELINE_STAGE_2_BLIT_BIT,
    E_RESOLVE_KHR = VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR,
    E_RESOLVE = VK_PIPELINE_STAGE_2_RESOLVE_BIT,
    E_COPY_KHR = VK_PIPELINE_STAGE_2_COPY_BIT_KHR,
    E_COPY = VK_PIPELINE_STAGE_2_COPY_BIT,
    E_ALL_COMMANDS_KHR = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR,
    E_ALL_COMMANDS = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT,
    E_ALL_GRAPHICS_KHR = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR,
    E_ALL_GRAPHICS = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT,
    E_HOST_KHR = VK_PIPELINE_STAGE_2_HOST_BIT_KHR,
    E_HOST = VK_PIPELINE_STAGE_2_HOST_BIT,
    E_BOTTOM_OF_PIPE_KHR = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR,
    E_BOTTOM_OF_PIPE = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT,
    E_TRANSFER_KHR = VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR,
    E_TRANSFER = VK_PIPELINE_STAGE_2_TRANSFER_BIT,
    E_ALL_TRANSFER_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR,
    E_ALL_TRANSFER = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT,
    E_COMPUTE_SHADER_KHR = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR,
    E_COMPUTE_SHADER = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT,
    E_COLOR_ATTACHMENT_OUTPUT_KHR = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR,
    E_COLOR_ATTACHMENT_OUTPUT = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT,
    E_LATE_FRAGMENT_TESTS_KHR = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR,
    E_LATE_FRAGMENT_TESTS = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT,
    E_EARLY_FRAGMENT_TESTS_KHR = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR,
    E_EARLY_FRAGMENT_TESTS = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT,
    E_FRAGMENT_SHADER_KHR = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR,
    E_FRAGMENT_SHADER = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT,
    E_GEOMETRY_SHADER_KHR = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR,
    E_GEOMETRY_SHADER = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT,
    E_TESSELLATION_EVALUATION_SHADER_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR,
    E_TESSELLATION_EVALUATION_SHADER = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT,
    E_TESSELLATION_CONTROL_SHADER_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR,
    E_TESSELLATION_CONTROL_SHADER = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT,
    E_VERTEX_SHADER_KHR = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR,
    E_VERTEX_SHADER = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT,
    E_VERTEX_INPUT_KHR = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR,
    E_VERTEX_INPUT = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT,
    E_DRAW_INDIRECT_KHR = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR,
    E_DRAW_INDIRECT = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT,
    E_TOP_OF_PIPE_KHR = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR,
    E_TOP_OF_PIPE = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT,
    E_NONE_KHR = VK_PIPELINE_STAGE_2_NONE_KHR,
    E_NONE = VK_PIPELINE_STAGE_2_NONE,
  };

  // VkAccessFlagBits2
  enum class EResourceAccessFlag : uint64 {
    E_OPTICAL_FLOW_WRITE_NV = VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV,
    E_OPTICAL_FLOW_READ_NV = VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV,
    E_MICROMAP_WRITE_EXT = VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT,
    E_MICROMAP_READ_EXT = VK_ACCESS_2_MICROMAP_READ_BIT_EXT,
    E_SHADER_BINDING_TABLE_READ_KHR = VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR,
    E_INVOCATION_MASK_READ_HUAWEI = VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI,
    E_DESCRIPTOR_BUFFER_READ_EXT = VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT,
    E_COLOR_ATTACHMENT_READ_NONCOHERENT_EXT = VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT,
    E_FRAGMENT_DENSITY_MAP_READ_EXT = VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT,
    E_ACCELERATION_STRUCTURE_WRITE_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV,
    E_ACCELERATION_STRUCTURE_READ_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV,
    E_ACCELERATION_STRUCTURE_WRITE_KHR = VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR,
    E_ACCELERATION_STRUCTURE_READ_KHR = VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR,
    E_SHADING_RATE_IMAGE_READ_NV = VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_KHR = VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,
    E_COMMAND_PREPROCESS_WRITE_NV = VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV,
    E_COMMAND_PREPROCESS_READ_NV = VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV,
    E_CONDITIONAL_RENDERING_READ_EXT = VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT,
    E_TRANSFORM_FEEDBACK_COUNTER_WRITE_EXT = VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT,
    E_TRANSFORM_FEEDBACK_COUNTER_READ_EXT = VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT,
    E_TRANSFORM_FEEDBACK_WRITE_EXT = VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT,
    E_VIDEO_ENCODE_WRITE_KHR = VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR,
    E_VIDEO_ENCODE_READ_KHR = VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR,
    E_VIDEO_DECODE_WRITE_KHR = VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR,
    E_VIDEO_DECODE_READ_KHR = VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR,
    E_SHADER_STORAGE_WRITE_KHR = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR,
    E_SHADER_STORAGE_WRITE = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT,
    E_SHADER_STORAGE_READ_KHR = VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR,
    E_SHADER_STORAGE_READ = VK_ACCESS_2_SHADER_STORAGE_READ_BIT,
    E_SHADER_SAMPLED_READ_KHR = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR,
    E_SHADER_SAMPLED_READ = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT,
    E_MEMORY_WRITE_KHR = VK_ACCESS_2_MEMORY_WRITE_BIT_KHR,
    E_MEMORY_WRITE = VK_ACCESS_2_MEMORY_WRITE_BIT,
    E_MEMORY_READ_KHR = VK_ACCESS_2_MEMORY_READ_BIT_KHR,
    E_MEMORY_READ = VK_ACCESS_2_MEMORY_READ_BIT,
    E_HOST_WRITE_KHR = VK_ACCESS_2_HOST_WRITE_BIT_KHR,
    E_HOST_WRITE = VK_ACCESS_2_HOST_WRITE_BIT,
    E_HOST_READ_KHR = VK_ACCESS_2_HOST_READ_BIT_KHR,
    E_HOST_READ = VK_ACCESS_2_HOST_READ_BIT,
    E_TRANSFER_WRITE_KHR = VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR,
    E_TRANSFER_WRITE = VK_ACCESS_2_TRANSFER_WRITE_BIT,
    E_TRANSFER_READ_KHR = VK_ACCESS_2_TRANSFER_READ_BIT_KHR,
    E_TRANSFER_READ = VK_ACCESS_2_TRANSFER_READ_BIT,
    E_DEPTH_STENCIL_ATTACHMENT_WRITE_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR,
    E_DEPTH_STENCIL_ATTACHMENT_WRITE = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
    E_DEPTH_STENCIL_ATTACHMENT_READ_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR,
    E_DEPTH_STENCIL_ATTACHMENT_READ = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
    E_COLOR_ATTACHMENT_WRITE_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR,
    E_COLOR_ATTACHMENT_WRITE = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT,
    E_COLOR_ATTACHMENT_READ_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR,
    E_COLOR_ATTACHMENT_READ = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT,
    E_SHADER_WRITE_KHR = VK_ACCESS_2_SHADER_WRITE_BIT_KHR,
    E_SHADER_WRITE = VK_ACCESS_2_SHADER_WRITE_BIT,
    E_SHADER_READ_KHR = VK_ACCESS_2_SHADER_READ_BIT_KHR,
    E_SHADER_READ = VK_ACCESS_2_SHADER_READ_BIT,
    E_INPUT_ATTACHMENT_READ_KHR = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR,
    E_INPUT_ATTACHMENT_READ = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT,
    E_UNIFORM_READ_KHR = VK_ACCESS_2_UNIFORM_READ_BIT_KHR,
    E_UNIFORM_READ = VK_ACCESS_2_UNIFORM_READ_BIT,
    E_VERTEX_ATTRIBUTE_READ_KHR = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR,
    E_VERTEX_ATTRIBUTE_READ = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT,
    E_INDEX_READ_KHR = VK_ACCESS_2_INDEX_READ_BIT_KHR,
    E_INDEX_READ = VK_ACCESS_2_INDEX_READ_BIT,
    E_INDIRECT_COMMAND_READ_KHR = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR,
    E_INDIRECT_COMMAND_READ = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT,
    E_NONE_KHR = VK_ACCESS_2_NONE_KHR,
    E_NONE = VK_ACCESS_2_NONE,
  };

  // VkSubmitFlagBits
  enum class ESubmitFlag : std::underlying_type_t<VkSubmitFlagBits> {
    E_PROTECTED = VK_SUBMIT_PROTECTED_BIT,
    E_PROTECTED_KHR = VK_SUBMIT_PROTECTED_BIT_KHR,
  };

  // VkRenderingFlagBits
  enum class ERenderingFlag : std::underlying_type_t<VkRenderingFlagBits> {
    E_CONTENTS_SECONDARY_COMMAND_BUFFERS = VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT,
    E_SUSPENDING = VK_RENDERING_SUSPENDING_BIT,
    E_RESUMING = VK_RENDERING_RESUMING_BIT,
    E_CONTENTS_INLINE_EXT = VK_RENDERING_CONTENTS_INLINE_BIT_EXT,
    E_ENABLE_LEGACY_DITHERING_EXT = VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT,
    E_CONTENTS_SECONDARY_COMMAND_BUFFERS_KHR = VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR,
    E_SUSPENDING_KHR = VK_RENDERING_SUSPENDING_BIT_KHR,
    E_RESUMING_KHR = VK_RENDERING_RESUMING_BIT_KHR,
  };

  // VkFormatFeatureFlagBits
  enum class EFormatFeatureFlag : std::underlying_type_t<VkFormatFeatureFlagBits> {
    E_SAMPLED_IMAGE = VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT,
    E_STORAGE_IMAGE = VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT,
    E_STORAGE_IMAGE_ATOMIC = VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT,
    E_UNIFORM_TEXEL_BUFFER = VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT,
    E_STORAGE_TEXEL_BUFFER = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT,
    E_STORAGE_TEXEL_BUFFER_ATOMIC = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
    E_VERTEX_BUFFER = VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT,
    E_COLOR_ATTACHMENT = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT,
    E_COLOR_ATTACHMENT_BLEND = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT,
    E_DEPTH_STENCIL_ATTACHMENT = VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT,
    E_BLIT_SRC = VK_FORMAT_FEATURE_BLIT_SRC_BIT,
    E_BLIT_DST = VK_FORMAT_FEATURE_BLIT_DST_BIT,
    E_SAMPLED_IMAGE_FILTER_LINEAR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
    E_TRANSFER_SRC = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT,
    E_TRANSFER_DST = VK_FORMAT_FEATURE_TRANSFER_DST_BIT,
    E_MIDPOINT_CHROMA_SAMPLES = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
    E_DISJOINT = VK_FORMAT_FEATURE_DISJOINT_BIT,
    E_COSITED_CHROMA_SAMPLES = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT,
    E_SAMPLED_IMAGE_FILTER_MINMAX = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT,
    E_VIDEO_DECODE_OUTPUT_KHR = VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR,
    E_VIDEO_DECODE_DPB_KHR = VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR,
    E_ACCELERATION_STRUCTURE_VERTEX_BUFFER_KHR = VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR,
    E_SAMPLED_IMAGE_FILTER_CUBIC_EXT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT,
    E_FRAGMENT_DENSITY_MAP_EXT = VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR = VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    E_VIDEO_ENCODE_INPUT_KHR = VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR,
    E_VIDEO_ENCODE_DPB_KHR = VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR,
    E_SAMPLED_IMAGE_FILTER_CUBIC_IMG = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG,
    E_TRANSFER_SRC_KHR = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR,
    E_TRANSFER_DST_KHR = VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR,
    E_SAMPLED_IMAGE_FILTER_MINMAX_EXT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT,
    E_MIDPOINT_CHROMA_SAMPLES_KHR = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR,
    E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR,
    E_DISJOINT_KHR = VK_FORMAT_FEATURE_DISJOINT_BIT_KHR,
    E_COSITED_CHROMA_SAMPLES_KHR = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR,
  };

  // VkPresentModeKHR
  enum class EPresentMode : std::underlying_type_t<VkPresentModeKHR> {
    E_IMMEDIATE_KHR = VK_PRESENT_MODE_IMMEDIATE_KHR,
    E_MAILBOX_KHR = VK_PRESENT_MODE_MAILBOX_KHR,
    E_FIFO_KHR = VK_PRESENT_MODE_FIFO_KHR,
    E_FIFO_RELAXED_KHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR,
    E_SHARED_DEMAND_REFRESH_KHR = VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR,
    E_SHARED_CONTINUOUS_REFRESH_KHR = VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR,
  };

  // VkColorSpaceKHR
  enum class EColorSpace : std::underlying_type_t<VkColorSpaceKHR> {
    E_SRGB_NONLINEAR_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,
    E_DISPLAY_P3_NONLINEAR_EXT = VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT,
    E_EXTENDED_SRGB_LINEAR_EXT = VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT,
    E_DISPLAY_P3_LINEAR_EXT = VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT,
    E_DCI_P3_NONLINEAR_EXT = VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT,
    E_BT709_LINEAR_EXT = VK_COLOR_SPACE_BT709_LINEAR_EXT,
    E_BT709_NONLINEAR_EXT = VK_COLOR_SPACE_BT709_NONLINEAR_EXT,
    E_BT2020_LINEAR_EXT = VK_COLOR_SPACE_BT2020_LINEAR_EXT,
    E_HDR10_ST2084_EXT = VK_COLOR_SPACE_HDR10_ST2084_EXT,
    E_DOLBYVISION_EXT = VK_COLOR_SPACE_DOLBYVISION_EXT,
    E_HDR10_HLG_EXT = VK_COLOR_SPACE_HDR10_HLG_EXT,
    E_ADOBERGB_LINEAR_EXT = VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT,
    E_ADOBERGB_NONLINEAR_EXT = VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT,
    E_PASS_THROUGH_EXT = VK_COLOR_SPACE_PASS_THROUGH_EXT,
    E_EXTENDED_SRGB_NONLINEAR_EXT = VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT,
    E_DISPLAY_NATIVE_AMD = VK_COLOR_SPACE_DISPLAY_NATIVE_AMD,
    E_COLORSPACE_SRGB_NONLINEAR_KHR = VK_COLORSPACE_SRGB_NONLINEAR_KHR,
    E_DCI_P3_LINEAR_EXT = VK_COLOR_SPACE_DCI_P3_LINEAR_EXT,
  };

  // VkSurfaceTransformFlagBitsKHR
  enum class ESurfaceTransformFlag : std::underlying_type_t<VkSurfaceTransformFlagBitsKHR> {
    E_IDENTITY_KHR = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR,
    E_ROTATE_90_KHR = VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR,
    E_ROTATE_180_KHR = VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR,
    E_ROTATE_270_KHR = VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR,
    E_HORIZONTAL_MIRROR_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR,
    E_HORIZONTAL_MIRROR_ROTATE_90_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR,
    E_HORIZONTAL_MIRROR_ROTATE_180_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR,
    E_HORIZONTAL_MIRROR_ROTATE_270_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR,
    E_INHERIT_KHR = VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR,
  };

  // VkCompositeAlphaFlagBitsKHR
  enum class ECompositeAlphaFlag : std::underlying_type_t<VkCompositeAlphaFlagBitsKHR> {
    E_OPAQUE_KHR = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,
    E_PRE_MULTIPLIED_KHR = VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR,
    E_POST_MULTIPLIED_KHR = VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR,
    E_INHERIT_KHR = VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR,
  };

  // VkSwapchainCreateFlagBitsKHR
  enum class ESwapchainCreateFlag : std::underlying_type_t<VkSwapchainCreateFlagBitsKHR> {
    E_SPLIT_INSTANCE_BIND_REGIONS_KHR = VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,
    E_PROTECTED_KHR = VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR,
    E_MUTABLE_FORMAT_KHR = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR,
    E_DEFERRED_MEMORY_ALLOCATION_EXT = VK_SWAPCHAIN_CREATE_DEFERRED_MEMORY_ALLOCATION_BIT_EXT,
  };

  // VkDeviceGroupPresentModeFlagBitsKHR
  enum class EDeviceGroupPresentModeFlag : std::underlying_type_t<VkDeviceGroupPresentModeFlagBitsKHR> {
    E_LOCAL_KHR = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR,
    E_REMOTE_KHR = VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR,
    E_SUM_KHR = VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR,
    E_LOCAL_MULTI_DEVICE_KHR = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR,
  };

  // VkDisplayPlaneAlphaFlagBitsKHR
  enum class EDisplayPlaneAlphaFlag : std::underlying_type_t<VkDisplayPlaneAlphaFlagBitsKHR> {
    E_OPAQUE_KHR = VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR,
    E_GLOBAL_KHR = VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,
    E_PER_PIXEL_KHR = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR,
    E_PER_PIXEL_PREMULTIPLIED_KHR = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR,
  };

  // VkQueryResultStatusKHR
  enum class EQueryResultStatus : std::underlying_type_t<VkQueryResultStatusKHR> {
    E_ERROR_KHR = VK_QUERY_RESULT_STATUS_ERROR_KHR,
    E_NOT_READY_KHR = VK_QUERY_RESULT_STATUS_NOT_READY_KHR,
    E_COMPLETE_KHR = VK_QUERY_RESULT_STATUS_COMPLETE_KHR,
    E_INSUFFICIENTSTREAM_BUFFER_RANGE_KHR = VK_QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR,
  };

  // VkVideoCodecOperationFlagBitsKHR
  enum class EVideoCodecOperationFlag : std::underlying_type_t<VkVideoCodecOperationFlagBitsKHR> {
    E_NONE_KHR = VK_VIDEO_CODEC_OPERATION_NONE_KHR,
    E_ENCODE_H264_KHR = VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR,
    E_ENCODE_H265_KHR = VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR,
    E_DECODE_H264_KHR = VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR,
    E_DECODE_H265_KHR = VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR,
  };

  // VkVideoChromaSubsamplingFlagBitsKHR
  enum class EVideoChromaSubsamplingFlag : std::underlying_type_t<VkVideoChromaSubsamplingFlagBitsKHR> {
    E_INVALID_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR,
    E_MONOCHROME_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR,
    E_420_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR,
    E_422_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR,
    E_444_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR,
  };

  // VkVideoComponentBitDepthFlagBitsKHR
  enum class EVideoComponentBitDepthFlag : std::underlying_type_t<VkVideoComponentBitDepthFlagBitsKHR> {
    E_VIDEO_COMPONENT_DEPTH_INVALID_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR,
    E_VIDEO_COMPONENT_DEPTH_8_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR,
    E_VIDEO_COMPONENT_DEPTH_10_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR,
    E_VIDEO_COMPONENT_DEPTH_12_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR,
  };

  // VkVideoCapabilityFlagBitsKHR
  enum class EVideoCapabilityFlag : std::underlying_type_t<VkVideoCapabilityFlagBitsKHR> {
    E_PROTECTED_CONTENT_KHR = VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR,
    E_SEPARATE_REFERENCE_IMAGES_KHR = VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR,
  };

  // VkVideoSessionCreateFlagBitsKHR
  enum class EVideoSessionCreateFlag : std::underlying_type_t<VkVideoSessionCreateFlagBitsKHR> {
    E_PROTECTED_CONTENT_KHR = VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR,
    E_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_KHR = VK_VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR,
    E_INLINE_QUERIES_KHR = VK_VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR,
  };

  // VkVideoCodingControlFlagBitsKHR
  enum class EVideoCodingControlFlag : std::underlying_type_t<VkVideoCodingControlFlagBitsKHR> {
    E_RESET_KHR = VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR,
    E_ENCODE_RATE_CONTROL_KHR = VK_VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR,
    E_ENCODE_QUALITY_LEVEL_KHR = VK_VIDEO_CODING_CONTROL_ENCODE_QUALITY_LEVEL_BIT_KHR,
  };

  // VkVideoDecodeCapabilityFlagBitsKHR
  enum class EVideoDecodeCapabilityFlag : std::underlying_type_t<VkVideoDecodeCapabilityFlagBitsKHR> {
    E_DPB_AND_OUTPUT_COINCIDE_KHR = VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR,
    E_DPB_AND_OUTPUT_DISTINCT_KHR = VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR,
  };

  // VkVideoDecodeUsageFlagBitsKHR
  enum class EVideoDecodeUsageFlag : std::underlying_type_t<VkVideoDecodeUsageFlagBitsKHR> {
    E_DEFAULT_KHR = VK_VIDEO_DECODE_USAGE_DEFAULT_KHR,
    E_TRANSCODING_KHR = VK_VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR,
    E_OFFLINE_KHR = VK_VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR,
    E_STREAMING_KHR = VK_VIDEO_DECODE_USAGE_STREAMING_BIT_KHR,
  };

  // VkVideoEncodeH264CapabilityFlagBitsKHR
  enum class EVideoEncodeH264CapabilityFlag : std::underlying_type_t<VkVideoEncodeH264CapabilityFlagBitsKHR> {
    E_HRD_COMPLIANCE_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR,
    E_PREDICTION_WEIGHT_TABLE_GENERATED_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR,
    E_ROW_UNALIGNED_SLICE_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR,
    E_DIFFERENT_SLICE_TYPE_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR,
    E_B_FRAME_IN_L0_LIST_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR,
    E_B_FRAME_IN_L1_LIST_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR,
    E_PER_PICTURE_TYPE_MIN_MAX_QP_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR,
    E_PER_SLICE_CONSTANT_QP_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR,
    E_GENERATE_PREFIX_NALU_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR,
  };

  // VkVideoEncodeH264StdFlagBitsKHR
  enum class EVideoEncodeH264StdFlag : std::underlying_type_t<VkVideoEncodeH264StdFlagBitsKHR> {
    E_SEPARATE_COLOR_PLANE_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR,
    E_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR,
    E_SCALING_MATRIX_PRESENT_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR,
    E_CHROMA_QP_INDEX_OFFSET_KHR = VK_VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR,
    E_SECOND_CHROMA_QP_INDEX_OFFSET_KHR = VK_VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR,
    E_PIC_INIT_QP_MINUS26_KHR = VK_VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR,
    E_WEIGHTED_PRED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR,
    E_WEIGHTED_BIPRED_IDC_EXPLICIT_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR,
    E_WEIGHTED_BIPRED_IDC_IMPLICIT_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR,
    E_TRANSFORM_8X8_MODE_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR,
    E_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_KHR = VK_VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR,
    E_ENTROPY_CODING_MODE_FLAG_UNSET_KHR = VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR,
    E_ENTROPY_CODING_MODE_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR,
    E_DIRECT_8X8_INFERENCE_FLAG_UNSET_KHR = VK_VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR,
    E_CONSTRAINED_INTRA_PRED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR,
    E_DEBLOCKING_FILTER_DISABLED_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR,
    E_DEBLOCKING_FILTER_ENABLED_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR,
    E_DEBLOCKING_FILTER_PARTIAL_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR,
    E_SLICE_QP_DELTA_KHR = VK_VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR,
    E_DIFFERENT_SLICE_QP_DELTA_KHR = VK_VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR,
  };

  // VkVideoEncodeH264RateControlFlagBitsKHR
  enum class EVideoEncodeH264RateControlFlag : std::underlying_type_t<VkVideoEncodeH264RateControlFlagBitsKHR> {
    E_ATTEMPT_HRD_COMPLIANCE_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR,
    E_REGULAR_GOP_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR,
    E_REFERENCE_PATTERN_FLAT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR,
    E_REFERENCE_PATTERN_DYADIC_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR,
    E_TEMPORAL_LAYER_PATTERN_DYADIC_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR,
  };

  // VkVideoEncodeH265CapabilityFlagBitsKHR
  enum class EVideoEncodeH265CapabilityFlag : std::underlying_type_t<VkVideoEncodeH265CapabilityFlagBitsKHR> {
    E_HRD_COMPLIANCE_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR,
    E_PREDICTION_WEIGHT_TABLE_GENERATED_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR,
    E_ROW_UNALIGNED_SLICE_SEGMENT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR,
    E_DIFFERENT_SLICE_SEGMENT_TYPE_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR,
    E_B_FRAME_IN_L0_LIST_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR,
    E_B_FRAME_IN_L1_LIST_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR,
    E_PER_PICTURE_TYPE_MIN_MAX_QP_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR,
    E_PER_SLICE_SEGMENT_CONSTANT_QP_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR,
    E_MULTIPLE_TILES_PER_SLICE_SEGMENT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR,
    E_MULTIPLE_SLICE_SEGMENTS_PER_TILE_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR,
  };

  // VkVideoEncodeH265StdFlagBitsKHR
  enum class EVideoEncodeH265StdFlag : std::underlying_type_t<VkVideoEncodeH265StdFlagBitsKHR> {
    E_SEPARATE_COLOR_PLANE_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR,
    E_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR,
    E_SCALING_LIST_DATA_PRESENT_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR,
    E_PCM_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR,
    E_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR,
    E_INIT_QP_MINUS26_KHR = VK_VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR,
    E_WEIGHTED_PRED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR,
    E_WEIGHTED_BIPRED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR,
    E_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_KHR = VK_VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR,
    E_SIGN_DATA_HIDING_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR,
    E_TRANSFORM_SKIP_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR,
    E_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR,
    E_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR,
    E_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR,
    E_CONSTRAINED_INTRA_PRED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR,
    E_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR,
    E_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR,
    E_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR,
    E_DEPENDENT_SLICE_SEGMENT_FLAG_SET_KHR = VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR,
    E_SLICE_QP_DELTA_KHR = VK_VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR,
    E_DIFFERENT_SLICE_QP_DELTA_KHR = VK_VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR,
  };

  // VkVideoEncodeH265CtbSizeFlagBitsKHR
  enum class EVideoEncodeH265CtbSizeFlag : std::underlying_type_t<VkVideoEncodeH265CtbSizeFlagBitsKHR> {
    E_16_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR,
    E_32_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR,
    E_64_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR,
  };

  // VkVideoEncodeH265TransformBlockSizeFlagBitsKHR
  enum class EVideoEncodeH265TransformBlockSizeFlag : std::underlying_type_t<VkVideoEncodeH265TransformBlockSizeFlagBitsKHR> {
    E_4_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR,
    E_8_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR,
    E_16_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR,
    E_32_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR,
  };

  // VkVideoEncodeH265RateControlFlagBitsKHR
  enum class EVideoEncodeH265RateControlFlag : std::underlying_type_t<VkVideoEncodeH265RateControlFlagBitsKHR> {
    E_ATTEMPT_HRD_COMPLIANCE_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR,
    E_REGULAR_GOP_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR,
    E_REFERENCE_PATTERN_FLAT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR,
    E_REFERENCE_PATTERN_DYADIC_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR,
    E_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR,
  };

  // VkVideoDecodeH264PictureLayoutFlagBitsKHR
  enum class EVideoDecodeH264PictureLayoutFlag : std::underlying_type_t<VkVideoDecodeH264PictureLayoutFlagBitsKHR> {
    E_PROGRESSIVE_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR,
    E_INTERLACED_INTERLEAVED_LINES_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR,
    E_INTERLACED_SEPARATE_PLANES_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR,
  };

  // VkPerformanceCounterUnitKHR
  enum class EPerformanceCounterUnit : std::underlying_type_t<VkPerformanceCounterUnitKHR> {
    E_GENERIC_KHR = VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR,
    E_PERCENTAGE_KHR = VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR,
    E_NANOSECONDS_KHR = VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR,
    E_BYTES_KHR = VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR,
    E_BYTES_PER_SECOND_KHR = VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR,
    E_KELVIN_KHR = VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR,
    E_WATTS_KHR = VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR,
    E_VOLTS_KHR = VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR,
    E_AMPS_KHR = VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR,
    E_HERTZ_KHR = VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR,
    E_CYCLES_KHR = VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR,
  };

  // VkPerformanceCounterScopeKHR
  enum class EPerformanceCounterScope : std::underlying_type_t<VkPerformanceCounterScopeKHR> {
    E_COMMAND_BUFFER_KHR = VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR,
    E_RENDER_PASS_KHR = VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR,
    E_COMMAND_KHR = VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR,
    E_QUERY_SCOPE_COMMAND_BUFFER_KHR = VK_QUERY_SCOPE_COMMAND_BUFFER_KHR,
    E_QUERY_SCOPE_RENDER_PASS_KHR = VK_QUERY_SCOPE_RENDER_PASS_KHR,
    E_QUERY_SCOPE_COMMAND_KHR = VK_QUERY_SCOPE_COMMAND_KHR,
  };

  // VkPerformanceCounterStorageKHR
  enum class EPerformanceCounterStorage : std::underlying_type_t<VkPerformanceCounterStorageKHR> {
    E_INT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR,
    E_INT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR,
    E_UINT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR,
    E_UINT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR,
    E_FLOAT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR,
    E_FLOAT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR,
  };

  // VkPerformanceCounterDescriptionFlagBitsKHR
  enum class EPerformanceCounterDescriptionFlag : std::underlying_type_t<VkPerformanceCounterDescriptionFlagBitsKHR> {
    E_PERFORMANCE_IMPACTING_KHR = VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR,
    E_CONCURRENTLY_IMPACTED_KHR = VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR,
  };

  // VkQueueGlobalPriorityKHR
  enum class EQueueGlobalPriority : std::underlying_type_t<VkQueueGlobalPriorityKHR> {
    E_LOW_KHR = VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR,
    E_MEDIUM_KHR = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR,
    E_HIGH_KHR = VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR,
    E_REALTIME_KHR = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR,
    E_LOW_EXT = VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT,
    E_MEDIUM_EXT = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT,
    E_HIGH_EXT = VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT,
    E_REALTIME_EXT = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT,
  };

  // VkFragmentShadingRateCombinerOpKHR
  enum class EFragmentShadingRateCombinerOperator : std::underlying_type_t<VkFragmentShadingRateCombinerOpKHR> {
    E_KEEP_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR,
    E_REPLACE_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR,
    E_MIN_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR,
    E_MAX_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR,
    E_MUL_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR,
  };

  // VkPipelineExecutableStatisticFormatKHR
  enum class EPipelineExecutableStatisticFormat : std::underlying_type_t<VkPipelineExecutableStatisticFormatKHR> {
    E_BOOL32_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR,
    E_INT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR,
    E_UINT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR,
    E_FLOAT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR,
  };

  // VkVideoEncodeTuningModeKHR
  enum class EVideoEncodeTuningMode : std::underlying_type_t<VkVideoEncodeTuningModeKHR> {
    E_DEFAULT_KHR = VK_VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR,
    E_HIGH_QUALITY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR,
    E_LOW_LATENCY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR,
    E_ULTRA_LOW_LATENCY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR,
    E_LOSSLESS_KHR = VK_VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR,
  };

  // VkVideoEncodeCapabilityFlagBitsKHR
  enum class EVideoEncodeCapabilityFlag : std::underlying_type_t<VkVideoEncodeCapabilityFlagBitsKHR> {
    E_PRECEDING_EXTERNALLY_ENCODED_BYTES_KHR = VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR,
    E_INSUFFICIENTSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR = VK_VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR,
  };

  // VkVideoEncodeRateControlModeFlagBitsKHR
  enum class EVideoEncodeRateControlModeFlag : std::underlying_type_t<VkVideoEncodeRateControlModeFlagBitsKHR> {
    E_DEFAULT_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR,
    E_DISABLED_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR,
    E_CBR_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR,
    E_VBR_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR,
  };

  // VkVideoEncodeFeedbackFlagBitsKHR
  enum class EVideoEncodeFeedbackFlag : std::underlying_type_t<VkVideoEncodeFeedbackFlagBitsKHR> {
    ESTREAM_BUFFER_OFFSET_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR,
    ESTREAM_BYTES_WRITTEN_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR,
    ESTREAM_HAS_OVERRIDES_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR,
  };

  // VkVideoEncodeUsageFlagBitsKHR
  enum class EVideoEncodeUsageFlag : std::underlying_type_t<VkVideoEncodeUsageFlagBitsKHR> {
    E_DEFAULT_KHR = VK_VIDEO_ENCODE_USAGE_DEFAULT_KHR,
    E_TRANSCODING_KHR = VK_VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR,
    E_STREAMING_KHR = VK_VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR,
    E_RECORDING_KHR = VK_VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR,
    E_CONFERENCING_KHR = VK_VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR,
  };

  // VkVideoEncodeContentFlagBitsKHR
  enum class EVideoEncodeContentFlag : std::underlying_type_t<VkVideoEncodeContentFlagBitsKHR> {
    E_DEFAULT_KHR = VK_VIDEO_ENCODE_CONTENT_DEFAULT_KHR,
    E_CAMERA_KHR = VK_VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR,
    E_DESKTOP_KHR = VK_VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR,
    E_RENDERED_KHR = VK_VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR,
  };

  // VkPipelineCreateFlagBits
  enum class EPipelineCreateFlag : std::underlying_type_t<VkPipelineCreateFlagBits> {
    E_DISABLE_OPTIMIZATION = VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT,
    E_ALLOW_DERIVATIVES = VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT,
    E_DERIVATIVE = VK_PIPELINE_CREATE_DERIVATIVE_BIT,
    E_VIEW_INDEX_FROM_DEVICE_INDEX = VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT,
    E_DISPATCH_BASE = VK_PIPELINE_CREATE_DISPATCH_BASE,
    E_FAIL_ON_PIPELINE_COMPILE_REQUIRED = VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT,
    E_EARLY_RETURN_ON_FAILURE = VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT,
    E_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR = VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    E_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_EXT = VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,
    E_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_KHR = VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR,
    E_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_KHR = VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR,
    E_RAY_TRACING_NO_NULL_MISS_SHADERS_KHR = VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR,
    E_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_KHR = VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR,
    E_RAY_TRACING_SKIP_TRIANGLES_KHR = VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR,
    E_RAY_TRACING_SKIP_AABBS_KHR = VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR,
    E_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_KHR = VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR,
    E_DEFER_COMPILE_NV = VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV,
    E_CAPTURE_STATISTICS_KHR = VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR,
    E_CAPTURE_INTERNAL_REPRESENTATIONS_KHR = VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR,
    E_INDIRECT_BINDABLE_NV = VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV,
    E_LIBRARY_KHR = VK_PIPELINE_CREATE_LIBRARY_BIT_KHR,
    E_DESCRIPTOR_BUFFER_EXT = VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT,
    E_RETAIN_LINK_TIME_OPTIMIZATION_INFO_EXT = VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT,
    E_LINK_TIME_OPTIMIZATION_EXT = VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT,
    E_RAY_TRACING_ALLOW_MOTION_NV = VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV,
    E_COLOR_ATTACHMENT_FEEDBACK_LOOP_EXT = VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT,
    E_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_EXT = VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT,
    E_RAY_TRACING_OPACITY_MICROMAP_EXT = VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT,
    E_NO_PROTECTED_ACCESS_EXT = VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT,
    E_PROTECTED_ACCESS_ONLY_EXT = VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT,
    E_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR = VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    E_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_EXT = VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,
    E_VIEW_INDEX_FROM_DEVICE_INDEX_KHR = VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR,
    E_DISPATCH_BASE_KHR = VK_PIPELINE_CREATE_DISPATCH_BASE_KHR,
    E_FAIL_ON_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT,
    E_EARLY_RETURN_ON_FAILURE_EXT = VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT,
  };

  // VkBufferUsageFlagBits
  enum class EBufferUsageFlag : std::underlying_type_t<VkBufferUsageFlagBits> {
    E_TRANSFER_SRC = VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
    E_TRANSFER_DST = VK_BUFFER_USAGE_TRANSFER_DST_BIT,
    E_UNIFORM_TEXEL_BUFFER = VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT,
    E_STORAGE_TEXEL_BUFFER = VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT,
    E_UNIFORM_BUFFER = VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
    E_STORAGE_BUFFER = VK_BUFFER_USAGE_STORAGE_BUFFER_BIT,
    E_INDEX_BUFFER = VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
    E_VERTEX_BUFFER = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
    E_INDIRECT_BUFFER = VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT,
    E_SHADER_DEVICE_ADDRESS = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT,
    E_VIDEO_DECODE_SRC_KHR = VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR,
    E_VIDEO_DECODE_DST_KHR = VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR,
    E_TRANSFORM_FEEDBACK_BUFFER_EXT = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT,
    E_TRANSFORM_FEEDBACK_COUNTER_BUFFER_EXT = VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT,
    E_CONDITIONAL_RENDERING_EXT = VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT,
    E_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_KHR = VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR,
    E_ACCELERATION_STRUCTURE_STORAGE_KHR = VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR,
    E_SHADER_BINDING_TABLE_KHR = VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR,
    E_VIDEO_ENCODE_DST_KHR = VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR,
    E_VIDEO_ENCODE_SRC_KHR = VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR,
    E_SAMPLER_DESCRIPTOR_BUFFER_EXT = VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT,
    E_RESOURCE_DESCRIPTOR_BUFFER_EXT = VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT,
    E_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_EXT = VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT,
    E_MICROMAP_BUILD_INPUT_READ_ONLY_EXT = VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT,
    E_MICROMAP_STORAGE_EXT = VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT,
    E_RAY_TRACING_NV = VK_BUFFER_USAGE_RAY_TRACING_BIT_NV,
    E_SHADER_DEVICE_ADDRESS_EXT = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT,
    E_SHADER_DEVICE_ADDRESS_KHR = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR,
  };

  // VkComponentTypeKHR
  enum class EComponentType : std::underlying_type_t<VkComponentTypeKHR> {
    E_FLOAT16_KHR = VK_COMPONENT_TYPE_FLOAT16_KHR,
    E_FLOAT32_KHR = VK_COMPONENT_TYPE_FLOAT32_KHR,
    E_FLOAT64_KHR = VK_COMPONENT_TYPE_FLOAT64_KHR,
    E_SINT8_KHR = VK_COMPONENT_TYPE_SINT8_KHR,
    E_SINT16_KHR = VK_COMPONENT_TYPE_SINT16_KHR,
    E_SINT32_KHR = VK_COMPONENT_TYPE_SINT32_KHR,
    E_SINT64_KHR = VK_COMPONENT_TYPE_SINT64_KHR,
    E_UINT8_KHR = VK_COMPONENT_TYPE_UINT8_KHR,
    E_UINT16_KHR = VK_COMPONENT_TYPE_UINT16_KHR,
    E_UINT32_KHR = VK_COMPONENT_TYPE_UINT32_KHR,
    E_UINT64_KHR = VK_COMPONENT_TYPE_UINT64_KHR,
    E_FLOAT16_NV = VK_COMPONENT_TYPE_FLOAT16_NV,
    E_FLOAT32_NV = VK_COMPONENT_TYPE_FLOAT32_NV,
    E_FLOAT64_NV = VK_COMPONENT_TYPE_FLOAT64_NV,
    E_SINT8_NV = VK_COMPONENT_TYPE_SINT8_NV,
    E_SINT16_NV = VK_COMPONENT_TYPE_SINT16_NV,
    E_SINT32_NV = VK_COMPONENT_TYPE_SINT32_NV,
    E_SINT64_NV = VK_COMPONENT_TYPE_SINT64_NV,
    E_UINT8_NV = VK_COMPONENT_TYPE_UINT8_NV,
    E_UINT16_NV = VK_COMPONENT_TYPE_UINT16_NV,
    E_UINT32_NV = VK_COMPONENT_TYPE_UINT32_NV,
    E_UINT64_NV = VK_COMPONENT_TYPE_UINT64_NV,
  };

  // VkScopeKHR
  enum class EScope : std::underlying_type_t<VkScopeKHR> {
    E_DEVICE_KHR = VK_SCOPE_DEVICE_KHR,
    E_WORKGROUP_KHR = VK_SCOPE_WORKGROUP_KHR,
    E_SUBGROUP_KHR = VK_SCOPE_SUBGROUP_KHR,
    E_QUEUE_FAMILY_KHR = VK_SCOPE_QUEUE_FAMILY_KHR,
    E_DEVICE_NV = VK_SCOPE_DEVICE_NV,
    E_WORKGROUP_NV = VK_SCOPE_WORKGROUP_NV,
    E_SUBGROUP_NV = VK_SCOPE_SUBGROUP_NV,
    E_QUEUE_FAMILY_NV = VK_SCOPE_QUEUE_FAMILY_NV,
  };

  // VkTimeDomainKHR
  enum class ETimeDomain : std::underlying_type_t<VkTimeDomainKHR> {
    E_DEVICE_KHR = VK_TIME_DOMAIN_DEVICE_KHR,
    E_CLOCK_MONOTONIC_KHR = VK_TIME_DOMAIN_CLOCK_MONOTONIC_KHR,
    E_CLOCK_MONOTONIC_RAW_KHR = VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR,
    E_QUERY_PERFORMANCE_COUNTER_KHR = VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR,
    E_DEVICE_EXT = VK_TIME_DOMAIN_DEVICE_EXT,
    E_CLOCK_MONOTONIC_EXT = VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT,
    E_CLOCK_MONOTONIC_RAW_EXT = VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT,
    E_QUERY_PERFORMANCE_COUNTER_EXT = VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT,
  };

  // VkDebugReportObjectTypeEXT
  enum class EDebugReportObjectType : std::underlying_type_t<VkDebugReportObjectTypeEXT> {
    E_UNKNOWN_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,
    E_INSTANCE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,
    E_PHYSICAL_DEVICE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,
    E_DEVICE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,
    E_QUEUE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,
    E_SEMAPHORE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,
    E_COMMAND_BUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,
    E_FENCE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,
    E_DEVICE_MEMORY_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,
    E_BUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,
    E_IMAGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,
    E_EVENT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,
    E_QUERY_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,
    E_BUFFER_VIEW_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,
    E_IMAGE_VIEW_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,
    E_SHADER_MODULE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,
    E_PIPELINE_CACHE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,
    E_PIPELINE_LAYOUT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,
    E_RENDER_PASS_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,
    E_PIPELINE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,
    E_DESCRIPTOR_SET_LAYOUT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,
    E_SAMPLER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,
    E_DESCRIPTOR_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,
    E_DESCRIPTOR_SET_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,
    E_FRAMEBUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,
    E_COMMAND_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,
    E_SURFACE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,
    E_SWAPCHAIN_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,
    E_DEBUG_REPORT_CALLBACK_EXT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,
    E_DISPLAY_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,
    E_DISPLAY_MODE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,
    E_VALIDATION_CACHE_EXT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT,
    E_SAMPLER_YCBCR_CONVERSION_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT,
    E_DESCRIPTOR_UPDATE_TEMPLATE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT,
    E_CU_MODULE_NVX_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT,
    E_CU_FUNCTION_NVX_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT,
    E_ACCELERATION_STRUCTURE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT,
    E_ACCELERATION_STRUCTURE_NV_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT,
    E_CUDA_MODULE_NV_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_MODULE_NV_EXT,
    E_CUDA_FUNCTION_NV_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_CUDA_FUNCTION_NV_EXT,
    E_BUFFER_COLLECTION_FUCHSIA_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT,
    E_DEBUG_REPORT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT,
    E_VALIDATION_CACHE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT,
    E_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT,
    E_SAMPLER_YCBCR_CONVERSION_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT,
  };

  // VkDebugReportFlagBitsEXT
  enum class EDebugReportFlag : std::underlying_type_t<VkDebugReportFlagBitsEXT> {
    E_INFORMATION_EXT = VK_DEBUG_REPORT_INFORMATION_BIT_EXT,
    E_WARNING_EXT = VK_DEBUG_REPORT_WARNING_BIT_EXT,
    E_PERFORMANCE_WARNING_EXT = VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,
    E_ERROR_EXT = VK_DEBUG_REPORT_ERROR_BIT_EXT,
    E_DEBUG_EXT = VK_DEBUG_REPORT_DEBUG_BIT_EXT,
  };

  // VkRasterizationOrderAMD
  enum class ERasterizationOrder : std::underlying_type_t<VkRasterizationOrderAMD> {
    E_STRICT_AMD = VK_RASTERIZATION_ORDER_STRICT_AMD,
    E_RELAXED_AMD = VK_RASTERIZATION_ORDER_RELAXED_AMD,
  };

  // VkShaderInfoTypeAMD
  enum class EShaderInfoType : std::underlying_type_t<VkShaderInfoTypeAMD> {
    E_STATISTICS_AMD = VK_SHADER_INFO_TYPE_STATISTICS_AMD,
    E_BINARY_AMD = VK_SHADER_INFO_TYPE_BINARY_AMD,
    E_DISASSEMBLY_AMD = VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD,
  };

  // VkValidationCheckEXT
  enum class EValidationCheck : std::underlying_type_t<VkValidationCheckEXT> {
    E_ALL_EXT = VK_VALIDATION_CHECK_ALL_EXT,
    E_SHADERS_EXT = VK_VALIDATION_CHECK_SHADERS_EXT,
  };

  // VkPipelineRobustnessBufferBehaviorEXT
  enum class EPipelineRobustnessBufferBehavior : std::underlying_type_t<VkPipelineRobustnessBufferBehaviorEXT> {
    E_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT,
    E_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT,
    E_ROBUST_BUFFER_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT,
    E_ROBUST_BUFFER_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT,
  };

  // VkPipelineRobustnessImageBehaviorEXT
  enum class EPipelineRobustnessImageBehavior : std::underlying_type_t<VkPipelineRobustnessImageBehaviorEXT> {
    E_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT,
    E_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT,
    E_ROBUST_IMAGE_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT,
    E_ROBUST_IMAGE_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT,
  };

  // VkConditionalRenderingFlagBitsEXT
  enum class EConditionalRenderingFlag : std::underlying_type_t<VkConditionalRenderingFlagBitsEXT> {
    E_INVERTED_EXT = VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT,
  };

  // VkSurfaceCounterFlagBitsEXT
  enum class ESurfaceCounterFlag : std::underlying_type_t<VkSurfaceCounterFlagBitsEXT> {
    E_VBLANK_EXT = VK_SURFACE_COUNTER_VBLANK_EXT,
  };

  // VkDisplayPowerStateEXT
  enum class EDisplayPowerState : std::underlying_type_t<VkDisplayPowerStateEXT> {
    E_OFF_EXT = VK_DISPLAY_POWER_STATE_OFF_EXT,
    E_SUSPEND_EXT = VK_DISPLAY_POWER_STATE_SUSPEND_EXT,
    E_ON_EXT = VK_DISPLAY_POWER_STATE_ON_EXT,
  };

  // VkDeviceEventTypeEXT
  enum class EDeviceEventType : std::underlying_type_t<VkDeviceEventTypeEXT> {
    E_DISPLAY_HOTPLUG_EXT = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,
  };

  // VkDisplayEventTypeEXT
  enum class EDisplayEventType : std::underlying_type_t<VkDisplayEventTypeEXT> {
    E_FIRST_PIXEL_OUT_EXT = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,
  };

  // VkViewportCoordinateSwizzleNV
  enum class EViewportCoordinateSwizzle : std::underlying_type_t<VkViewportCoordinateSwizzleNV> {
    E_POSITIVE_X_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV,
    E_NEGATIVE_X_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV,
    E_POSITIVE_Y_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV,
    E_NEGATIVE_Y_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV,
    E_POSITIVE_Z_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV,
    E_NEGATIVE_Z_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV,
    E_POSITIVE_W_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV,
    E_NEGATIVE_W_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV,
  };

  // VkDiscardRectangleModeEXT
  enum class EDiscardRectangleMode : std::underlying_type_t<VkDiscardRectangleModeEXT> {
    E_INCLUSIVE_EXT = VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT,
    E_EXCLUSIVE_EXT = VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT,
  };

  // VkConservativeRasterizationModeEXT
  enum class EConservativeRasterizationMode : std::underlying_type_t<VkConservativeRasterizationModeEXT> {
    E_DISABLED_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT,
    E_OVERESTIMATE_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT,
    E_UNDERESTIMATE_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT,
  };

  // VkDebugUtilsMessageSeverityFlagBitsEXT
  enum class EDebugUtilsMessageSeverityFlag : std::underlying_type_t<VkDebugUtilsMessageSeverityFlagBitsEXT> {
    E_VERBOSE_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,
    E_INFO_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,
    E_WARNING_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,
    E_ERROR_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT,
  };

  // VkDebugUtilsMessageTypeFlagBitsEXT
  enum class EDebugUtilsMessageTypeFlag : std::underlying_type_t<VkDebugUtilsMessageTypeFlagBitsEXT> {
    E_GENERAL_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,
    E_VALIDATION_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,
    E_PERFORMANCE_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT,
    E_DEVICE_ADDRESS_BINDING_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_DEVICE_ADDRESS_BINDING_BIT_EXT,
  };

  // VkBlendOverlapEXT
  enum class EBlendOverlap : std::underlying_type_t<VkBlendOverlapEXT> {
    E_UNCORRELATED_EXT = VK_BLEND_OVERLAP_UNCORRELATED_EXT,
    E_DISJOINT_EXT = VK_BLEND_OVERLAP_DISJOINT_EXT,
    E_CONJOINT_EXT = VK_BLEND_OVERLAP_CONJOINT_EXT,
  };

  // VkCoverageModulationModeNV
  enum class ECoverageModulationMode : std::underlying_type_t<VkCoverageModulationModeNV> {
    E_NONE_NV = VK_COVERAGE_MODULATION_MODE_NONE_NV,
    E_RGB_NV = VK_COVERAGE_MODULATION_MODE_RGB_NV,
    E_ALPHA_NV = VK_COVERAGE_MODULATION_MODE_ALPHA_NV,
    E_RGBA_NV = VK_COVERAGE_MODULATION_MODE_RGBA_NV,
  };

  // VkValidationCacheHeaderVersionEXT
  enum class EValidationCacheHeaderVersion : std::underlying_type_t<VkValidationCacheHeaderVersionEXT> {
    E_ONE_EXT = VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT,
  };

  // VkShadingRatePaletteEntryNV
  enum class EShadingRatePaletteEntry : std::underlying_type_t<VkShadingRatePaletteEntryNV> {
    E_NO_INVOCATIONS_NV = VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV,
    E_16_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV,
    E_8_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV,
    E_4_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV,
    E_2_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV,
    E_1_INVOCATION_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV,
    E_1_INVOCATION_PER_2X1_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV,
    E_1_INVOCATION_PER_1X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV,
    E_1_INVOCATION_PER_2X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV,
    E_1_INVOCATION_PER_4X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV,
    E_1_INVOCATION_PER_2X4_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV,
    E_1_INVOCATION_PER_4X4_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV,
  };

  // VkCoarseSampleOrderTypeNV
  enum class ECoarseSampleOrderType : std::underlying_type_t<VkCoarseSampleOrderTypeNV> {
    E_DEFAULT_NV = VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV,
    E_CUSTOM_NV = VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV,
    E_PIXEL_MAJOR_NV = VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV,
    E_SAMPLE_MAJOR_NV = VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV,
  };

  // VkRayTracingShaderGroupTypeKHR
  enum class ERayTracingShaderGroupType : std::underlying_type_t<VkRayTracingShaderGroupTypeKHR> {
    E_GENERAL_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR,
    E_TRIANGLES_HIT_GROUP_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR,
    E_PROCEDURAL_HIT_GROUP_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR,
    E_GENERAL_NV = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV,
    E_TRIANGLES_HIT_GROUP_NV = VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV,
    E_PROCEDURAL_HIT_GROUP_NV = VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV,
  };

  // VkGeometryTypeKHR
  enum class EGeometryType : std::underlying_type_t<VkGeometryTypeKHR> {
    E_TRIANGLES_KHR = VK_GEOMETRY_TYPE_TRIANGLES_KHR,
    E_AABBS_KHR = VK_GEOMETRY_TYPE_AABBS_KHR,
    E_INSTANCES_KHR = VK_GEOMETRY_TYPE_INSTANCES_KHR,
    E_TRIANGLES_NV = VK_GEOMETRY_TYPE_TRIANGLES_NV,
    E_AABBS_NV = VK_GEOMETRY_TYPE_AABBS_NV,
  };

  // VkAccelerationStructureTypeKHR
  enum class EAccelerationStructureType : std::underlying_type_t<VkAccelerationStructureTypeKHR> {
    E_TOP_LEVEL_KHR = VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR,
    E_BOTTOM_LEVEL_KHR = VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR,
    E_GENERIC_KHR = VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR,
    E_TOP_LEVEL_NV = VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV,
    E_BOTTOM_LEVEL_NV = VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV,
  };

  // VkCopyAccelerationStructureModeKHR
  enum class ECopyAccelerationStructureMode : std::underlying_type_t<VkCopyAccelerationStructureModeKHR> {
    E_CLONE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR,
    E_COMPACT_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR,
    E_SERIALIZE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR,
    E_DESERIALIZE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR,
    E_CLONE_NV = VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV,
    E_COMPACT_NV = VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV,
  };

  // VkAccelerationStructureMemoryRequirementsTypeNV
  enum class EAccelerationStructureMemoryRequirementsType : std::underlying_type_t<VkAccelerationStructureMemoryRequirementsTypeNV> {
    E_OBJECT_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV,
    E_BUILD_SCRATCH_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV,
    E_UPDATE_SCRATCH_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV,
  };

  // VkGeometryFlagBitsKHR
  enum class EGeometryFlag : std::underlying_type_t<VkGeometryFlagBitsKHR> {
    E_OPAQUE_KHR = VK_GEOMETRY_OPAQUE_BIT_KHR,
    E_NO_DUPLICATE_ANY_HIT_INVOCATION_KHR = VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR,
    E_OPAQUE_NV = VK_GEOMETRY_OPAQUE_BIT_NV,
    E_NO_DUPLICATE_ANY_HIT_INVOCATION_NV = VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV,
  };

  // VkGeometryInstanceFlagBitsKHR
  enum class EGeometryInstanceFlag : std::underlying_type_t<VkGeometryInstanceFlagBitsKHR> {
    E_TRIANGLE_FACING_CULL_DISABLE_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR,
    E_TRIANGLE_FLIP_FACING_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR,
    E_FORCE_OPAQUE_KHR = VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR,
    E_FORCE_NO_OPAQUE_KHR = VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR,
    E_FORCE_OPACITY_MICROMAP_2_STATE_EXT = VK_GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT,
    E_DISABLE_OPACITY_MICROMAPS_EXT = VK_GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT,
    E_TRIANGLE_FRONT_COUNTERCLOCKWISE_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR,
    E_TRIANGLE_CULL_DISABLE_NV = VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV,
    E_TRIANGLE_FRONT_COUNTERCLOCKWISE_NV = VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV,
    E_FORCE_OPAQUE_NV = VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV,
    E_FORCE_NO_OPAQUE_NV = VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV,
  };

  // VkBuildAccelerationStructureFlagBitsKHR
  enum class EBuildAccelerationStructureFlag : std::underlying_type_t<VkBuildAccelerationStructureFlagBitsKHR> {
    E_ALLOW_UPDATE_KHR = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR,
    E_ALLOW_COMPACTION_KHR = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR,
    E_PREFER_FAST_TRACE_KHR = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR,
    E_PREFER_FAST_BUILD_KHR = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR,
    E_LOW_MEMORY_KHR = VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR,
    E_MOTION_NV = VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV,
    E_ALLOW_OPACITY_MICROMAP_UPDATE_EXT = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_UPDATE_EXT,
    E_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DISABLE_OPACITY_MICROMAPS_EXT,
    E_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT,
    E_ALLOW_DATA_ACCESS_KHR = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_DATA_ACCESS_KHR,
    E_ALLOW_UPDATE_NV = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV,
    E_ALLOW_COMPACTION_NV = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV,
    E_PREFER_FAST_TRACE_NV = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV,
    E_PREFER_FAST_BUILD_NV = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV,
    E_LOW_MEMORY_NV = VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV,
  };

  // VkMemoryOverallocationBehaviorAMD
  enum class EMemoryOverallocationBehavior : std::underlying_type_t<VkMemoryOverallocationBehaviorAMD> {
    E_DEFAULT_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD,
    E_ALLOWED_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD,
    E_DISALLOWED_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD,
  };

  // VkPerformanceConfigurationTypeINTEL
  enum class EPerformanceConfigurationType : std::underlying_type_t<VkPerformanceConfigurationTypeINTEL> {
    E_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL = VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL,
  };

  // VkQueryPoolSamplingModeINTEL
  enum class EQueryPoolSamplingMode : std::underlying_type_t<VkQueryPoolSamplingModeINTEL> {
    E_MANUAL_INTEL = VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL,
  };

  // VkPerformanceOverrideTypeINTEL
  enum class EPerformanceOverrideType : std::underlying_type_t<VkPerformanceOverrideTypeINTEL> {
    E_NULL_HARDWARE_INTEL = VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL,
    E_FLUSH_GPU_CACHES_INTEL = VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL,
  };

  // VkPerformanceParameterTypeINTEL
  enum class EPerformanceParameterType : std::underlying_type_t<VkPerformanceParameterTypeINTEL> {
    E_HW_COUNTERS_SUPPORTED_INTEL = VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL,
    E_STREAM_MARKER_VALIDS_INTEL = VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL,
  };

  // VkPerformanceValueTypeINTEL
  enum class EPerformanceValueType : std::underlying_type_t<VkPerformanceValueTypeINTEL> {
    E_UINT32_INTEL = VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL,
    E_UINT64_INTEL = VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL,
    E_FLOAT_INTEL = VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL,
    E_BOOL_INTEL = VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL,
    E_STRING_INTEL = VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL,
  };

  // VkValidationFeatureEnableEXT
  enum class EValidationFeatureEnable : std::underlying_type_t<VkValidationFeatureEnableEXT> {
    E_GPU_ASSISTED_EXT = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT,
    E_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT,
    E_BEST_PRACTICES_EXT = VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT,
    E_DEBUG_PRINTF_EXT = VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT,
    E_SYNCHRONIZATION_VALIDATION_EXT = VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT,
  };

  // VkValidationFeatureDisableEXT
  enum class EValidationFeatureDisable : std::underlying_type_t<VkValidationFeatureDisableEXT> {
    E_ALL_EXT = VK_VALIDATION_FEATURE_DISABLE_ALL_EXT,
    E_SHADERS_EXT = VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT,
    E_THREAD_SAFETY_EXT = VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT,
    E_API_PARAMETERS_EXT = VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT,
    E_OBJECT_LIFETIMES_EXT = VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT,
    E_CORE_CHECKS_EXT = VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT,
    E_UNIQUE_HANDLES_EXT = VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT,
    E_SHADER_VALIDATION_CACHE_EXT = VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT,
  };

  // VkCoverageReductionModeNV
  enum class ECoverageReductionMode : std::underlying_type_t<VkCoverageReductionModeNV> {
    E_MERGE_NV = VK_COVERAGE_REDUCTION_MODE_MERGE_NV,
    E_TRUNCATE_NV = VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV,
  };

  // VkProvokingVertexModeEXT
  enum class EProvokingVertexMode : std::underlying_type_t<VkProvokingVertexModeEXT> {
    E_FIRST_VERTEX_EXT = VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT,
    E_LAST_VERTEX_EXT = VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT,
  };

  // VkLineRasterizationModeEXT
  enum class ELineRasterizationMode : std::underlying_type_t<VkLineRasterizationModeEXT> {
    E_DEFAULT_EXT = VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT,
    E_RECTANGULAR_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT,
    E_BRESENHAM_EXT = VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT,
    E_RECTANGULAR_SMOOTH_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT,
  };

  // VkHostImageCopyFlagBitsEXT
  enum class EHostImageCopyFlag : std::underlying_type_t<VkHostImageCopyFlagBitsEXT> {
    E_MEMCPY_EXT = VK_HOST_IMAGE_COPY_MEMCPY_EXT,
  };

  // VkPresentScalingFlagBitsEXT
  enum class EPresentScalingFlag : std::underlying_type_t<VkPresentScalingFlagBitsEXT> {
    E_ONE_TO_ONE_EXT = VK_PRESENT_SCALING_ONE_TO_ONE_BIT_EXT,
    E_ASPECT_RATIO_STRETCH_EXT = VK_PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT,
    E_STRETCH_EXT = VK_PRESENT_SCALING_STRETCH_BIT_EXT,
  };

  // VkPresentGravityFlagBitsEXT
  enum class EPresentGravityFlag : std::underlying_type_t<VkPresentGravityFlagBitsEXT> {
    E_MIN_EXT = VK_PRESENT_GRAVITY_MIN_BIT_EXT,
    E_MAX_EXT = VK_PRESENT_GRAVITY_MAX_BIT_EXT,
    E_CENTERED_EXT = VK_PRESENT_GRAVITY_CENTERED_BIT_EXT,
  };

  // VkIndirectCommandsTokenTypeNV
  enum class EIndirectCommandsTokenType : std::underlying_type_t<VkIndirectCommandsTokenTypeNV> {
    E_SHADER_GROUP_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV,
    E_STATE_FLAGS_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV,
    E_INDEX_BUFFER_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV,
    E_VERTEX_BUFFER_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV,
    E_PUSH_CONSTANT_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV,
    E_DRAW_INDEXED_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV,
    E_DRAW_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV,
    E_DRAW_TASKS_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV,
    E_DRAW_MESH_TASKS_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV,
    E_PIPELINE_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV,
    E_DISPATCH_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV,
  };

  // VkIndirectStateFlagBitsNV
  enum class EIndirectStateFlag : std::underlying_type_t<VkIndirectStateFlagBitsNV> {
    E_FLAG_FRONTFACE_NV = VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV,
  };

  // VkIndirectCommandsLayoutUsageFlagBitsNV
  enum class EIndirectCommandsLayoutUsageFlag : std::underlying_type_t<VkIndirectCommandsLayoutUsageFlagBitsNV> {
    E_EXPLICIT_PREPROCESS_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV,
    E_INDEXED_SEQUENCES_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV,
    E_UNORDERED_SEQUENCES_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV,
  };

  // VkDepthBiasRepresentationEXT
  enum class EDepthBiasRepresentation : std::underlying_type_t<VkDepthBiasRepresentationEXT> {
    E_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT = VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT,
    E_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT = VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT,
    E_FLOAT_EXT = VK_DEPTH_BIAS_REPRESENTATION_FLOAT_EXT,
  };

  // VkDeviceMemoryReportEventTypeEXT
  enum class EDeviceMemoryReportEventType : std::underlying_type_t<VkDeviceMemoryReportEventTypeEXT> {
    E_ALLOCATE_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT,
    E_FREE_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT,
    E_IMPORT_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT,
    E_UNIMPORT_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT,
    E_ALLOCATION_FAILED_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT,
  };

  // VkDeviceDiagnosticsConfigFlagBitsNV
  enum class EDeviceDiagnosticsConfigFlag : std::underlying_type_t<VkDeviceDiagnosticsConfigFlagBitsNV> {
    E_ENABLE_SHADER_DEBUG_INFO_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV,
    E_ENABLE_RESOURCE_TRACKING_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV,
    E_ENABLE_AUTOMATIC_CHECKPOINTS_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV,
    E_ENABLE_SHADER_ERROR_REPORTING_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV,
  };

  // VkGraphicsPipelineLibraryFlagBitsEXT
  enum class EGraphicsPipelineLibraryFlag : std::underlying_type_t<VkGraphicsPipelineLibraryFlagBitsEXT> {
    E_VERTEX_INPUT_INTERFACE_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT,
    E_PRE_RASTERIZATION_SHADERS_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT,
    E_FRAGMENT_SHADER_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT,
    E_FRAGMENT_OUTPUT_INTERFACE_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT,
  };

  // VkFragmentShadingRateTypeNV
  enum class EFragmentShadingRateType : std::underlying_type_t<VkFragmentShadingRateTypeNV> {
    E_FRAGMENT_SIZE_NV = VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV,
    E_ENUMS_NV = VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV,
  };

  // VkFragmentShadingRateNV
  enum class EFragmentShadingRate : std::underlying_type_t<VkFragmentShadingRateNV> {
    E_1_INVOCATION_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV,
    E_1_INVOCATION_PER_1X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV,
    E_1_INVOCATION_PER_2X1_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV,
    E_1_INVOCATION_PER_2X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV,
    E_1_INVOCATION_PER_2X4_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV,
    E_1_INVOCATION_PER_4X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV,
    E_1_INVOCATION_PER_4X4_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV,
    E_2_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV,
    E_4_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV,
    E_8_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV,
    E_16_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV,
    E_NO_INVOCATIONS_NV = VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV,
  };

  // VkAccelerationStructureMotionInstanceTypeNV
  enum class EAccelerationStructureMotionInstanceType : std::underlying_type_t<VkAccelerationStructureMotionInstanceTypeNV> {
    E_STATIC_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV,
    E_MATRIX_MOTION_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV,
    E_SRT_MOTION_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV,
  };

  // VkImageCompressionFlagBitsEXT
  enum class EImageCompressionFlag : std::underlying_type_t<VkImageCompressionFlagBitsEXT> {
    E_DEFAULT_EXT = VK_IMAGE_COMPRESSION_DEFAULT_EXT,
    E_FIXED_RATE_DEFAULT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT,
    E_FIXED_RATE_EXPLICIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT,
    E_DISABLED_EXT = VK_IMAGE_COMPRESSION_DISABLED_EXT,
  };

  // VkImageCompressionFixedRateFlagBitsEXT
  enum class EImageCompressionFixedRateFlag : std::underlying_type_t<VkImageCompressionFixedRateFlagBitsEXT> {
    E_NONE_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT,
    E_1BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT,
    E_2BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT,
    E_3BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT,
    E_4BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT,
    E_5BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT,
    E_6BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT,
    E_7BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT,
    E_8BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT,
    E_9BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT,
    E_10BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT,
    E_11BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT,
    E_12BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT,
    E_13BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT,
    E_14BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT,
    E_15BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT,
    E_16BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT,
    E_17BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT,
    E_18BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT,
    E_19BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT,
    E_20BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT,
    E_21BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT,
    E_22BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT,
    E_23BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT,
    E_24BPC_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT,
  };

  // VkDeviceFaultAddressTypeEXT
  enum class EDeviceFaultAddressType : std::underlying_type_t<VkDeviceFaultAddressTypeEXT> {
    E_NONE_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_NONE_EXT,
    E_READ_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_READ_INVALID_EXT,
    E_WRITE_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_WRITE_INVALID_EXT,
    E_EXECUTE_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_EXECUTE_INVALID_EXT,
    E_INSTRUCTION_POINTER_UNKNOWN_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_UNKNOWN_EXT,
    E_INSTRUCTION_POINTER_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_INVALID_EXT,
    E_INSTRUCTION_POINTER_FAULT_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_FAULT_EXT,
  };

  // VkDeviceFaultVendorBinaryHeaderVersionEXT
  enum class EDeviceFaultVendorBinaryHeaderVersion : std::underlying_type_t<VkDeviceFaultVendorBinaryHeaderVersionEXT> {
    E_ONE_EXT = VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_ONE_EXT,
  };

  // VkDeviceAddressBindingTypeEXT
  enum class EDeviceAddressBindingType : std::underlying_type_t<VkDeviceAddressBindingTypeEXT> {
    E_BIND_EXT = VK_DEVICE_ADDRESS_BINDING_TYPE_BIND_EXT,
    E_UNBIND_EXT = VK_DEVICE_ADDRESS_BINDING_TYPE_UNBIND_EXT,
  };

  // VkDeviceAddressBindingFlagBitsEXT
  enum class EDeviceAddressBindingFlag : std::underlying_type_t<VkDeviceAddressBindingFlagBitsEXT> {
    E_INTERNAL_OBJECT_EXT = VK_DEVICE_ADDRESS_BINDING_INTERNAL_OBJECT_BIT_EXT,
  };

  // VkFrameBoundaryFlagBitsEXT
  enum class EFrameBoundaryFlag : std::underlying_type_t<VkFrameBoundaryFlagBitsEXT> {
    E_FRAME_END_EXT = VK_FRAME_BOUNDARY_FRAME_END_BIT_EXT,
  };

  // VkMicromapTypeEXT
  enum class EMicromapType : std::underlying_type_t<VkMicromapTypeEXT> {
    E_OPACITY_MICROMAP_EXT = VK_MICROMAP_TYPE_OPACITY_MICROMAP_EXT,
  };

  // VkBuildMicromapModeEXT
  enum class EBuildMicromapMode : std::underlying_type_t<VkBuildMicromapModeEXT> {
    E_BUILD_EXT = VK_BUILD_MICROMAP_MODE_BUILD_EXT,
  };

  // VkCopyMicromapModeEXT
  enum class ECopyMicromapMode : std::underlying_type_t<VkCopyMicromapModeEXT> {
    E_CLONE_EXT = VK_COPY_MICROMAP_MODE_CLONE_EXT,
    E_SERIALIZE_EXT = VK_COPY_MICROMAP_MODE_SERIALIZE_EXT,
    E_DESERIALIZE_EXT = VK_COPY_MICROMAP_MODE_DESERIALIZE_EXT,
    E_COMPACT_EXT = VK_COPY_MICROMAP_MODE_COMPACT_EXT,
  };

  // VkOpacityMicromapFormatEXT
  enum class EOpacityMicromapFormat : std::underlying_type_t<VkOpacityMicromapFormatEXT> {
    E_2_STATE_EXT = VK_OPACITY_MICROMAP_FORMAT_2_STATE_EXT,
    E_4_STATE_EXT = VK_OPACITY_MICROMAP_FORMAT_4_STATE_EXT,
  };

  // VkOpacityMicromapSpecialIndexEXT
  enum class EOpacityMicromapSpecialIndex : std::underlying_type_t<VkOpacityMicromapSpecialIndexEXT> {
    E_FULLY_TRANSPARENT_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_TRANSPARENT_EXT,
    E_FULLY_OPAQUE_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_OPAQUE_EXT,
    E_FULLY_UNKNOWN_TRANSPARENT_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_TRANSPARENT_EXT,
    E_FULLY_UNKNOWN_OPAQUE_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_OPAQUE_EXT,
  };

  // VkAccelerationStructureCompatibilityKHR
  enum class EAccelerationStructureCompatibility : std::underlying_type_t<VkAccelerationStructureCompatibilityKHR> {
    E_COMPATIBLE_KHR = VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR,
    E_INCOMPATIBLE_KHR = VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR,
  };

  // VkAccelerationStructureBuildTypeKHR
  enum class EAccelerationStructureBuildType : std::underlying_type_t<VkAccelerationStructureBuildTypeKHR> {
    E_HOST_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR,
    E_DEVICE_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR,
    E_HOST_OR_DEVICE_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR,
  };

  // VkBuildMicromapFlagBitsEXT
  enum class EBuildMicromapFlag : std::underlying_type_t<VkBuildMicromapFlagBitsEXT> {
    E_PREFER_FAST_TRACE_EXT = VK_BUILD_MICROMAP_PREFER_FAST_TRACE_BIT_EXT,
    E_PREFER_FAST_BUILD_EXT = VK_BUILD_MICROMAP_PREFER_FAST_BUILD_BIT_EXT,
    E_ALLOW_COMPACTION_EXT = VK_BUILD_MICROMAP_ALLOW_COMPACTION_BIT_EXT,
  };

  // VkMicromapCreateFlagBitsEXT
  enum class EMicromapCreateFlag : std::underlying_type_t<VkMicromapCreateFlagBitsEXT> {
    E_DEVICE_ADDRESS_CAPTURE_REPLAY_EXT = VK_MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT,
  };

  // VkPhysicalDeviceSchedulingControlsFlagBitsARM
  enum class EPhysicalDeviceSchedulingControlsFlag : uint64 {
    E_SHADER_CORE_COUNT_ARM = VK_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_SHADER_CORE_COUNT_ARM,
  };

  // VkMemoryDecompressionMethodFlagBitsNV
  enum class EMemoryDecompressionMethodFlag : uint64 {
    E_GDEFLATE_1_0_NV = VK_MEMORY_DECOMPRESSION_METHOD_GDEFLATE_1_0_BIT_NV,
  };

  // VkSubpassMergeStatusEXT
  enum class ESubpassMergeStatus : std::underlying_type_t<VkSubpassMergeStatusEXT> {
    E_MERGED_EXT = VK_SUBPASS_MERGE_STATUS_MERGED_EXT,
    E_DISALLOWED_EXT = VK_SUBPASS_MERGE_STATUS_DISALLOWED_EXT,
    E_NOT_MERGED_SIDE_EFFECTS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SIDE_EFFECTS_EXT,
    E_NOT_MERGED_SAMPLES_MISMATCH_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SAMPLES_MISMATCH_EXT,
    E_NOT_MERGED_VIEWS_MISMATCH_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_VIEWS_MISMATCH_EXT,
    E_NOT_MERGED_ALIASING_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_ALIASING_EXT,
    E_NOT_MERGED_DEPENDENCIES_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPENDENCIES_EXT,
    E_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT,
    E_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT,
    E_NOT_MERGED_INSUFFICIENT_STORAGE_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INSUFFICIENT_STORAGE_EXT,
    E_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT,
    E_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT,
    E_NOT_MERGED_SINGLE_SUBPASS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SINGLE_SUBPASS_EXT,
    E_NOT_MERGED_UNSPECIFIED_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_UNSPECIFIED_EXT,
  };

  // VkDirectDriverLoadingModeLUNARG
  enum class EDirectDriverLoadingMode : std::underlying_type_t<VkDirectDriverLoadingModeLUNARG> {
    E_EXCLUSIVE_LUNARG = VK_DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG,
    E_INCLUSIVE_LUNARG = VK_DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG,
  };

  // VkOpticalFlowPerformanceLevelNV
  enum class EOpticalFlowPerformanceLevel : std::underlying_type_t<VkOpticalFlowPerformanceLevelNV> {
    E_UNKNOWN_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_UNKNOWN_NV,
    E_SLOW_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_SLOW_NV,
    E_MEDIUM_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MEDIUM_NV,
    E_FAST_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_FAST_NV,
  };

  // VkOpticalFlowSessionBindingPointNV
  enum class EOpticalFlowSessionBindingPoint : std::underlying_type_t<VkOpticalFlowSessionBindingPointNV> {
    E_UNKNOWN_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_UNKNOWN_NV,
    E_INPUT_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_INPUT_NV,
    E_REFERENCE_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_REFERENCE_NV,
    E_HINT_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_HINT_NV,
    E_FLOW_VECTOR_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_FLOW_VECTOR_NV,
    E_BACKWARD_FLOW_VECTOR_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_FLOW_VECTOR_NV,
    E_COST_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_COST_NV,
    E_BACKWARD_COST_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_COST_NV,
    E_GLOBAL_FLOW_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_GLOBAL_FLOW_NV,
  };

  // VkOpticalFlowGridSizeFlagBitsNV
  enum class EOpticalFlowGridSizeFlag : std::underlying_type_t<VkOpticalFlowGridSizeFlagBitsNV> {
    E_UNKNOWN_NV = VK_OPTICAL_FLOW_GRID_SIZE_UNKNOWN_NV,
    E_1X1_NV = VK_OPTICAL_FLOW_GRID_SIZE_1X1_BIT_NV,
    E_2X2_NV = VK_OPTICAL_FLOW_GRID_SIZE_2X2_BIT_NV,
    E_4X4_NV = VK_OPTICAL_FLOW_GRID_SIZE_4X4_BIT_NV,
    E_8X8_NV = VK_OPTICAL_FLOW_GRID_SIZE_8X8_BIT_NV,
  };

  // VkOpticalFlowUsageFlagBitsNV
  enum class EOpticalFlowUsageFlag : std::underlying_type_t<VkOpticalFlowUsageFlagBitsNV> {
    E_UNKNOWN_NV = VK_OPTICAL_FLOW_USAGE_UNKNOWN_NV,
    E_INPUT_NV = VK_OPTICAL_FLOW_USAGE_INPUT_BIT_NV,
    E_OUTPUT_NV = VK_OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV,
    E_HINT_NV = VK_OPTICAL_FLOW_USAGE_HINT_BIT_NV,
    E_COST_NV = VK_OPTICAL_FLOW_USAGE_COST_BIT_NV,
    E_GLOBAL_FLOW_NV = VK_OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV,
  };

  // VkOpticalFlowSessionCreateFlagBitsNV
  enum class EOpticalFlowSessionCreateFlag : std::underlying_type_t<VkOpticalFlowSessionCreateFlagBitsNV> {
    E_ENABLE_HINT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_HINT_BIT_NV,
    E_ENABLE_COST_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_COST_BIT_NV,
    E_ENABLE_GLOBAL_FLOW_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_GLOBAL_FLOW_BIT_NV,
    E_ALLOW_REGIONS_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ALLOW_REGIONS_BIT_NV,
    E_BOTH_DIRECTIONS_NV = VK_OPTICAL_FLOW_SESSION_CREATE_BOTH_DIRECTIONS_BIT_NV,
  };

  // VkOpticalFlowExecuteFlagBitsNV
  enum class EOpticalFlowExecuteFlag : std::underlying_type_t<VkOpticalFlowExecuteFlagBitsNV> {
    E_DISABLE_TEMPORAL_HINTS_NV = VK_OPTICAL_FLOW_EXECUTE_DISABLE_TEMPORAL_HINTS_BIT_NV,
  };

  // VkShaderCodeTypeEXT
  enum class EShaderCodeType : std::underlying_type_t<VkShaderCodeTypeEXT> {
    E_BINARY_EXT = VK_SHADER_CODE_TYPE_BINARY_EXT,
    E_SPIRV_EXT = VK_SHADER_CODE_TYPE_SPIRV_EXT,
  };

  // VkShaderCreateFlagBitsEXT
  enum class EShaderCreateFlag : std::underlying_type_t<VkShaderCreateFlagBitsEXT> {
    E_LINK_STAGE_EXT = VK_SHADER_CREATE_LINK_STAGE_BIT_EXT,
    E_ALLOW_VARYING_SUBGROUP_SIZE_EXT = VK_SHADER_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT,
    E_REQUIRE_FULL_SUBGROUPS_EXT = VK_SHADER_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT,
    E_NO_TASK_SHADER_EXT = VK_SHADER_CREATE_NO_TASK_SHADER_BIT_EXT,
    E_DISPATCH_BASE_EXT = VK_SHADER_CREATE_DISPATCH_BASE_BIT_EXT,
    E_FRAGMENT_SHADING_RATE_ATTACHMENT_EXT = VK_SHADER_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_EXT,
    E_FRAGMENT_DENSITY_MAP_ATTACHMENT_EXT = VK_SHADER_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,
  };

  // VkRayTracingInvocationReorderModeNV
  enum class ERayTracingInvocationReorderMode : std::underlying_type_t<VkRayTracingInvocationReorderModeNV> {
    E_NONE_NV = VK_RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV,
    E_REORDER_NV = VK_RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV,
  };

  // VkLayerSettingTypeEXT
  enum class ELayerSettingType : std::underlying_type_t<VkLayerSettingTypeEXT> {
    E_BOOL32_EXT = VK_LAYER_SETTING_TYPE_BOOL32_EXT,
    E_INT32_EXT = VK_LAYER_SETTING_TYPE_INT32_EXT,
    E_INT64_EXT = VK_LAYER_SETTING_TYPE_INT64_EXT,
    E_UINT32_EXT = VK_LAYER_SETTING_TYPE_UINT32_EXT,
    E_UINT64_EXT = VK_LAYER_SETTING_TYPE_UINT64_EXT,
    E_FLOAT32_EXT = VK_LAYER_SETTING_TYPE_FLOAT32_EXT,
    E_FLOAT64_EXT = VK_LAYER_SETTING_TYPE_FLOAT64_EXT,
    E_STRING_EXT = VK_LAYER_SETTING_TYPE_STRING_EXT,
  };

  // VkLatencyMarkerNV
  enum class ELatencyMarker : std::underlying_type_t<VkLatencyMarkerNV> {
    E_SIMULATION_START_NV = VK_LATENCY_MARKER_SIMULATION_START_NV,
    E_SIMULATION_END_NV = VK_LATENCY_MARKER_SIMULATION_END_NV,
    E_RENDERSUBMIT_START_NV = VK_LATENCY_MARKER_RENDERSUBMIT_START_NV,
    E_RENDERSUBMIT_END_NV = VK_LATENCY_MARKER_RENDERSUBMIT_END_NV,
    E_PRESENT_START_NV = VK_LATENCY_MARKER_PRESENT_START_NV,
    E_PRESENT_END_NV = VK_LATENCY_MARKER_PRESENT_END_NV,
    E_INPUT_SAMPLE_NV = VK_LATENCY_MARKER_INPUT_SAMPLE_NV,
    E_TRIGGER_FLASH_NV = VK_LATENCY_MARKER_TRIGGER_FLASH_NV,
    E_OUT_OF_BAND_RENDERSUBMIT_START_NV = VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV,
    E_OUT_OF_BAND_RENDERSUBMIT_END_NV = VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV,
    E_OUT_OF_BAND_PRESENT_START_NV = VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV,
    E_OUT_OF_BAND_PRESENT_END_NV = VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV,
  };

  // VkOutOfBandQueueTypeNV
  enum class EOutOfBandQueueType : std::underlying_type_t<VkOutOfBandQueueTypeNV> {
    E_RENDER_NV = VK_OUT_OF_BAND_QUEUE_TYPE_RENDER_NV,
    E_PRESENT_NV = VK_OUT_OF_BAND_QUEUE_TYPE_PRESENT_NV,
  };

  // VkBlockMatchWindowCompareModeQCOM
  enum class EBlockMatchWindowCompareMode : std::underlying_type_t<VkBlockMatchWindowCompareModeQCOM> {
    E_MIN_QCOM = VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MIN_QCOM,
    E_MAX_QCOM = VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_QCOM,
  };

  // VkCubicFilterWeightsQCOM
  enum class ECubicFilterWeights : std::underlying_type_t<VkCubicFilterWeightsQCOM> {
    E_CATMULL_ROM_QCOM = VK_CUBIC_FILTER_WEIGHTS_CATMULL_ROM_QCOM,
    E_ZERO_TANGENT_CARDINAL_QCOM = VK_CUBIC_FILTER_WEIGHTS_ZERO_TANGENT_CARDINAL_QCOM,
    E_B_SPLINE_QCOM = VK_CUBIC_FILTER_WEIGHTS_B_SPLINE_QCOM,
    E_MITCHELL_NETRAVALI_QCOM = VK_CUBIC_FILTER_WEIGHTS_MITCHELL_NETRAVALI_QCOM,
  };

  // VkLayeredDriverUnderlyingApiMSFT
  enum class ELayeredDriverUnderlyingApi : std::underlying_type_t<VkLayeredDriverUnderlyingApiMSFT> {
    E_NONE_MSFT = VK_LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT,
    E_D3D12_MSFT = VK_LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT,
  };

  // VkBuildAccelerationStructureModeKHR
  enum class EBuildAccelerationStructureMode : std::underlying_type_t<VkBuildAccelerationStructureModeKHR> {
    E_BUILD_KHR = VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR,
    E_UPDATE_KHR = VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR,
  };

  // VkAccelerationStructureCreateFlagBitsKHR
  enum class EAccelerationStructureCreateFlag : std::underlying_type_t<VkAccelerationStructureCreateFlagBitsKHR> {
    E_DEVICE_ADDRESS_CAPTURE_REPLAY_KHR = VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,
    E_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_EXT = VK_ACCELERATION_STRUCTURE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT,
    E_MOTION_NV = VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV,
  };

  // VkShaderGroupShaderKHR
  enum class EShaderGroupShader : std::underlying_type_t<VkShaderGroupShaderKHR> {
    E_GENERAL_KHR = VK_SHADER_GROUP_SHADER_GENERAL_KHR,
    E_CLOSEST_HIT_KHR = VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR,
    E_ANY_HIT_KHR = VK_SHADER_GROUP_SHADER_ANY_HIT_KHR,
    E_INTERSECTION_KHR = VK_SHADER_GROUP_SHADER_INTERSECTION_KHR,
  };

  namespace Details {
    template <typename T>
    struct SEnumCounterpart;

    #define RETINA_ENUM_COUNTERPART_SPECIALIZATION(E, T)           \
      template <> struct SEnumCounterpart<E> { using Type = T; };  \
      template <> struct SEnumCounterpart<T> { using Type = E; }

    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkResult, EResult);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkStructureType, EStructureType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineCacheHeaderVersion, EPipelineCacheHeaderVersion);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageLayout, EImageLayout);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkObjectType, EObjectType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVendorId, EVendorId);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSystemAllocationScope, ESystemAllocationScope);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkInternalAllocationType, EInternalAllocationType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFormat, EResourceFormat);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageTiling, EImageTiling);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageType, EImageType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPhysicalDeviceType, EPhysicalDeviceType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryType, EQueryType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSharingMode, ESharingMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkComponentSwizzle, EComponentSwizzle);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageViewType, EImageViewType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBlendFactor, EBlendFactor);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBlendOp, EBlendOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCompareOp, ECompareOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDynamicState, EDynamicState);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFrontFace, EFrontFace);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVertexInputRate, EVertexInputRate);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPrimitiveTopology, EPrimitiveTopology);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPolygonMode, EPolygonMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkStencilOp, EStencilOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkLogicOp, ELogicOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBorderColor, EBorderColor);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFilter, EFilter);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerAddressMode, ESamplerAddressMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerMipmapMode, ESamplerMipmapMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDescriptorType, EDescriptorType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAttachmentLoadOp, EAttachmentLoadOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAttachmentStoreOp, EAttachmentStoreOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineBindPoint, EPipelineBindPoint);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCommandBufferLevel, ECommandBufferLevel);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkIndexType, EIndexType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSubpassContents, ESubpassContents);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageAspectFlagBits, EImageAspectFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageCreateFlagBits, EImageCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSampleCountFlagBits, ESampleCountFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageUsageFlagBits, EImageUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkInstanceCreateFlagBits, EInstanceCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMemoryHeapFlagBits, EMemoryHeapFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMemoryPropertyFlagBits, EMemoryPropertyFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueueFlagBits, EQueueFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceQueueCreateFlagBits, EDeviceQueueCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSparseMemoryBindFlagBits, ESparseMemoryBindFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSparseImageFormatFlagBits, ESparseImageFormatFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFenceCreateFlagBits, EFenceCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkEventCreateFlagBits, EEventCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryPipelineStatisticFlagBits, EQueryPipelineStatisticFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryResultFlagBits, EQueryResultFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBufferCreateFlagBits, EBufferCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageViewCreateFlagBits, EImageViewCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineCacheCreateFlagBits, EPipelineCacheCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkColorComponentFlagBits, EColorComponentFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineShaderStageCreateFlagBits, EPipelineShaderStageCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderStageFlagBits, EShaderStageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCullModeFlagBits, ECullModeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineDepthStencilStateCreateFlagBits, EPipelineDepthStencilStateCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineColorBlendStateCreateFlagBits, EPipelineColorBlendStateCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineLayoutCreateFlagBits, EPipelineLayoutCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerCreateFlagBits, ESamplerCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDescriptorPoolCreateFlagBits, EDescriptorPoolCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDescriptorSetLayoutCreateFlagBits, EDescriptorLayoutCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAttachmentDescriptionFlagBits, EAttachmentDescriptionFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDependencyFlagBits, EDependencyFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFramebufferCreateFlagBits, EFramebufferCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkRenderPassCreateFlagBits, ERenderPassCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSubpassDescriptionFlagBits, ESubpassDescriptionFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCommandPoolCreateFlagBits, ECommandPoolCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCommandPoolResetFlagBits, ECommandPoolResetFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCommandBufferUsageFlagBits, ECommandBufferUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryControlFlagBits, EQueryControlFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCommandBufferResetFlagBits, ECommandBufferResetFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkStencilFaceFlagBits, EStencilFaceFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPointClippingBehavior, EPointClippingBehavior);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkTessellationDomainOrigin, ETessellationDomainOrigin);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerYcbcrModelConversion, ESamplerYcbcrModelConversion);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerYcbcrRange, ESamplerYcbcrRange);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkChromaLocation, EChromaLocation);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDescriptorUpdateTemplateType, EDescriptorUpdateTemplateType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSubgroupFeatureFlagBits, ESubgroupFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPeerMemoryFeatureFlagBits, EPeerMemoryFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMemoryAllocateFlagBits, EMemoryAllocateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalMemoryHandleTypeFlagBits, EExternalMemoryHandleTypeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalMemoryFeatureFlagBits, EExternalMemoryFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalFenceHandleTypeFlagBits, EExternalFenceHandleTypeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalFenceFeatureFlagBits, EExternalFenceFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFenceImportFlagBits, EFenceImportFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSemaphoreImportFlagBits, ESemaphoreImportFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalSemaphoreHandleTypeFlagBits, EExternalSemaphoreHandleTypeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkExternalSemaphoreFeatureFlagBits, EExternalSemaphoreFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDriverId, EDriverId);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderFloatControlsIndependence, EShaderFloatControlsIndependence);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSamplerReductionMode, ESamplerReductionMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSemaphoreType, ESemaphoreType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkResolveModeFlagBits, EResolveModeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDescriptorBindingFlagBits, EDescriptorBindingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSemaphoreWaitFlagBits, ESemaphoreWaitFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineCreationFeedbackFlagBits, EPipelineCreationFeedbackFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkToolPurposeFlagBits, EToolPurposeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSubmitFlagBits, ESubmitFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkRenderingFlagBits, ERenderingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFormatFeatureFlagBits, EFormatFeatureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPresentModeKHR, EPresentMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkColorSpaceKHR, EColorSpace);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSurfaceTransformFlagBitsKHR, ESurfaceTransformFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCompositeAlphaFlagBitsKHR, ECompositeAlphaFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSwapchainCreateFlagBitsKHR, ESwapchainCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceGroupPresentModeFlagBitsKHR, EDeviceGroupPresentModeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDisplayPlaneAlphaFlagBitsKHR, EDisplayPlaneAlphaFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryResultStatusKHR, EQueryResultStatus);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoCodecOperationFlagBitsKHR, EVideoCodecOperationFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoChromaSubsamplingFlagBitsKHR, EVideoChromaSubsamplingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoComponentBitDepthFlagBitsKHR, EVideoComponentBitDepthFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoCapabilityFlagBitsKHR, EVideoCapabilityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoSessionCreateFlagBitsKHR, EVideoSessionCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoCodingControlFlagBitsKHR, EVideoCodingControlFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoDecodeCapabilityFlagBitsKHR, EVideoDecodeCapabilityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoDecodeUsageFlagBitsKHR, EVideoDecodeUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH264CapabilityFlagBitsKHR, EVideoEncodeH264CapabilityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH264StdFlagBitsKHR, EVideoEncodeH264StdFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH264RateControlFlagBitsKHR, EVideoEncodeH264RateControlFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH265CapabilityFlagBitsKHR, EVideoEncodeH265CapabilityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH265StdFlagBitsKHR, EVideoEncodeH265StdFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH265CtbSizeFlagBitsKHR, EVideoEncodeH265CtbSizeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH265TransformBlockSizeFlagBitsKHR, EVideoEncodeH265TransformBlockSizeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeH265RateControlFlagBitsKHR, EVideoEncodeH265RateControlFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoDecodeH264PictureLayoutFlagBitsKHR, EVideoDecodeH264PictureLayoutFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceCounterUnitKHR, EPerformanceCounterUnit);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceCounterScopeKHR, EPerformanceCounterScope);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceCounterStorageKHR, EPerformanceCounterStorage);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceCounterDescriptionFlagBitsKHR, EPerformanceCounterDescriptionFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueueGlobalPriorityKHR, EQueueGlobalPriority);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFragmentShadingRateCombinerOpKHR, EFragmentShadingRateCombinerOperator);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineExecutableStatisticFormatKHR, EPipelineExecutableStatisticFormat);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeTuningModeKHR, EVideoEncodeTuningMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeCapabilityFlagBitsKHR, EVideoEncodeCapabilityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeRateControlModeFlagBitsKHR, EVideoEncodeRateControlModeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeFeedbackFlagBitsKHR, EVideoEncodeFeedbackFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeUsageFlagBitsKHR, EVideoEncodeUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkVideoEncodeContentFlagBitsKHR, EVideoEncodeContentFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineCreateFlagBits, EPipelineCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBufferUsageFlagBits, EBufferUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkComponentTypeKHR, EComponentType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkScopeKHR, EScope);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkTimeDomainKHR, ETimeDomain);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDebugReportObjectTypeEXT, EDebugReportObjectType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDebugReportFlagBitsEXT, EDebugReportFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkRasterizationOrderAMD, ERasterizationOrder);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderInfoTypeAMD, EShaderInfoType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkValidationCheckEXT, EValidationCheck);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineRobustnessBufferBehaviorEXT, EPipelineRobustnessBufferBehavior);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPipelineRobustnessImageBehaviorEXT, EPipelineRobustnessImageBehavior);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkConditionalRenderingFlagBitsEXT, EConditionalRenderingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSurfaceCounterFlagBitsEXT, ESurfaceCounterFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDisplayPowerStateEXT, EDisplayPowerState);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceEventTypeEXT, EDeviceEventType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDisplayEventTypeEXT, EDisplayEventType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkViewportCoordinateSwizzleNV, EViewportCoordinateSwizzle);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDiscardRectangleModeEXT, EDiscardRectangleMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkConservativeRasterizationModeEXT, EConservativeRasterizationMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDebugUtilsMessageSeverityFlagBitsEXT, EDebugUtilsMessageSeverityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDebugUtilsMessageTypeFlagBitsEXT, EDebugUtilsMessageTypeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBlendOverlapEXT, EBlendOverlap);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCoverageModulationModeNV, ECoverageModulationMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkValidationCacheHeaderVersionEXT, EValidationCacheHeaderVersion);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShadingRatePaletteEntryNV, EShadingRatePaletteEntry);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCoarseSampleOrderTypeNV, ECoarseSampleOrderType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkRayTracingShaderGroupTypeKHR, ERayTracingShaderGroupType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkGeometryTypeKHR, EGeometryType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureTypeKHR, EAccelerationStructureType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCopyAccelerationStructureModeKHR, ECopyAccelerationStructureMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureMemoryRequirementsTypeNV, EAccelerationStructureMemoryRequirementsType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkGeometryFlagBitsKHR, EGeometryFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkGeometryInstanceFlagBitsKHR, EGeometryInstanceFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBuildAccelerationStructureFlagBitsKHR, EBuildAccelerationStructureFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMemoryOverallocationBehaviorAMD, EMemoryOverallocationBehavior);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceConfigurationTypeINTEL, EPerformanceConfigurationType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkQueryPoolSamplingModeINTEL, EQueryPoolSamplingMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceOverrideTypeINTEL, EPerformanceOverrideType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceParameterTypeINTEL, EPerformanceParameterType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPerformanceValueTypeINTEL, EPerformanceValueType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkValidationFeatureEnableEXT, EValidationFeatureEnable);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkValidationFeatureDisableEXT, EValidationFeatureDisable);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCoverageReductionModeNV, ECoverageReductionMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkProvokingVertexModeEXT, EProvokingVertexMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkLineRasterizationModeEXT, ELineRasterizationMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkHostImageCopyFlagBitsEXT, EHostImageCopyFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPresentScalingFlagBitsEXT, EPresentScalingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkPresentGravityFlagBitsEXT, EPresentGravityFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkIndirectCommandsTokenTypeNV, EIndirectCommandsTokenType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkIndirectStateFlagBitsNV, EIndirectStateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkIndirectCommandsLayoutUsageFlagBitsNV, EIndirectCommandsLayoutUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDepthBiasRepresentationEXT, EDepthBiasRepresentation);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceMemoryReportEventTypeEXT, EDeviceMemoryReportEventType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceDiagnosticsConfigFlagBitsNV, EDeviceDiagnosticsConfigFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkGraphicsPipelineLibraryFlagBitsEXT, EGraphicsPipelineLibraryFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFragmentShadingRateTypeNV, EFragmentShadingRateType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFragmentShadingRateNV, EFragmentShadingRate);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureMotionInstanceTypeNV, EAccelerationStructureMotionInstanceType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageCompressionFlagBitsEXT, EImageCompressionFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkImageCompressionFixedRateFlagBitsEXT, EImageCompressionFixedRateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceFaultAddressTypeEXT, EDeviceFaultAddressType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceFaultVendorBinaryHeaderVersionEXT, EDeviceFaultVendorBinaryHeaderVersion);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceAddressBindingTypeEXT, EDeviceAddressBindingType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDeviceAddressBindingFlagBitsEXT, EDeviceAddressBindingFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkFrameBoundaryFlagBitsEXT, EFrameBoundaryFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMicromapTypeEXT, EMicromapType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBuildMicromapModeEXT, EBuildMicromapMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCopyMicromapModeEXT, ECopyMicromapMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpacityMicromapFormatEXT, EOpacityMicromapFormat);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpacityMicromapSpecialIndexEXT, EOpacityMicromapSpecialIndex);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureCompatibilityKHR, EAccelerationStructureCompatibility);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureBuildTypeKHR, EAccelerationStructureBuildType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBuildMicromapFlagBitsEXT, EBuildMicromapFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkMicromapCreateFlagBitsEXT, EMicromapCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkSubpassMergeStatusEXT, ESubpassMergeStatus);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkDirectDriverLoadingModeLUNARG, EDirectDriverLoadingMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowPerformanceLevelNV, EOpticalFlowPerformanceLevel);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowSessionBindingPointNV, EOpticalFlowSessionBindingPoint);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowGridSizeFlagBitsNV, EOpticalFlowGridSizeFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowUsageFlagBitsNV, EOpticalFlowUsageFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowSessionCreateFlagBitsNV, EOpticalFlowSessionCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOpticalFlowExecuteFlagBitsNV, EOpticalFlowExecuteFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderCodeTypeEXT, EShaderCodeType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderCreateFlagBitsEXT, EShaderCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkRayTracingInvocationReorderModeNV, ERayTracingInvocationReorderMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkLayerSettingTypeEXT, ELayerSettingType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkLatencyMarkerNV, ELatencyMarker);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkOutOfBandQueueTypeNV, EOutOfBandQueueType);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBlockMatchWindowCompareModeQCOM, EBlockMatchWindowCompareMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkCubicFilterWeightsQCOM, ECubicFilterWeights);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkLayeredDriverUnderlyingApiMSFT, ELayeredDriverUnderlyingApi);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkBuildAccelerationStructureModeKHR, EBuildAccelerationStructureMode);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkAccelerationStructureCreateFlagBitsKHR, EAccelerationStructureCreateFlag);
    RETINA_ENUM_COUNTERPART_SPECIALIZATION(VkShaderGroupShaderKHR, EShaderGroupShader);

    #undef RETINA_ENUM_COUNTERPART_SPECIALIZATION

    template <typename T>
    using EnumCounterpartType = typename SEnumCounterpart<T>::Type;
  }

  template <typename E>
  constexpr auto AsEnumCounterpart(E e) noexcept -> Details::EnumCounterpartType<E> {
    return static_cast<Details::EnumCounterpartType<E>>(e);
  }

  constexpr auto AsEnumCounterpart(EResourceAccessFlag e) noexcept -> VkAccessFlagBits2 {
    return static_cast<VkAccessFlagBits2>(e);
  }
  constexpr auto AsEnumCounterpart(EPipelineStageFlag e) noexcept -> VkPipelineStageFlagBits2 {
    return static_cast<VkPipelineStageFlagBits2>(e);
  }
  constexpr auto AsEnumCounterpart(EPhysicalDeviceSchedulingControlsFlag e) noexcept -> VkPhysicalDeviceSchedulingControlsFlagBitsARM {
    return static_cast<VkPhysicalDeviceSchedulingControlsFlagBitsARM>(e);
  }
  constexpr auto AsEnumCounterpart(EMemoryDecompressionMethodFlag e) noexcept -> VkMemoryDecompressionMethodFlagBitsNV {
    return static_cast<VkMemoryDecompressionMethodFlagBitsNV>(e);
  }

  #define RETINA_ENUM_AS_STRING_OVERLOAD(E, T)             \
    constexpr auto ToString(T e) noexcept -> std::string { \
      return RETINA_CONCAT(string_, E)(e);                 \
    }

  #define RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(E, T)     \
    constexpr auto ToString(T e) noexcept -> std::string {    \
      return RETINA_CONCAT(string_, E)(AsEnumCounterpart(e)); \
    }

  #define RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(E, T) \
    constexpr auto ToString(T e) noexcept -> std::string {         \
      return RETINA_CONCAT(string_, E)(AsEnumCounterpart(e));      \
    }                                                              \
                                                                   \
    constexpr auto ToString(E e) noexcept -> std::string {         \
      return RETINA_CONCAT(string_, E)(e);                         \
    }

  #define RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(F, T, E) \
    RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(E, T)    \
    RETINA_ENUM_AS_STRING_OVERLOAD(E, F)

  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkResult, EResult)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkStructureType, EStructureType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPipelineCacheHeaderVersion, EPipelineCacheHeaderVersion)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkImageLayout, EImageLayout)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkObjectType, EObjectType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkVendorId, EVendorId)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSystemAllocationScope, ESystemAllocationScope)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkInternalAllocationType, EInternalAllocationType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFormat, EResourceFormat)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkImageTiling, EImageTiling)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkImageType, EImageType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPhysicalDeviceType, EPhysicalDeviceType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkQueryType, EQueryType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSharingMode, ESharingMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkComponentSwizzle, EComponentSwizzle)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkImageViewType, EImageViewType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBlendFactor, EBlendFactor)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBlendOp, EBlendOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCompareOp, ECompareOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDynamicState, EDynamicState)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFrontFace, EFrontFace)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkVertexInputRate, EVertexInputRate)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPrimitiveTopology, EPrimitiveTopology)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPolygonMode, EPolygonMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkStencilOp, EStencilOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkLogicOp, ELogicOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBorderColor, EBorderColor)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFilter, EFilter)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSamplerAddressMode, ESamplerAddressMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSamplerMipmapMode, ESamplerMipmapMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDescriptorType, EDescriptorType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAttachmentLoadOp, EAttachmentLoadOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAttachmentStoreOp, EAttachmentStoreOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPipelineBindPoint, EPipelineBindPoint)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCommandBufferLevel, ECommandBufferLevel)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkIndexType, EIndexType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSubpassContents, ESubpassContents)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageAspectFlagBits, EImageAspectFlag, VkImageAspectFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageCreateFlagBits, EImageCreateFlag, VkImageCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSampleCountFlagBits, ESampleCountFlag, VkSampleCountFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageUsageFlagBits, EImageUsageFlag, VkImageUsageFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkInstanceCreateFlagBits, EInstanceCreateFlag, VkInstanceCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkMemoryHeapFlagBits, EMemoryHeapFlag, VkMemoryHeapFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkMemoryPropertyFlagBits, EMemoryPropertyFlag, VkMemoryPropertyFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkQueueFlagBits, EQueueFlag, VkQueueFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDeviceQueueCreateFlagBits, EDeviceQueueCreateFlag, VkDeviceQueueCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSparseMemoryBindFlagBits, ESparseMemoryBindFlag, VkSparseMemoryBindFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSparseImageFormatFlagBits, ESparseImageFormatFlag, VkSparseImageFormatFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkFenceCreateFlagBits, EFenceCreateFlag, VkFenceCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkEventCreateFlagBits, EEventCreateFlag, VkEventCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkQueryPipelineStatisticFlagBits, EQueryPipelineStatisticFlag, VkQueryPipelineStatisticFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkQueryResultFlagBits, EQueryResultFlag, VkQueryResultFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkBufferCreateFlagBits, EBufferCreateFlag, VkBufferCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageViewCreateFlagBits, EImageViewCreateFlag, VkImageViewCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineCacheCreateFlagBits, EPipelineCacheCreateFlag, VkPipelineCacheCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkColorComponentFlagBits, EColorComponentFlag, VkColorComponentFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineShaderStageCreateFlagBits, EPipelineShaderStageCreateFlag, VkPipelineShaderStageCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkShaderStageFlagBits, EShaderStageFlag, VkShaderStageFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCullModeFlagBits, ECullModeFlag, VkCullModeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineDepthStencilStateCreateFlagBits, EPipelineDepthStencilStateCreateFlag, VkPipelineDepthStencilStateCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineColorBlendStateCreateFlagBits, EPipelineColorBlendStateCreateFlag, VkPipelineColorBlendStateCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineLayoutCreateFlagBits, EPipelineLayoutCreateFlag, VkPipelineLayoutCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSamplerCreateFlagBits, ESamplerCreateFlag, VkSamplerCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDescriptorPoolCreateFlagBits, EDescriptorPoolCreateFlag, VkDescriptorPoolCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDescriptorSetLayoutCreateFlagBits, EDescriptorLayoutCreateFlag, VkDescriptorSetLayoutCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkAttachmentDescriptionFlagBits, EAttachmentDescriptionFlag, VkAttachmentDescriptionFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDependencyFlagBits, EDependencyFlag, VkDependencyFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkFramebufferCreateFlagBits, EFramebufferCreateFlag, VkFramebufferCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkRenderPassCreateFlagBits, ERenderPassCreateFlag, VkRenderPassCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSubpassDescriptionFlagBits, ESubpassDescriptionFlag, VkSubpassDescriptionFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCommandPoolCreateFlagBits, ECommandPoolCreateFlag, VkCommandPoolCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCommandPoolResetFlagBits, ECommandPoolResetFlag, VkCommandPoolResetFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCommandBufferUsageFlagBits, ECommandBufferUsageFlag, VkCommandBufferUsageFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkQueryControlFlagBits, EQueryControlFlag, VkQueryControlFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCommandBufferResetFlagBits, ECommandBufferResetFlag, VkCommandBufferResetFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkStencilFaceFlagBits, EStencilFaceFlag, VkStencilFaceFlags)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPointClippingBehavior, EPointClippingBehavior)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkTessellationDomainOrigin, ETessellationDomainOrigin)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSamplerYcbcrModelConversion, ESamplerYcbcrModelConversion)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSamplerYcbcrRange, ESamplerYcbcrRange)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkChromaLocation, EChromaLocation)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDescriptorUpdateTemplateType, EDescriptorUpdateTemplateType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSubgroupFeatureFlagBits, ESubgroupFeatureFlag, VkSubgroupFeatureFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPeerMemoryFeatureFlagBits, EPeerMemoryFeatureFlag, VkPeerMemoryFeatureFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkMemoryAllocateFlagBits, EMemoryAllocateFlag, VkMemoryAllocateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalMemoryHandleTypeFlagBits, EExternalMemoryHandleTypeFlag, VkExternalMemoryHandleTypeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalMemoryFeatureFlagBits, EExternalMemoryFeatureFlag, VkExternalMemoryFeatureFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalFenceHandleTypeFlagBits, EExternalFenceHandleTypeFlag, VkExternalFenceHandleTypeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalFenceFeatureFlagBits, EExternalFenceFeatureFlag, VkExternalFenceFeatureFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkFenceImportFlagBits, EFenceImportFlag, VkFenceImportFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSemaphoreImportFlagBits, ESemaphoreImportFlag, VkSemaphoreImportFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalSemaphoreHandleTypeFlagBits, EExternalSemaphoreHandleTypeFlag, VkExternalSemaphoreHandleTypeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkExternalSemaphoreFeatureFlagBits, EExternalSemaphoreFeatureFlag, VkExternalSemaphoreFeatureFlags)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDriverId, EDriverId)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkShaderFloatControlsIndependence, EShaderFloatControlsIndependence)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSamplerReductionMode, ESamplerReductionMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSemaphoreType, ESemaphoreType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkResolveModeFlagBits, EResolveModeFlag, VkResolveModeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDescriptorBindingFlagBits, EDescriptorBindingFlag, VkDescriptorBindingFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSemaphoreWaitFlagBits, ESemaphoreWaitFlag, VkSemaphoreWaitFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineCreationFeedbackFlagBits, EPipelineCreationFeedbackFlag, VkPipelineCreationFeedbackFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkToolPurposeFlagBits, EToolPurposeFlag, VkToolPurposeFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSubmitFlagBits, ESubmitFlag, VkSubmitFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkRenderingFlagBits, ERenderingFlag, VkRenderingFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkFormatFeatureFlagBits, EFormatFeatureFlag, VkFormatFeatureFlags)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPresentModeKHR, EPresentMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkColorSpaceKHR, EColorSpace)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSurfaceTransformFlagBitsKHR, ESurfaceTransformFlag, VkSurfaceTransformFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkCompositeAlphaFlagBitsKHR, ECompositeAlphaFlag, VkCompositeAlphaFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSwapchainCreateFlagBitsKHR, ESwapchainCreateFlag, VkSwapchainCreateFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDeviceGroupPresentModeFlagBitsKHR, EDeviceGroupPresentModeFlag, VkDeviceGroupPresentModeFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDisplayPlaneAlphaFlagBitsKHR, EDisplayPlaneAlphaFlag, VkDisplayPlaneAlphaFlagsKHR)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkQueryResultStatusKHR, EQueryResultStatus)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoCodecOperationFlagBitsKHR, EVideoCodecOperationFlag, VkVideoCodecOperationFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoChromaSubsamplingFlagBitsKHR, EVideoChromaSubsamplingFlag, VkVideoChromaSubsamplingFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoComponentBitDepthFlagBitsKHR, EVideoComponentBitDepthFlag, VkVideoComponentBitDepthFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoCapabilityFlagBitsKHR, EVideoCapabilityFlag, VkVideoCapabilityFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoSessionCreateFlagBitsKHR, EVideoSessionCreateFlag, VkVideoSessionCreateFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoCodingControlFlagBitsKHR, EVideoCodingControlFlag, VkVideoCodingControlFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoDecodeCapabilityFlagBitsKHR, EVideoDecodeCapabilityFlag, VkVideoDecodeCapabilityFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoDecodeUsageFlagBitsKHR, EVideoDecodeUsageFlag, VkVideoDecodeUsageFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH264CapabilityFlagBitsKHR, EVideoEncodeH264CapabilityFlag, VkVideoEncodeH264CapabilityFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH264StdFlagBitsKHR, EVideoEncodeH264StdFlag, VkVideoEncodeH264StdFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH264RateControlFlagBitsKHR, EVideoEncodeH264RateControlFlag, VkVideoEncodeH264RateControlFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH265CapabilityFlagBitsKHR, EVideoEncodeH265CapabilityFlag, VkVideoEncodeH265CapabilityFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH265StdFlagBitsKHR, EVideoEncodeH265StdFlag, VkVideoEncodeH265StdFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH265CtbSizeFlagBitsKHR, EVideoEncodeH265CtbSizeFlag, VkVideoEncodeH265CtbSizeFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH265TransformBlockSizeFlagBitsKHR, EVideoEncodeH265TransformBlockSizeFlag, VkVideoEncodeH265TransformBlockSizeFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeH265RateControlFlagBitsKHR, EVideoEncodeH265RateControlFlag, VkVideoEncodeH265RateControlFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoDecodeH264PictureLayoutFlagBitsKHR, EVideoDecodeH264PictureLayoutFlag, VkVideoDecodeH264PictureLayoutFlagsKHR)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceCounterUnitKHR, EPerformanceCounterUnit)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceCounterScopeKHR, EPerformanceCounterScope)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceCounterStorageKHR, EPerformanceCounterStorage)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPerformanceCounterDescriptionFlagBitsKHR, EPerformanceCounterDescriptionFlag, VkPerformanceCounterDescriptionFlagsKHR)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkQueueGlobalPriorityKHR, EQueueGlobalPriority)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFragmentShadingRateCombinerOpKHR, EFragmentShadingRateCombinerOperator)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPipelineExecutableStatisticFormatKHR, EPipelineExecutableStatisticFormat)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkVideoEncodeTuningModeKHR, EVideoEncodeTuningMode)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeCapabilityFlagBitsKHR, EVideoEncodeCapabilityFlag, VkVideoEncodeCapabilityFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeRateControlModeFlagBitsKHR, EVideoEncodeRateControlModeFlag, VkVideoEncodeRateControlModeFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeFeedbackFlagBitsKHR, EVideoEncodeFeedbackFlag, VkVideoEncodeFeedbackFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeUsageFlagBitsKHR, EVideoEncodeUsageFlag, VkVideoEncodeUsageFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkVideoEncodeContentFlagBitsKHR, EVideoEncodeContentFlag, VkVideoEncodeContentFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPipelineCreateFlagBits, EPipelineCreateFlag, VkPipelineCreateFlags)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkBufferUsageFlagBits, EBufferUsageFlag, VkBufferUsageFlags)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkComponentTypeKHR, EComponentType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkScopeKHR, EScope)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkTimeDomainKHR, ETimeDomain)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDebugReportObjectTypeEXT, EDebugReportObjectType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDebugReportFlagBitsEXT, EDebugReportFlag, VkDebugReportFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkRasterizationOrderAMD, ERasterizationOrder)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkShaderInfoTypeAMD, EShaderInfoType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkValidationCheckEXT, EValidationCheck)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPipelineRobustnessBufferBehaviorEXT, EPipelineRobustnessBufferBehavior)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPipelineRobustnessImageBehaviorEXT, EPipelineRobustnessImageBehavior)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkConditionalRenderingFlagBitsEXT, EConditionalRenderingFlag, VkConditionalRenderingFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkSurfaceCounterFlagBitsEXT, ESurfaceCounterFlag, VkSurfaceCounterFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDisplayPowerStateEXT, EDisplayPowerState)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDeviceEventTypeEXT, EDeviceEventType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDisplayEventTypeEXT, EDisplayEventType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkViewportCoordinateSwizzleNV, EViewportCoordinateSwizzle)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDiscardRectangleModeEXT, EDiscardRectangleMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkConservativeRasterizationModeEXT, EConservativeRasterizationMode)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDebugUtilsMessageSeverityFlagBitsEXT, EDebugUtilsMessageSeverityFlag, VkDebugUtilsMessageSeverityFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDebugUtilsMessageTypeFlagBitsEXT, EDebugUtilsMessageTypeFlag, VkDebugUtilsMessageTypeFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBlendOverlapEXT, EBlendOverlap)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCoverageModulationModeNV, ECoverageModulationMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkValidationCacheHeaderVersionEXT, EValidationCacheHeaderVersion)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkShadingRatePaletteEntryNV, EShadingRatePaletteEntry)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCoarseSampleOrderTypeNV, ECoarseSampleOrderType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkRayTracingShaderGroupTypeKHR, ERayTracingShaderGroupType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkGeometryTypeKHR, EGeometryType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAccelerationStructureTypeKHR, EAccelerationStructureType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCopyAccelerationStructureModeKHR, ECopyAccelerationStructureMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAccelerationStructureMemoryRequirementsTypeNV, EAccelerationStructureMemoryRequirementsType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkGeometryFlagBitsKHR, EGeometryFlag, VkGeometryFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkGeometryInstanceFlagBitsKHR, EGeometryInstanceFlag, VkGeometryInstanceFlagsKHR)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkBuildAccelerationStructureFlagBitsKHR, EBuildAccelerationStructureFlag, VkBuildAccelerationStructureFlagsKHR)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkMemoryOverallocationBehaviorAMD, EMemoryOverallocationBehavior)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceConfigurationTypeINTEL, EPerformanceConfigurationType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkQueryPoolSamplingModeINTEL, EQueryPoolSamplingMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceOverrideTypeINTEL, EPerformanceOverrideType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceParameterTypeINTEL, EPerformanceParameterType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkPerformanceValueTypeINTEL, EPerformanceValueType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkValidationFeatureEnableEXT, EValidationFeatureEnable)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkValidationFeatureDisableEXT, EValidationFeatureDisable)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCoverageReductionModeNV, ECoverageReductionMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkProvokingVertexModeEXT, EProvokingVertexMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkLineRasterizationModeEXT, ELineRasterizationMode)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkHostImageCopyFlagBitsEXT, EHostImageCopyFlag, VkHostImageCopyFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPresentScalingFlagBitsEXT, EPresentScalingFlag, VkPresentScalingFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkPresentGravityFlagBitsEXT, EPresentGravityFlag, VkPresentGravityFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkIndirectCommandsTokenTypeNV, EIndirectCommandsTokenType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkIndirectStateFlagBitsNV, EIndirectStateFlag, VkIndirectStateFlagsNV)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkIndirectCommandsLayoutUsageFlagBitsNV, EIndirectCommandsLayoutUsageFlag, VkIndirectCommandsLayoutUsageFlagsNV)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDepthBiasRepresentationEXT, EDepthBiasRepresentation)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDeviceMemoryReportEventTypeEXT, EDeviceMemoryReportEventType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDeviceDiagnosticsConfigFlagBitsNV, EDeviceDiagnosticsConfigFlag, VkDeviceDiagnosticsConfigFlagsNV)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkGraphicsPipelineLibraryFlagBitsEXT, EGraphicsPipelineLibraryFlag, VkGraphicsPipelineLibraryFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFragmentShadingRateTypeNV, EFragmentShadingRateType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkFragmentShadingRateNV, EFragmentShadingRate)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAccelerationStructureMotionInstanceTypeNV, EAccelerationStructureMotionInstanceType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageCompressionFlagBitsEXT, EImageCompressionFlag, VkImageCompressionFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkImageCompressionFixedRateFlagBitsEXT, EImageCompressionFixedRateFlag, VkImageCompressionFixedRateFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDeviceFaultAddressTypeEXT, EDeviceFaultAddressType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDeviceFaultVendorBinaryHeaderVersionEXT, EDeviceFaultVendorBinaryHeaderVersion)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDeviceAddressBindingTypeEXT, EDeviceAddressBindingType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkDeviceAddressBindingFlagBitsEXT, EDeviceAddressBindingFlag, VkDeviceAddressBindingFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkFrameBoundaryFlagBitsEXT, EFrameBoundaryFlag, VkFrameBoundaryFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkMicromapTypeEXT, EMicromapType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBuildMicromapModeEXT, EBuildMicromapMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCopyMicromapModeEXT, ECopyMicromapMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkOpacityMicromapFormatEXT, EOpacityMicromapFormat)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkOpacityMicromapSpecialIndexEXT, EOpacityMicromapSpecialIndex)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAccelerationStructureCompatibilityKHR, EAccelerationStructureCompatibility)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkAccelerationStructureBuildTypeKHR, EAccelerationStructureBuildType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkBuildMicromapFlagBitsEXT, EBuildMicromapFlag, VkBuildMicromapFlagsEXT)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkMicromapCreateFlagBitsEXT, EMicromapCreateFlag, VkMicromapCreateFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkSubpassMergeStatusEXT, ESubpassMergeStatus)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkDirectDriverLoadingModeLUNARG, EDirectDriverLoadingMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkOpticalFlowPerformanceLevelNV, EOpticalFlowPerformanceLevel)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkOpticalFlowSessionBindingPointNV, EOpticalFlowSessionBindingPoint)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkOpticalFlowGridSizeFlagBitsNV, EOpticalFlowGridSizeFlag, VkOpticalFlowGridSizeFlagsNV)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkOpticalFlowUsageFlagBitsNV, EOpticalFlowUsageFlag, VkOpticalFlowUsageFlagsNV)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkOpticalFlowSessionCreateFlagBitsNV, EOpticalFlowSessionCreateFlag, VkOpticalFlowSessionCreateFlagsNV)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkOpticalFlowExecuteFlagBitsNV, EOpticalFlowExecuteFlag, VkOpticalFlowExecuteFlagsNV)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkShaderCodeTypeEXT, EShaderCodeType)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkShaderCreateFlagBitsEXT, EShaderCreateFlag, VkShaderCreateFlagsEXT)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkRayTracingInvocationReorderModeNV, ERayTracingInvocationReorderMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkLayerSettingTypeEXT, ELayerSettingType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkLatencyMarkerNV, ELatencyMarker)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkOutOfBandQueueTypeNV, EOutOfBandQueueType)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBlockMatchWindowCompareModeQCOM, EBlockMatchWindowCompareMode)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkCubicFilterWeightsQCOM, ECubicFilterWeights)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkLayeredDriverUnderlyingApiMSFT, ELayeredDriverUnderlyingApi)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkBuildAccelerationStructureModeKHR, EBuildAccelerationStructureMode)
  RETINA_FLAG_ENUM_AS_STRING_OVERLOAD(VkAccelerationStructureCreateFlagBitsKHR, EAccelerationStructureCreateFlag, VkAccelerationStructureCreateFlagsKHR)
  RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD(VkShaderGroupShaderKHR, EShaderGroupShader)

  RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(VkAccessFlagBits2, EResourceAccessFlag)
  RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(VkPipelineStageFlagBits2, EPipelineStageFlag)
  RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(VkPhysicalDeviceSchedulingControlsFlagBitsARM, EPhysicalDeviceSchedulingControlsFlag)
  RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD(VkMemoryDecompressionMethodFlagBitsNV, EMemoryDecompressionMethodFlag)

  #undef RETINA_ENUM_AS_STRING_OVERLOAD
  #undef RETINA_ENUM_AS_STRING_CONVERSION_OVERLOAD
  #undef RETINA_ENUM_AS_STRING_BASE_AND_CONVERSION_OVERLOAD
  #undef RETINA_FLAG_ENUM_AS_STRING_OVERLOAD
 
  // Useful constants 
  constexpr auto EXTERNAL_SUBPASS = VK_SUBPASS_EXTERNAL;
  constexpr auto LOD_CLAMP_NONE = VK_LOD_CLAMP_NONE;
  constexpr auto SUBRESOURCE_LEVEL_IGNORED = -1_u32;
  constexpr auto SUBRESOURCE_LAYER_IGNORED = -1_u32;
  constexpr auto SUBRESOURCE_REMAINING_LEVELS = VK_REMAINING_MIP_LEVELS;
  constexpr auto SUBRESOURCE_REMAINING_LAYERS = VK_REMAINING_ARRAY_LAYERS;
  constexpr auto WHOLE_SIZE = VK_WHOLE_SIZE;
  constexpr auto ATTACHMENT_UNUSED = VK_ATTACHMENT_UNUSED;
  constexpr auto QUEUE_FAMILY_IGNORED = VK_QUEUE_FAMILY_IGNORED;

  template <typename T, typename U = std::underlying_type_t<T>>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator &(T left, T right) noexcept -> T {
    return static_cast<T>(static_cast<U>(left) & static_cast<U>(right));
  }

  template <typename T, typename U = std::underlying_type_t<T>>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator |(T left, T right) noexcept -> T {
    return static_cast<T>(static_cast<U>(left) | static_cast<U>(right));
  }

  template <typename T, typename U = std::underlying_type_t<T>>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator ^(T left, T right) noexcept -> T {
    return static_cast<T>(static_cast<U>(left) ^ static_cast<U>(right));
  }

  template <typename T>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator &=(T& left, T right) noexcept -> T& {
    return left = left & right;
  }

  template <typename T>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator |=(T& left, T right) noexcept -> T& {
    return left = left | right;
  }

  template <typename T>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator ^=(T& left, T right) noexcept -> T& {
    return left = left ^ right;
  }

  template <typename T, typename U = std::underlying_type_t<T>>
    requires (std::is_scoped_enum_v<T>)
  RETINA_NODISCARD constexpr auto operator ~(T value) noexcept -> T {
    return static_cast<T>(~static_cast<U>(value));
  }
}
